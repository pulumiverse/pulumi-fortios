// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package antivirus

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure AntiVirus profiles.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/antivirus"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := antivirus.NewProfile(ctx, "trname", &antivirus.ProfileArgs{
//				AnalyticsBlFiletype: pulumi.Int(0),
//				AnalyticsDb:         pulumi.String("disable"),
//				AnalyticsMaxUpload:  pulumi.Int(10),
//				AnalyticsWlFiletype: pulumi.Int(0),
//				AvBlockLog:          pulumi.String("enable"),
//				AvVirusLog:          pulumi.String("enable"),
//				ExtendedLog:         pulumi.String("disable"),
//				FtgdAnalytics:       pulumi.String("disable"),
//				InspectionMode:      pulumi.String("flow-based"),
//				MobileMalwareDb:     pulumi.String("enable"),
//				ScanMode:            pulumi.String("quick"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Antivirus Profile can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:antivirus/profile:Profile labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:antivirus/profile:Profile labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Profile struct {
	pulumi.CustomResourceState

	// Only submit files matching this DLP file-pattern to FortiSandbox.
	AnalyticsAcceptFiletype pulumi.IntOutput `pulumi:"analyticsAcceptFiletype"`
	// Only submit files matching this DLP file-pattern to FortiSandbox.
	AnalyticsBlFiletype pulumi.IntOutput `pulumi:"analyticsBlFiletype"`
	// Enable/disable using the FortiSandbox signature database to supplement the AV signature databases. Valid values: `disable`, `enable`.
	AnalyticsDb pulumi.StringOutput `pulumi:"analyticsDb"`
	// Do not submit files matching this DLP file-pattern to FortiSandbox (post-transfer scan only).
	AnalyticsIgnoreFiletype pulumi.IntOutput `pulumi:"analyticsIgnoreFiletype"`
	// Maximum size of files that can be uploaded to FortiSandbox.
	AnalyticsMaxUpload pulumi.IntOutput `pulumi:"analyticsMaxUpload"`
	// Do not submit files matching this DLP file-pattern to FortiSandbox.
	AnalyticsWlFiletype pulumi.IntOutput `pulumi:"analyticsWlFiletype"`
	// Enable/disable logging for AntiVirus file blocking. Valid values: `enable`, `disable`.
	AvBlockLog pulumi.StringOutput `pulumi:"avBlockLog"`
	// Enable/disable AntiVirus logging. Valid values: `enable`, `disable`.
	AvVirusLog pulumi.StringOutput `pulumi:"avVirusLog"`
	// Configure CIFS AntiVirus options. The structure of `cifs` block is documented below.
	Cifs ProfileCifsOutput `pulumi:"cifs"`
	// Comment.
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// AV Content Disarm and Reconstruction settings. The structure of `contentDisarm` block is documented below.
	ContentDisarm ProfileContentDisarmOutput `pulumi:"contentDisarm"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Enable/disable use of EMS threat feed when performing AntiVirus scan. Analyzes files including the content of archives. Valid values: `disable`, `enable`.
	EmsThreatFeed pulumi.StringOutput `pulumi:"emsThreatFeed"`
	// Enable/disable extended logging for antivirus. Valid values: `enable`, `disable`.
	ExtendedLog pulumi.StringOutput `pulumi:"extendedLog"`
	// Enable/disable all external blocklists. Valid values: `disable`, `enable`.
	ExternalBlocklistEnableAll pulumi.StringOutput `pulumi:"externalBlocklistEnableAll"`
	// One or more external malware block lists. The structure of `externalBlocklist` block is documented below.
	ExternalBlocklists ProfileExternalBlocklistArrayOutput `pulumi:"externalBlocklists"`
	// Flow/proxy feature set. Valid values: `flow`, `proxy`.
	FeatureSet pulumi.StringOutput `pulumi:"featureSet"`
	// Action to take if FortiAI encounters an error. Valid values: `log-only`, `block`, `ignore`.
	FortiaiErrorAction pulumi.StringOutput `pulumi:"fortiaiErrorAction"`
	// Action to take if FortiAI encounters a scan timeout. Valid values: `log-only`, `block`, `ignore`.
	FortiaiTimeoutAction pulumi.StringOutput `pulumi:"fortiaiTimeoutAction"`
	// Action to take if FortiNDR encounters an error. Valid values: `log-only`, `block`, `ignore`.
	FortindrErrorAction pulumi.StringOutput `pulumi:"fortindrErrorAction"`
	// Action to take if FortiNDR encounters a scan timeout. Valid values: `log-only`, `block`, `ignore`.
	FortindrTimeoutAction pulumi.StringOutput `pulumi:"fortindrTimeoutAction"`
	// Action to take if FortiSandbox inline scan encounters an error. Valid values: `log-only`, `block`, `ignore`.
	FortisandboxErrorAction pulumi.StringOutput `pulumi:"fortisandboxErrorAction"`
	// Maximum size of files that can be uploaded to FortiSandbox.
	FortisandboxMaxUpload pulumi.IntOutput `pulumi:"fortisandboxMaxUpload"`
	// FortiSandbox scan modes. Valid values: `inline`, `analytics-suspicious`, `analytics-everything`.
	FortisandboxMode pulumi.StringOutput `pulumi:"fortisandboxMode"`
	// Action to take if FortiSandbox inline scan encounters a scan timeout. Valid values: `log-only`, `block`, `ignore`.
	FortisandboxTimeoutAction pulumi.StringOutput `pulumi:"fortisandboxTimeoutAction"`
	// Settings to control which files are uploaded to FortiSandbox. Valid values: `disable`, `suspicious`, `everything`.
	FtgdAnalytics pulumi.StringOutput `pulumi:"ftgdAnalytics"`
	// Configure FTP AntiVirus options. The structure of `ftp` block is documented below.
	Ftp ProfileFtpOutput `pulumi:"ftp"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Configure HTTP AntiVirus options. The structure of `http` block is documented below.
	Http ProfileHttpOutput `pulumi:"http"`
	// Configure IMAP AntiVirus options. The structure of `imap` block is documented below.
	Imap ProfileImapOutput `pulumi:"imap"`
	// Inspection mode. Valid values: `proxy`, `flow-based`.
	InspectionMode pulumi.StringOutput `pulumi:"inspectionMode"`
	// Configure MAPI AntiVirus options. The structure of `mapi` block is documented below.
	Mapi ProfileMapiOutput `pulumi:"mapi"`
	// Enable/disable using the mobile malware signature database. Valid values: `disable`, `enable`.
	MobileMalwareDb pulumi.StringOutput `pulumi:"mobileMalwareDb"`
	// Configure AntiVirus quarantine settings. The structure of `nacQuar` block is documented below.
	NacQuar ProfileNacQuarOutput `pulumi:"nacQuar"`
	// Profile name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Configure NNTP AntiVirus options. The structure of `nntp` block is documented below.
	Nntp ProfileNntpOutput `pulumi:"nntp"`
	// Configure Virus Outbreak Prevention settings. The structure of `outbreakPrevention` block is documented below.
	OutbreakPrevention ProfileOutbreakPreventionOutput `pulumi:"outbreakPrevention"`
	// Enable/disable outbreak-prevention archive scanning. Valid values: `disable`, `enable`.
	OutbreakPreventionArchiveScan pulumi.StringOutput `pulumi:"outbreakPreventionArchiveScan"`
	// Configure POP3 AntiVirus options. The structure of `pop3` block is documented below.
	Pop3 ProfilePop3Output `pulumi:"pop3"`
	// Replacement message group customized for this profile.
	ReplacemsgGroup pulumi.StringOutput `pulumi:"replacemsgGroup"`
	// Configure scan mode (default or legacy).
	ScanMode pulumi.StringOutput `pulumi:"scanMode"`
	// Configure SMB AntiVirus options. The structure of `smb` block is documented below.
	Smb ProfileSmbOutput `pulumi:"smb"`
	// Configure SMTP AntiVirus options. The structure of `smtp` block is documented below.
	Smtp ProfileSmtpOutput `pulumi:"smtp"`
	// Configure SFTP and SCP AntiVirus options. The structure of `ssh` block is documented below.
	Ssh ProfileSshOutput `pulumi:"ssh"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewProfile registers a new resource with the given unique name, arguments, and options.
func NewProfile(ctx *pulumi.Context,
	name string, args *ProfileArgs, opts ...pulumi.ResourceOption) (*Profile, error) {
	if args == nil {
		args = &ProfileArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Profile
	err := ctx.RegisterResource("fortios:antivirus/profile:Profile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProfile gets an existing Profile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProfileState, opts ...pulumi.ResourceOption) (*Profile, error) {
	var resource Profile
	err := ctx.ReadResource("fortios:antivirus/profile:Profile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Profile resources.
type profileState struct {
	// Only submit files matching this DLP file-pattern to FortiSandbox.
	AnalyticsAcceptFiletype *int `pulumi:"analyticsAcceptFiletype"`
	// Only submit files matching this DLP file-pattern to FortiSandbox.
	AnalyticsBlFiletype *int `pulumi:"analyticsBlFiletype"`
	// Enable/disable using the FortiSandbox signature database to supplement the AV signature databases. Valid values: `disable`, `enable`.
	AnalyticsDb *string `pulumi:"analyticsDb"`
	// Do not submit files matching this DLP file-pattern to FortiSandbox (post-transfer scan only).
	AnalyticsIgnoreFiletype *int `pulumi:"analyticsIgnoreFiletype"`
	// Maximum size of files that can be uploaded to FortiSandbox.
	AnalyticsMaxUpload *int `pulumi:"analyticsMaxUpload"`
	// Do not submit files matching this DLP file-pattern to FortiSandbox.
	AnalyticsWlFiletype *int `pulumi:"analyticsWlFiletype"`
	// Enable/disable logging for AntiVirus file blocking. Valid values: `enable`, `disable`.
	AvBlockLog *string `pulumi:"avBlockLog"`
	// Enable/disable AntiVirus logging. Valid values: `enable`, `disable`.
	AvVirusLog *string `pulumi:"avVirusLog"`
	// Configure CIFS AntiVirus options. The structure of `cifs` block is documented below.
	Cifs *ProfileCifs `pulumi:"cifs"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// AV Content Disarm and Reconstruction settings. The structure of `contentDisarm` block is documented below.
	ContentDisarm *ProfileContentDisarm `pulumi:"contentDisarm"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable use of EMS threat feed when performing AntiVirus scan. Analyzes files including the content of archives. Valid values: `disable`, `enable`.
	EmsThreatFeed *string `pulumi:"emsThreatFeed"`
	// Enable/disable extended logging for antivirus. Valid values: `enable`, `disable`.
	ExtendedLog *string `pulumi:"extendedLog"`
	// Enable/disable all external blocklists. Valid values: `disable`, `enable`.
	ExternalBlocklistEnableAll *string `pulumi:"externalBlocklistEnableAll"`
	// One or more external malware block lists. The structure of `externalBlocklist` block is documented below.
	ExternalBlocklists []ProfileExternalBlocklist `pulumi:"externalBlocklists"`
	// Flow/proxy feature set. Valid values: `flow`, `proxy`.
	FeatureSet *string `pulumi:"featureSet"`
	// Action to take if FortiAI encounters an error. Valid values: `log-only`, `block`, `ignore`.
	FortiaiErrorAction *string `pulumi:"fortiaiErrorAction"`
	// Action to take if FortiAI encounters a scan timeout. Valid values: `log-only`, `block`, `ignore`.
	FortiaiTimeoutAction *string `pulumi:"fortiaiTimeoutAction"`
	// Action to take if FortiNDR encounters an error. Valid values: `log-only`, `block`, `ignore`.
	FortindrErrorAction *string `pulumi:"fortindrErrorAction"`
	// Action to take if FortiNDR encounters a scan timeout. Valid values: `log-only`, `block`, `ignore`.
	FortindrTimeoutAction *string `pulumi:"fortindrTimeoutAction"`
	// Action to take if FortiSandbox inline scan encounters an error. Valid values: `log-only`, `block`, `ignore`.
	FortisandboxErrorAction *string `pulumi:"fortisandboxErrorAction"`
	// Maximum size of files that can be uploaded to FortiSandbox.
	FortisandboxMaxUpload *int `pulumi:"fortisandboxMaxUpload"`
	// FortiSandbox scan modes. Valid values: `inline`, `analytics-suspicious`, `analytics-everything`.
	FortisandboxMode *string `pulumi:"fortisandboxMode"`
	// Action to take if FortiSandbox inline scan encounters a scan timeout. Valid values: `log-only`, `block`, `ignore`.
	FortisandboxTimeoutAction *string `pulumi:"fortisandboxTimeoutAction"`
	// Settings to control which files are uploaded to FortiSandbox. Valid values: `disable`, `suspicious`, `everything`.
	FtgdAnalytics *string `pulumi:"ftgdAnalytics"`
	// Configure FTP AntiVirus options. The structure of `ftp` block is documented below.
	Ftp *ProfileFtp `pulumi:"ftp"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Configure HTTP AntiVirus options. The structure of `http` block is documented below.
	Http *ProfileHttp `pulumi:"http"`
	// Configure IMAP AntiVirus options. The structure of `imap` block is documented below.
	Imap *ProfileImap `pulumi:"imap"`
	// Inspection mode. Valid values: `proxy`, `flow-based`.
	InspectionMode *string `pulumi:"inspectionMode"`
	// Configure MAPI AntiVirus options. The structure of `mapi` block is documented below.
	Mapi *ProfileMapi `pulumi:"mapi"`
	// Enable/disable using the mobile malware signature database. Valid values: `disable`, `enable`.
	MobileMalwareDb *string `pulumi:"mobileMalwareDb"`
	// Configure AntiVirus quarantine settings. The structure of `nacQuar` block is documented below.
	NacQuar *ProfileNacQuar `pulumi:"nacQuar"`
	// Profile name.
	Name *string `pulumi:"name"`
	// Configure NNTP AntiVirus options. The structure of `nntp` block is documented below.
	Nntp *ProfileNntp `pulumi:"nntp"`
	// Configure Virus Outbreak Prevention settings. The structure of `outbreakPrevention` block is documented below.
	OutbreakPrevention *ProfileOutbreakPrevention `pulumi:"outbreakPrevention"`
	// Enable/disable outbreak-prevention archive scanning. Valid values: `disable`, `enable`.
	OutbreakPreventionArchiveScan *string `pulumi:"outbreakPreventionArchiveScan"`
	// Configure POP3 AntiVirus options. The structure of `pop3` block is documented below.
	Pop3 *ProfilePop3 `pulumi:"pop3"`
	// Replacement message group customized for this profile.
	ReplacemsgGroup *string `pulumi:"replacemsgGroup"`
	// Configure scan mode (default or legacy).
	ScanMode *string `pulumi:"scanMode"`
	// Configure SMB AntiVirus options. The structure of `smb` block is documented below.
	Smb *ProfileSmb `pulumi:"smb"`
	// Configure SMTP AntiVirus options. The structure of `smtp` block is documented below.
	Smtp *ProfileSmtp `pulumi:"smtp"`
	// Configure SFTP and SCP AntiVirus options. The structure of `ssh` block is documented below.
	Ssh *ProfileSsh `pulumi:"ssh"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type ProfileState struct {
	// Only submit files matching this DLP file-pattern to FortiSandbox.
	AnalyticsAcceptFiletype pulumi.IntPtrInput
	// Only submit files matching this DLP file-pattern to FortiSandbox.
	AnalyticsBlFiletype pulumi.IntPtrInput
	// Enable/disable using the FortiSandbox signature database to supplement the AV signature databases. Valid values: `disable`, `enable`.
	AnalyticsDb pulumi.StringPtrInput
	// Do not submit files matching this DLP file-pattern to FortiSandbox (post-transfer scan only).
	AnalyticsIgnoreFiletype pulumi.IntPtrInput
	// Maximum size of files that can be uploaded to FortiSandbox.
	AnalyticsMaxUpload pulumi.IntPtrInput
	// Do not submit files matching this DLP file-pattern to FortiSandbox.
	AnalyticsWlFiletype pulumi.IntPtrInput
	// Enable/disable logging for AntiVirus file blocking. Valid values: `enable`, `disable`.
	AvBlockLog pulumi.StringPtrInput
	// Enable/disable AntiVirus logging. Valid values: `enable`, `disable`.
	AvVirusLog pulumi.StringPtrInput
	// Configure CIFS AntiVirus options. The structure of `cifs` block is documented below.
	Cifs ProfileCifsPtrInput
	// Comment.
	Comment pulumi.StringPtrInput
	// AV Content Disarm and Reconstruction settings. The structure of `contentDisarm` block is documented below.
	ContentDisarm ProfileContentDisarmPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable use of EMS threat feed when performing AntiVirus scan. Analyzes files including the content of archives. Valid values: `disable`, `enable`.
	EmsThreatFeed pulumi.StringPtrInput
	// Enable/disable extended logging for antivirus. Valid values: `enable`, `disable`.
	ExtendedLog pulumi.StringPtrInput
	// Enable/disable all external blocklists. Valid values: `disable`, `enable`.
	ExternalBlocklistEnableAll pulumi.StringPtrInput
	// One or more external malware block lists. The structure of `externalBlocklist` block is documented below.
	ExternalBlocklists ProfileExternalBlocklistArrayInput
	// Flow/proxy feature set. Valid values: `flow`, `proxy`.
	FeatureSet pulumi.StringPtrInput
	// Action to take if FortiAI encounters an error. Valid values: `log-only`, `block`, `ignore`.
	FortiaiErrorAction pulumi.StringPtrInput
	// Action to take if FortiAI encounters a scan timeout. Valid values: `log-only`, `block`, `ignore`.
	FortiaiTimeoutAction pulumi.StringPtrInput
	// Action to take if FortiNDR encounters an error. Valid values: `log-only`, `block`, `ignore`.
	FortindrErrorAction pulumi.StringPtrInput
	// Action to take if FortiNDR encounters a scan timeout. Valid values: `log-only`, `block`, `ignore`.
	FortindrTimeoutAction pulumi.StringPtrInput
	// Action to take if FortiSandbox inline scan encounters an error. Valid values: `log-only`, `block`, `ignore`.
	FortisandboxErrorAction pulumi.StringPtrInput
	// Maximum size of files that can be uploaded to FortiSandbox.
	FortisandboxMaxUpload pulumi.IntPtrInput
	// FortiSandbox scan modes. Valid values: `inline`, `analytics-suspicious`, `analytics-everything`.
	FortisandboxMode pulumi.StringPtrInput
	// Action to take if FortiSandbox inline scan encounters a scan timeout. Valid values: `log-only`, `block`, `ignore`.
	FortisandboxTimeoutAction pulumi.StringPtrInput
	// Settings to control which files are uploaded to FortiSandbox. Valid values: `disable`, `suspicious`, `everything`.
	FtgdAnalytics pulumi.StringPtrInput
	// Configure FTP AntiVirus options. The structure of `ftp` block is documented below.
	Ftp ProfileFtpPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Configure HTTP AntiVirus options. The structure of `http` block is documented below.
	Http ProfileHttpPtrInput
	// Configure IMAP AntiVirus options. The structure of `imap` block is documented below.
	Imap ProfileImapPtrInput
	// Inspection mode. Valid values: `proxy`, `flow-based`.
	InspectionMode pulumi.StringPtrInput
	// Configure MAPI AntiVirus options. The structure of `mapi` block is documented below.
	Mapi ProfileMapiPtrInput
	// Enable/disable using the mobile malware signature database. Valid values: `disable`, `enable`.
	MobileMalwareDb pulumi.StringPtrInput
	// Configure AntiVirus quarantine settings. The structure of `nacQuar` block is documented below.
	NacQuar ProfileNacQuarPtrInput
	// Profile name.
	Name pulumi.StringPtrInput
	// Configure NNTP AntiVirus options. The structure of `nntp` block is documented below.
	Nntp ProfileNntpPtrInput
	// Configure Virus Outbreak Prevention settings. The structure of `outbreakPrevention` block is documented below.
	OutbreakPrevention ProfileOutbreakPreventionPtrInput
	// Enable/disable outbreak-prevention archive scanning. Valid values: `disable`, `enable`.
	OutbreakPreventionArchiveScan pulumi.StringPtrInput
	// Configure POP3 AntiVirus options. The structure of `pop3` block is documented below.
	Pop3 ProfilePop3PtrInput
	// Replacement message group customized for this profile.
	ReplacemsgGroup pulumi.StringPtrInput
	// Configure scan mode (default or legacy).
	ScanMode pulumi.StringPtrInput
	// Configure SMB AntiVirus options. The structure of `smb` block is documented below.
	Smb ProfileSmbPtrInput
	// Configure SMTP AntiVirus options. The structure of `smtp` block is documented below.
	Smtp ProfileSmtpPtrInput
	// Configure SFTP and SCP AntiVirus options. The structure of `ssh` block is documented below.
	Ssh ProfileSshPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (ProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*profileState)(nil)).Elem()
}

type profileArgs struct {
	// Only submit files matching this DLP file-pattern to FortiSandbox.
	AnalyticsAcceptFiletype *int `pulumi:"analyticsAcceptFiletype"`
	// Only submit files matching this DLP file-pattern to FortiSandbox.
	AnalyticsBlFiletype *int `pulumi:"analyticsBlFiletype"`
	// Enable/disable using the FortiSandbox signature database to supplement the AV signature databases. Valid values: `disable`, `enable`.
	AnalyticsDb *string `pulumi:"analyticsDb"`
	// Do not submit files matching this DLP file-pattern to FortiSandbox (post-transfer scan only).
	AnalyticsIgnoreFiletype *int `pulumi:"analyticsIgnoreFiletype"`
	// Maximum size of files that can be uploaded to FortiSandbox.
	AnalyticsMaxUpload *int `pulumi:"analyticsMaxUpload"`
	// Do not submit files matching this DLP file-pattern to FortiSandbox.
	AnalyticsWlFiletype *int `pulumi:"analyticsWlFiletype"`
	// Enable/disable logging for AntiVirus file blocking. Valid values: `enable`, `disable`.
	AvBlockLog *string `pulumi:"avBlockLog"`
	// Enable/disable AntiVirus logging. Valid values: `enable`, `disable`.
	AvVirusLog *string `pulumi:"avVirusLog"`
	// Configure CIFS AntiVirus options. The structure of `cifs` block is documented below.
	Cifs *ProfileCifs `pulumi:"cifs"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// AV Content Disarm and Reconstruction settings. The structure of `contentDisarm` block is documented below.
	ContentDisarm *ProfileContentDisarm `pulumi:"contentDisarm"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable use of EMS threat feed when performing AntiVirus scan. Analyzes files including the content of archives. Valid values: `disable`, `enable`.
	EmsThreatFeed *string `pulumi:"emsThreatFeed"`
	// Enable/disable extended logging for antivirus. Valid values: `enable`, `disable`.
	ExtendedLog *string `pulumi:"extendedLog"`
	// Enable/disable all external blocklists. Valid values: `disable`, `enable`.
	ExternalBlocklistEnableAll *string `pulumi:"externalBlocklistEnableAll"`
	// One or more external malware block lists. The structure of `externalBlocklist` block is documented below.
	ExternalBlocklists []ProfileExternalBlocklist `pulumi:"externalBlocklists"`
	// Flow/proxy feature set. Valid values: `flow`, `proxy`.
	FeatureSet *string `pulumi:"featureSet"`
	// Action to take if FortiAI encounters an error. Valid values: `log-only`, `block`, `ignore`.
	FortiaiErrorAction *string `pulumi:"fortiaiErrorAction"`
	// Action to take if FortiAI encounters a scan timeout. Valid values: `log-only`, `block`, `ignore`.
	FortiaiTimeoutAction *string `pulumi:"fortiaiTimeoutAction"`
	// Action to take if FortiNDR encounters an error. Valid values: `log-only`, `block`, `ignore`.
	FortindrErrorAction *string `pulumi:"fortindrErrorAction"`
	// Action to take if FortiNDR encounters a scan timeout. Valid values: `log-only`, `block`, `ignore`.
	FortindrTimeoutAction *string `pulumi:"fortindrTimeoutAction"`
	// Action to take if FortiSandbox inline scan encounters an error. Valid values: `log-only`, `block`, `ignore`.
	FortisandboxErrorAction *string `pulumi:"fortisandboxErrorAction"`
	// Maximum size of files that can be uploaded to FortiSandbox.
	FortisandboxMaxUpload *int `pulumi:"fortisandboxMaxUpload"`
	// FortiSandbox scan modes. Valid values: `inline`, `analytics-suspicious`, `analytics-everything`.
	FortisandboxMode *string `pulumi:"fortisandboxMode"`
	// Action to take if FortiSandbox inline scan encounters a scan timeout. Valid values: `log-only`, `block`, `ignore`.
	FortisandboxTimeoutAction *string `pulumi:"fortisandboxTimeoutAction"`
	// Settings to control which files are uploaded to FortiSandbox. Valid values: `disable`, `suspicious`, `everything`.
	FtgdAnalytics *string `pulumi:"ftgdAnalytics"`
	// Configure FTP AntiVirus options. The structure of `ftp` block is documented below.
	Ftp *ProfileFtp `pulumi:"ftp"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Configure HTTP AntiVirus options. The structure of `http` block is documented below.
	Http *ProfileHttp `pulumi:"http"`
	// Configure IMAP AntiVirus options. The structure of `imap` block is documented below.
	Imap *ProfileImap `pulumi:"imap"`
	// Inspection mode. Valid values: `proxy`, `flow-based`.
	InspectionMode *string `pulumi:"inspectionMode"`
	// Configure MAPI AntiVirus options. The structure of `mapi` block is documented below.
	Mapi *ProfileMapi `pulumi:"mapi"`
	// Enable/disable using the mobile malware signature database. Valid values: `disable`, `enable`.
	MobileMalwareDb *string `pulumi:"mobileMalwareDb"`
	// Configure AntiVirus quarantine settings. The structure of `nacQuar` block is documented below.
	NacQuar *ProfileNacQuar `pulumi:"nacQuar"`
	// Profile name.
	Name *string `pulumi:"name"`
	// Configure NNTP AntiVirus options. The structure of `nntp` block is documented below.
	Nntp *ProfileNntp `pulumi:"nntp"`
	// Configure Virus Outbreak Prevention settings. The structure of `outbreakPrevention` block is documented below.
	OutbreakPrevention *ProfileOutbreakPrevention `pulumi:"outbreakPrevention"`
	// Enable/disable outbreak-prevention archive scanning. Valid values: `disable`, `enable`.
	OutbreakPreventionArchiveScan *string `pulumi:"outbreakPreventionArchiveScan"`
	// Configure POP3 AntiVirus options. The structure of `pop3` block is documented below.
	Pop3 *ProfilePop3 `pulumi:"pop3"`
	// Replacement message group customized for this profile.
	ReplacemsgGroup *string `pulumi:"replacemsgGroup"`
	// Configure scan mode (default or legacy).
	ScanMode *string `pulumi:"scanMode"`
	// Configure SMB AntiVirus options. The structure of `smb` block is documented below.
	Smb *ProfileSmb `pulumi:"smb"`
	// Configure SMTP AntiVirus options. The structure of `smtp` block is documented below.
	Smtp *ProfileSmtp `pulumi:"smtp"`
	// Configure SFTP and SCP AntiVirus options. The structure of `ssh` block is documented below.
	Ssh *ProfileSsh `pulumi:"ssh"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Profile resource.
type ProfileArgs struct {
	// Only submit files matching this DLP file-pattern to FortiSandbox.
	AnalyticsAcceptFiletype pulumi.IntPtrInput
	// Only submit files matching this DLP file-pattern to FortiSandbox.
	AnalyticsBlFiletype pulumi.IntPtrInput
	// Enable/disable using the FortiSandbox signature database to supplement the AV signature databases. Valid values: `disable`, `enable`.
	AnalyticsDb pulumi.StringPtrInput
	// Do not submit files matching this DLP file-pattern to FortiSandbox (post-transfer scan only).
	AnalyticsIgnoreFiletype pulumi.IntPtrInput
	// Maximum size of files that can be uploaded to FortiSandbox.
	AnalyticsMaxUpload pulumi.IntPtrInput
	// Do not submit files matching this DLP file-pattern to FortiSandbox.
	AnalyticsWlFiletype pulumi.IntPtrInput
	// Enable/disable logging for AntiVirus file blocking. Valid values: `enable`, `disable`.
	AvBlockLog pulumi.StringPtrInput
	// Enable/disable AntiVirus logging. Valid values: `enable`, `disable`.
	AvVirusLog pulumi.StringPtrInput
	// Configure CIFS AntiVirus options. The structure of `cifs` block is documented below.
	Cifs ProfileCifsPtrInput
	// Comment.
	Comment pulumi.StringPtrInput
	// AV Content Disarm and Reconstruction settings. The structure of `contentDisarm` block is documented below.
	ContentDisarm ProfileContentDisarmPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable use of EMS threat feed when performing AntiVirus scan. Analyzes files including the content of archives. Valid values: `disable`, `enable`.
	EmsThreatFeed pulumi.StringPtrInput
	// Enable/disable extended logging for antivirus. Valid values: `enable`, `disable`.
	ExtendedLog pulumi.StringPtrInput
	// Enable/disable all external blocklists. Valid values: `disable`, `enable`.
	ExternalBlocklistEnableAll pulumi.StringPtrInput
	// One or more external malware block lists. The structure of `externalBlocklist` block is documented below.
	ExternalBlocklists ProfileExternalBlocklistArrayInput
	// Flow/proxy feature set. Valid values: `flow`, `proxy`.
	FeatureSet pulumi.StringPtrInput
	// Action to take if FortiAI encounters an error. Valid values: `log-only`, `block`, `ignore`.
	FortiaiErrorAction pulumi.StringPtrInput
	// Action to take if FortiAI encounters a scan timeout. Valid values: `log-only`, `block`, `ignore`.
	FortiaiTimeoutAction pulumi.StringPtrInput
	// Action to take if FortiNDR encounters an error. Valid values: `log-only`, `block`, `ignore`.
	FortindrErrorAction pulumi.StringPtrInput
	// Action to take if FortiNDR encounters a scan timeout. Valid values: `log-only`, `block`, `ignore`.
	FortindrTimeoutAction pulumi.StringPtrInput
	// Action to take if FortiSandbox inline scan encounters an error. Valid values: `log-only`, `block`, `ignore`.
	FortisandboxErrorAction pulumi.StringPtrInput
	// Maximum size of files that can be uploaded to FortiSandbox.
	FortisandboxMaxUpload pulumi.IntPtrInput
	// FortiSandbox scan modes. Valid values: `inline`, `analytics-suspicious`, `analytics-everything`.
	FortisandboxMode pulumi.StringPtrInput
	// Action to take if FortiSandbox inline scan encounters a scan timeout. Valid values: `log-only`, `block`, `ignore`.
	FortisandboxTimeoutAction pulumi.StringPtrInput
	// Settings to control which files are uploaded to FortiSandbox. Valid values: `disable`, `suspicious`, `everything`.
	FtgdAnalytics pulumi.StringPtrInput
	// Configure FTP AntiVirus options. The structure of `ftp` block is documented below.
	Ftp ProfileFtpPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Configure HTTP AntiVirus options. The structure of `http` block is documented below.
	Http ProfileHttpPtrInput
	// Configure IMAP AntiVirus options. The structure of `imap` block is documented below.
	Imap ProfileImapPtrInput
	// Inspection mode. Valid values: `proxy`, `flow-based`.
	InspectionMode pulumi.StringPtrInput
	// Configure MAPI AntiVirus options. The structure of `mapi` block is documented below.
	Mapi ProfileMapiPtrInput
	// Enable/disable using the mobile malware signature database. Valid values: `disable`, `enable`.
	MobileMalwareDb pulumi.StringPtrInput
	// Configure AntiVirus quarantine settings. The structure of `nacQuar` block is documented below.
	NacQuar ProfileNacQuarPtrInput
	// Profile name.
	Name pulumi.StringPtrInput
	// Configure NNTP AntiVirus options. The structure of `nntp` block is documented below.
	Nntp ProfileNntpPtrInput
	// Configure Virus Outbreak Prevention settings. The structure of `outbreakPrevention` block is documented below.
	OutbreakPrevention ProfileOutbreakPreventionPtrInput
	// Enable/disable outbreak-prevention archive scanning. Valid values: `disable`, `enable`.
	OutbreakPreventionArchiveScan pulumi.StringPtrInput
	// Configure POP3 AntiVirus options. The structure of `pop3` block is documented below.
	Pop3 ProfilePop3PtrInput
	// Replacement message group customized for this profile.
	ReplacemsgGroup pulumi.StringPtrInput
	// Configure scan mode (default or legacy).
	ScanMode pulumi.StringPtrInput
	// Configure SMB AntiVirus options. The structure of `smb` block is documented below.
	Smb ProfileSmbPtrInput
	// Configure SMTP AntiVirus options. The structure of `smtp` block is documented below.
	Smtp ProfileSmtpPtrInput
	// Configure SFTP and SCP AntiVirus options. The structure of `ssh` block is documented below.
	Ssh ProfileSshPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (ProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*profileArgs)(nil)).Elem()
}

type ProfileInput interface {
	pulumi.Input

	ToProfileOutput() ProfileOutput
	ToProfileOutputWithContext(ctx context.Context) ProfileOutput
}

func (*Profile) ElementType() reflect.Type {
	return reflect.TypeOf((**Profile)(nil)).Elem()
}

func (i *Profile) ToProfileOutput() ProfileOutput {
	return i.ToProfileOutputWithContext(context.Background())
}

func (i *Profile) ToProfileOutputWithContext(ctx context.Context) ProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileOutput)
}

// ProfileArrayInput is an input type that accepts ProfileArray and ProfileArrayOutput values.
// You can construct a concrete instance of `ProfileArrayInput` via:
//
//	ProfileArray{ ProfileArgs{...} }
type ProfileArrayInput interface {
	pulumi.Input

	ToProfileArrayOutput() ProfileArrayOutput
	ToProfileArrayOutputWithContext(context.Context) ProfileArrayOutput
}

type ProfileArray []ProfileInput

func (ProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Profile)(nil)).Elem()
}

func (i ProfileArray) ToProfileArrayOutput() ProfileArrayOutput {
	return i.ToProfileArrayOutputWithContext(context.Background())
}

func (i ProfileArray) ToProfileArrayOutputWithContext(ctx context.Context) ProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileArrayOutput)
}

// ProfileMapInput is an input type that accepts ProfileMap and ProfileMapOutput values.
// You can construct a concrete instance of `ProfileMapInput` via:
//
//	ProfileMap{ "key": ProfileArgs{...} }
type ProfileMapInput interface {
	pulumi.Input

	ToProfileMapOutput() ProfileMapOutput
	ToProfileMapOutputWithContext(context.Context) ProfileMapOutput
}

type ProfileMap map[string]ProfileInput

func (ProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Profile)(nil)).Elem()
}

func (i ProfileMap) ToProfileMapOutput() ProfileMapOutput {
	return i.ToProfileMapOutputWithContext(context.Background())
}

func (i ProfileMap) ToProfileMapOutputWithContext(ctx context.Context) ProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileMapOutput)
}

type ProfileOutput struct{ *pulumi.OutputState }

func (ProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Profile)(nil)).Elem()
}

func (o ProfileOutput) ToProfileOutput() ProfileOutput {
	return o
}

func (o ProfileOutput) ToProfileOutputWithContext(ctx context.Context) ProfileOutput {
	return o
}

// Only submit files matching this DLP file-pattern to FortiSandbox.
func (o ProfileOutput) AnalyticsAcceptFiletype() pulumi.IntOutput {
	return o.ApplyT(func(v *Profile) pulumi.IntOutput { return v.AnalyticsAcceptFiletype }).(pulumi.IntOutput)
}

// Only submit files matching this DLP file-pattern to FortiSandbox.
func (o ProfileOutput) AnalyticsBlFiletype() pulumi.IntOutput {
	return o.ApplyT(func(v *Profile) pulumi.IntOutput { return v.AnalyticsBlFiletype }).(pulumi.IntOutput)
}

// Enable/disable using the FortiSandbox signature database to supplement the AV signature databases. Valid values: `disable`, `enable`.
func (o ProfileOutput) AnalyticsDb() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.AnalyticsDb }).(pulumi.StringOutput)
}

// Do not submit files matching this DLP file-pattern to FortiSandbox (post-transfer scan only).
func (o ProfileOutput) AnalyticsIgnoreFiletype() pulumi.IntOutput {
	return o.ApplyT(func(v *Profile) pulumi.IntOutput { return v.AnalyticsIgnoreFiletype }).(pulumi.IntOutput)
}

// Maximum size of files that can be uploaded to FortiSandbox.
func (o ProfileOutput) AnalyticsMaxUpload() pulumi.IntOutput {
	return o.ApplyT(func(v *Profile) pulumi.IntOutput { return v.AnalyticsMaxUpload }).(pulumi.IntOutput)
}

// Do not submit files matching this DLP file-pattern to FortiSandbox.
func (o ProfileOutput) AnalyticsWlFiletype() pulumi.IntOutput {
	return o.ApplyT(func(v *Profile) pulumi.IntOutput { return v.AnalyticsWlFiletype }).(pulumi.IntOutput)
}

// Enable/disable logging for AntiVirus file blocking. Valid values: `enable`, `disable`.
func (o ProfileOutput) AvBlockLog() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.AvBlockLog }).(pulumi.StringOutput)
}

// Enable/disable AntiVirus logging. Valid values: `enable`, `disable`.
func (o ProfileOutput) AvVirusLog() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.AvVirusLog }).(pulumi.StringOutput)
}

// Configure CIFS AntiVirus options. The structure of `cifs` block is documented below.
func (o ProfileOutput) Cifs() ProfileCifsOutput {
	return o.ApplyT(func(v *Profile) ProfileCifsOutput { return v.Cifs }).(ProfileCifsOutput)
}

// Comment.
func (o ProfileOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// AV Content Disarm and Reconstruction settings. The structure of `contentDisarm` block is documented below.
func (o ProfileOutput) ContentDisarm() ProfileContentDisarmOutput {
	return o.ApplyT(func(v *Profile) ProfileContentDisarmOutput { return v.ContentDisarm }).(ProfileContentDisarmOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o ProfileOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Enable/disable use of EMS threat feed when performing AntiVirus scan. Analyzes files including the content of archives. Valid values: `disable`, `enable`.
func (o ProfileOutput) EmsThreatFeed() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.EmsThreatFeed }).(pulumi.StringOutput)
}

// Enable/disable extended logging for antivirus. Valid values: `enable`, `disable`.
func (o ProfileOutput) ExtendedLog() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.ExtendedLog }).(pulumi.StringOutput)
}

// Enable/disable all external blocklists. Valid values: `disable`, `enable`.
func (o ProfileOutput) ExternalBlocklistEnableAll() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.ExternalBlocklistEnableAll }).(pulumi.StringOutput)
}

// One or more external malware block lists. The structure of `externalBlocklist` block is documented below.
func (o ProfileOutput) ExternalBlocklists() ProfileExternalBlocklistArrayOutput {
	return o.ApplyT(func(v *Profile) ProfileExternalBlocklistArrayOutput { return v.ExternalBlocklists }).(ProfileExternalBlocklistArrayOutput)
}

// Flow/proxy feature set. Valid values: `flow`, `proxy`.
func (o ProfileOutput) FeatureSet() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.FeatureSet }).(pulumi.StringOutput)
}

// Action to take if FortiAI encounters an error. Valid values: `log-only`, `block`, `ignore`.
func (o ProfileOutput) FortiaiErrorAction() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.FortiaiErrorAction }).(pulumi.StringOutput)
}

// Action to take if FortiAI encounters a scan timeout. Valid values: `log-only`, `block`, `ignore`.
func (o ProfileOutput) FortiaiTimeoutAction() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.FortiaiTimeoutAction }).(pulumi.StringOutput)
}

// Action to take if FortiNDR encounters an error. Valid values: `log-only`, `block`, `ignore`.
func (o ProfileOutput) FortindrErrorAction() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.FortindrErrorAction }).(pulumi.StringOutput)
}

// Action to take if FortiNDR encounters a scan timeout. Valid values: `log-only`, `block`, `ignore`.
func (o ProfileOutput) FortindrTimeoutAction() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.FortindrTimeoutAction }).(pulumi.StringOutput)
}

// Action to take if FortiSandbox inline scan encounters an error. Valid values: `log-only`, `block`, `ignore`.
func (o ProfileOutput) FortisandboxErrorAction() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.FortisandboxErrorAction }).(pulumi.StringOutput)
}

// Maximum size of files that can be uploaded to FortiSandbox.
func (o ProfileOutput) FortisandboxMaxUpload() pulumi.IntOutput {
	return o.ApplyT(func(v *Profile) pulumi.IntOutput { return v.FortisandboxMaxUpload }).(pulumi.IntOutput)
}

// FortiSandbox scan modes. Valid values: `inline`, `analytics-suspicious`, `analytics-everything`.
func (o ProfileOutput) FortisandboxMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.FortisandboxMode }).(pulumi.StringOutput)
}

// Action to take if FortiSandbox inline scan encounters a scan timeout. Valid values: `log-only`, `block`, `ignore`.
func (o ProfileOutput) FortisandboxTimeoutAction() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.FortisandboxTimeoutAction }).(pulumi.StringOutput)
}

// Settings to control which files are uploaded to FortiSandbox. Valid values: `disable`, `suspicious`, `everything`.
func (o ProfileOutput) FtgdAnalytics() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.FtgdAnalytics }).(pulumi.StringOutput)
}

// Configure FTP AntiVirus options. The structure of `ftp` block is documented below.
func (o ProfileOutput) Ftp() ProfileFtpOutput {
	return o.ApplyT(func(v *Profile) ProfileFtpOutput { return v.Ftp }).(ProfileFtpOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o ProfileOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Configure HTTP AntiVirus options. The structure of `http` block is documented below.
func (o ProfileOutput) Http() ProfileHttpOutput {
	return o.ApplyT(func(v *Profile) ProfileHttpOutput { return v.Http }).(ProfileHttpOutput)
}

// Configure IMAP AntiVirus options. The structure of `imap` block is documented below.
func (o ProfileOutput) Imap() ProfileImapOutput {
	return o.ApplyT(func(v *Profile) ProfileImapOutput { return v.Imap }).(ProfileImapOutput)
}

// Inspection mode. Valid values: `proxy`, `flow-based`.
func (o ProfileOutput) InspectionMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.InspectionMode }).(pulumi.StringOutput)
}

// Configure MAPI AntiVirus options. The structure of `mapi` block is documented below.
func (o ProfileOutput) Mapi() ProfileMapiOutput {
	return o.ApplyT(func(v *Profile) ProfileMapiOutput { return v.Mapi }).(ProfileMapiOutput)
}

// Enable/disable using the mobile malware signature database. Valid values: `disable`, `enable`.
func (o ProfileOutput) MobileMalwareDb() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.MobileMalwareDb }).(pulumi.StringOutput)
}

// Configure AntiVirus quarantine settings. The structure of `nacQuar` block is documented below.
func (o ProfileOutput) NacQuar() ProfileNacQuarOutput {
	return o.ApplyT(func(v *Profile) ProfileNacQuarOutput { return v.NacQuar }).(ProfileNacQuarOutput)
}

// Profile name.
func (o ProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Configure NNTP AntiVirus options. The structure of `nntp` block is documented below.
func (o ProfileOutput) Nntp() ProfileNntpOutput {
	return o.ApplyT(func(v *Profile) ProfileNntpOutput { return v.Nntp }).(ProfileNntpOutput)
}

// Configure Virus Outbreak Prevention settings. The structure of `outbreakPrevention` block is documented below.
func (o ProfileOutput) OutbreakPrevention() ProfileOutbreakPreventionOutput {
	return o.ApplyT(func(v *Profile) ProfileOutbreakPreventionOutput { return v.OutbreakPrevention }).(ProfileOutbreakPreventionOutput)
}

// Enable/disable outbreak-prevention archive scanning. Valid values: `disable`, `enable`.
func (o ProfileOutput) OutbreakPreventionArchiveScan() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.OutbreakPreventionArchiveScan }).(pulumi.StringOutput)
}

// Configure POP3 AntiVirus options. The structure of `pop3` block is documented below.
func (o ProfileOutput) Pop3() ProfilePop3Output {
	return o.ApplyT(func(v *Profile) ProfilePop3Output { return v.Pop3 }).(ProfilePop3Output)
}

// Replacement message group customized for this profile.
func (o ProfileOutput) ReplacemsgGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.ReplacemsgGroup }).(pulumi.StringOutput)
}

// Configure scan mode (default or legacy).
func (o ProfileOutput) ScanMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.ScanMode }).(pulumi.StringOutput)
}

// Configure SMB AntiVirus options. The structure of `smb` block is documented below.
func (o ProfileOutput) Smb() ProfileSmbOutput {
	return o.ApplyT(func(v *Profile) ProfileSmbOutput { return v.Smb }).(ProfileSmbOutput)
}

// Configure SMTP AntiVirus options. The structure of `smtp` block is documented below.
func (o ProfileOutput) Smtp() ProfileSmtpOutput {
	return o.ApplyT(func(v *Profile) ProfileSmtpOutput { return v.Smtp }).(ProfileSmtpOutput)
}

// Configure SFTP and SCP AntiVirus options. The structure of `ssh` block is documented below.
func (o ProfileOutput) Ssh() ProfileSshOutput {
	return o.ApplyT(func(v *Profile) ProfileSshOutput { return v.Ssh }).(ProfileSshOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o ProfileOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type ProfileArrayOutput struct{ *pulumi.OutputState }

func (ProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Profile)(nil)).Elem()
}

func (o ProfileArrayOutput) ToProfileArrayOutput() ProfileArrayOutput {
	return o
}

func (o ProfileArrayOutput) ToProfileArrayOutputWithContext(ctx context.Context) ProfileArrayOutput {
	return o
}

func (o ProfileArrayOutput) Index(i pulumi.IntInput) ProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Profile {
		return vs[0].([]*Profile)[vs[1].(int)]
	}).(ProfileOutput)
}

type ProfileMapOutput struct{ *pulumi.OutputState }

func (ProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Profile)(nil)).Elem()
}

func (o ProfileMapOutput) ToProfileMapOutput() ProfileMapOutput {
	return o
}

func (o ProfileMapOutput) ToProfileMapOutputWithContext(ctx context.Context) ProfileMapOutput {
	return o
}

func (o ProfileMapOutput) MapIndex(k pulumi.StringInput) ProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Profile {
		return vs[0].(map[string]*Profile)[vs[1].(string)]
	}).(ProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileInput)(nil)).Elem(), &Profile{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileArrayInput)(nil)).Elem(), ProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileMapInput)(nil)).Elem(), ProfileMap{})
	pulumi.RegisterOutputType(ProfileOutput{})
	pulumi.RegisterOutputType(ProfileArrayOutput{})
	pulumi.RegisterOutputType(ProfileMapOutput{})
}
