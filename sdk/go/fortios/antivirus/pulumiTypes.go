// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package antivirus

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

var _ = internal.GetEnvOrDefault

type ProfileCifs struct {
	// Select the archive types to block.
	ArchiveBlock *string `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog *string `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan *string `pulumi:"avScan"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator *string `pulumi:"emulator"`
	// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
	ExternalBlocklist *string `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai *string `pulumi:"fortiai"`
	// Enable/disable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr *string `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox *string `pulumi:"fortisandbox"`
	// Enable/disable CIFS AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options *string `pulumi:"options"`
	// Enable Virus Outbreak Prevention service.
	OutbreakPrevention *string `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine *string `pulumi:"quarantine"`
}

// ProfileCifsInput is an input type that accepts ProfileCifsArgs and ProfileCifsOutput values.
// You can construct a concrete instance of `ProfileCifsInput` via:
//
//	ProfileCifsArgs{...}
type ProfileCifsInput interface {
	pulumi.Input

	ToProfileCifsOutput() ProfileCifsOutput
	ToProfileCifsOutputWithContext(context.Context) ProfileCifsOutput
}

type ProfileCifsArgs struct {
	// Select the archive types to block.
	ArchiveBlock pulumi.StringPtrInput `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog pulumi.StringPtrInput `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan pulumi.StringPtrInput `pulumi:"avScan"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator pulumi.StringPtrInput `pulumi:"emulator"`
	// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
	ExternalBlocklist pulumi.StringPtrInput `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai pulumi.StringPtrInput `pulumi:"fortiai"`
	// Enable/disable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr pulumi.StringPtrInput `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox pulumi.StringPtrInput `pulumi:"fortisandbox"`
	// Enable/disable CIFS AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Enable Virus Outbreak Prevention service.
	OutbreakPrevention pulumi.StringPtrInput `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine pulumi.StringPtrInput `pulumi:"quarantine"`
}

func (ProfileCifsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileCifs)(nil)).Elem()
}

func (i ProfileCifsArgs) ToProfileCifsOutput() ProfileCifsOutput {
	return i.ToProfileCifsOutputWithContext(context.Background())
}

func (i ProfileCifsArgs) ToProfileCifsOutputWithContext(ctx context.Context) ProfileCifsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileCifsOutput)
}

func (i ProfileCifsArgs) ToProfileCifsPtrOutput() ProfileCifsPtrOutput {
	return i.ToProfileCifsPtrOutputWithContext(context.Background())
}

func (i ProfileCifsArgs) ToProfileCifsPtrOutputWithContext(ctx context.Context) ProfileCifsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileCifsOutput).ToProfileCifsPtrOutputWithContext(ctx)
}

// ProfileCifsPtrInput is an input type that accepts ProfileCifsArgs, ProfileCifsPtr and ProfileCifsPtrOutput values.
// You can construct a concrete instance of `ProfileCifsPtrInput` via:
//
//	        ProfileCifsArgs{...}
//
//	or:
//
//	        nil
type ProfileCifsPtrInput interface {
	pulumi.Input

	ToProfileCifsPtrOutput() ProfileCifsPtrOutput
	ToProfileCifsPtrOutputWithContext(context.Context) ProfileCifsPtrOutput
}

type profileCifsPtrType ProfileCifsArgs

func ProfileCifsPtr(v *ProfileCifsArgs) ProfileCifsPtrInput {
	return (*profileCifsPtrType)(v)
}

func (*profileCifsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileCifs)(nil)).Elem()
}

func (i *profileCifsPtrType) ToProfileCifsPtrOutput() ProfileCifsPtrOutput {
	return i.ToProfileCifsPtrOutputWithContext(context.Background())
}

func (i *profileCifsPtrType) ToProfileCifsPtrOutputWithContext(ctx context.Context) ProfileCifsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileCifsPtrOutput)
}

type ProfileCifsOutput struct{ *pulumi.OutputState }

func (ProfileCifsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileCifs)(nil)).Elem()
}

func (o ProfileCifsOutput) ToProfileCifsOutput() ProfileCifsOutput {
	return o
}

func (o ProfileCifsOutput) ToProfileCifsOutputWithContext(ctx context.Context) ProfileCifsOutput {
	return o
}

func (o ProfileCifsOutput) ToProfileCifsPtrOutput() ProfileCifsPtrOutput {
	return o.ToProfileCifsPtrOutputWithContext(context.Background())
}

func (o ProfileCifsOutput) ToProfileCifsPtrOutputWithContext(ctx context.Context) ProfileCifsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileCifs) *ProfileCifs {
		return &v
	}).(ProfileCifsPtrOutput)
}

// Select the archive types to block.
func (o ProfileCifsOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileCifs) *string { return v.ArchiveBlock }).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o ProfileCifsOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileCifs) *string { return v.ArchiveLog }).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o ProfileCifsOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileCifs) *string { return v.AvScan }).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o ProfileCifsOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileCifs) *string { return v.Emulator }).(pulumi.StringPtrOutput)
}

// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
func (o ProfileCifsOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileCifs) *string { return v.ExternalBlocklist }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o ProfileCifsOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileCifs) *string { return v.Fortiai }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o ProfileCifsOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileCifs) *string { return v.Fortindr }).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o ProfileCifsOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileCifs) *string { return v.Fortisandbox }).(pulumi.StringPtrOutput)
}

// Enable/disable CIFS AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o ProfileCifsOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileCifs) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service.
func (o ProfileCifsOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileCifs) *string { return v.OutbreakPrevention }).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o ProfileCifsOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileCifs) *string { return v.Quarantine }).(pulumi.StringPtrOutput)
}

type ProfileCifsPtrOutput struct{ *pulumi.OutputState }

func (ProfileCifsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileCifs)(nil)).Elem()
}

func (o ProfileCifsPtrOutput) ToProfileCifsPtrOutput() ProfileCifsPtrOutput {
	return o
}

func (o ProfileCifsPtrOutput) ToProfileCifsPtrOutputWithContext(ctx context.Context) ProfileCifsPtrOutput {
	return o
}

func (o ProfileCifsPtrOutput) Elem() ProfileCifsOutput {
	return o.ApplyT(func(v *ProfileCifs) ProfileCifs {
		if v != nil {
			return *v
		}
		var ret ProfileCifs
		return ret
	}).(ProfileCifsOutput)
}

// Select the archive types to block.
func (o ProfileCifsPtrOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileCifs) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveBlock
	}).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o ProfileCifsPtrOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileCifs) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveLog
	}).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o ProfileCifsPtrOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileCifs) *string {
		if v == nil {
			return nil
		}
		return v.AvScan
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o ProfileCifsPtrOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileCifs) *string {
		if v == nil {
			return nil
		}
		return v.Emulator
	}).(pulumi.StringPtrOutput)
}

// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
func (o ProfileCifsPtrOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileCifs) *string {
		if v == nil {
			return nil
		}
		return v.ExternalBlocklist
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o ProfileCifsPtrOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileCifs) *string {
		if v == nil {
			return nil
		}
		return v.Fortiai
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o ProfileCifsPtrOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileCifs) *string {
		if v == nil {
			return nil
		}
		return v.Fortindr
	}).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o ProfileCifsPtrOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileCifs) *string {
		if v == nil {
			return nil
		}
		return v.Fortisandbox
	}).(pulumi.StringPtrOutput)
}

// Enable/disable CIFS AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o ProfileCifsPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileCifs) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service.
func (o ProfileCifsPtrOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileCifs) *string {
		if v == nil {
			return nil
		}
		return v.OutbreakPrevention
	}).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o ProfileCifsPtrOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileCifs) *string {
		if v == nil {
			return nil
		}
		return v.Quarantine
	}).(pulumi.StringPtrOutput)
}

type ProfileContentDisarm struct {
	// Enable/disable inserting a cover page into the disarmed document. Valid values: `disable`, `enable`.
	CoverPage *string `pulumi:"coverPage"`
	// Enable/disable only detect disarmable files, do not alter content. Valid values: `disable`, `enable`.
	DetectOnly *string `pulumi:"detectOnly"`
	// Action to be taken if CDR engine encounters an unrecoverable error. Valid values: `block`, `log-only`, `ignore`.
	ErrorAction *string `pulumi:"errorAction"`
	// Enable/disable stripping of PowerPoint action events in Microsoft Office documents. Valid values: `disable`, `enable`.
	OfficeAction *string `pulumi:"officeAction"`
	// Enable/disable stripping of Dynamic Data Exchange events in Microsoft Office documents. Valid values: `disable`, `enable`.
	OfficeDde *string `pulumi:"officeDde"`
	// Enable/disable stripping of embedded objects in Microsoft Office documents. Valid values: `disable`, `enable`.
	OfficeEmbed *string `pulumi:"officeEmbed"`
	// Enable/disable stripping of hyperlinks in Microsoft Office documents. Valid values: `disable`, `enable`.
	OfficeHylink *string `pulumi:"officeHylink"`
	// Enable/disable stripping of linked objects in Microsoft Office documents. Valid values: `disable`, `enable`.
	OfficeLinked *string `pulumi:"officeLinked"`
	// Enable/disable stripping of macros in Microsoft Office documents. Valid values: `disable`, `enable`.
	OfficeMacro *string `pulumi:"officeMacro"`
	// Destination to send original file if active content is removed. Valid values: `fortisandbox`, `quarantine`, `discard`.
	OriginalFileDestination *string `pulumi:"originalFileDestination"`
	// Enable/disable stripping of actions that submit data to other targets in PDF documents. Valid values: `disable`, `enable`.
	PdfActForm *string `pulumi:"pdfActForm"`
	// Enable/disable stripping of links to other PDFs in PDF documents. Valid values: `disable`, `enable`.
	PdfActGotor *string `pulumi:"pdfActGotor"`
	// Enable/disable stripping of actions that execute JavaScript code in PDF documents. Valid values: `disable`, `enable`.
	PdfActJava *string `pulumi:"pdfActJava"`
	// Enable/disable stripping of links to external applications in PDF documents. Valid values: `disable`, `enable`.
	PdfActLaunch *string `pulumi:"pdfActLaunch"`
	// Enable/disable stripping of embedded movies in PDF documents. Valid values: `disable`, `enable`.
	PdfActMovie *string `pulumi:"pdfActMovie"`
	// Enable/disable stripping of embedded sound files in PDF documents. Valid values: `disable`, `enable`.
	PdfActSound *string `pulumi:"pdfActSound"`
	// Enable/disable stripping of embedded files in PDF documents. Valid values: `disable`, `enable`.
	PdfEmbedfile *string `pulumi:"pdfEmbedfile"`
	// Enable/disable stripping of hyperlinks from PDF documents. Valid values: `disable`, `enable`.
	PdfHyperlink *string `pulumi:"pdfHyperlink"`
	// Enable/disable stripping of JavaScript code in PDF documents. Valid values: `disable`, `enable`.
	PdfJavacode *string `pulumi:"pdfJavacode"`
}

// ProfileContentDisarmInput is an input type that accepts ProfileContentDisarmArgs and ProfileContentDisarmOutput values.
// You can construct a concrete instance of `ProfileContentDisarmInput` via:
//
//	ProfileContentDisarmArgs{...}
type ProfileContentDisarmInput interface {
	pulumi.Input

	ToProfileContentDisarmOutput() ProfileContentDisarmOutput
	ToProfileContentDisarmOutputWithContext(context.Context) ProfileContentDisarmOutput
}

type ProfileContentDisarmArgs struct {
	// Enable/disable inserting a cover page into the disarmed document. Valid values: `disable`, `enable`.
	CoverPage pulumi.StringPtrInput `pulumi:"coverPage"`
	// Enable/disable only detect disarmable files, do not alter content. Valid values: `disable`, `enable`.
	DetectOnly pulumi.StringPtrInput `pulumi:"detectOnly"`
	// Action to be taken if CDR engine encounters an unrecoverable error. Valid values: `block`, `log-only`, `ignore`.
	ErrorAction pulumi.StringPtrInput `pulumi:"errorAction"`
	// Enable/disable stripping of PowerPoint action events in Microsoft Office documents. Valid values: `disable`, `enable`.
	OfficeAction pulumi.StringPtrInput `pulumi:"officeAction"`
	// Enable/disable stripping of Dynamic Data Exchange events in Microsoft Office documents. Valid values: `disable`, `enable`.
	OfficeDde pulumi.StringPtrInput `pulumi:"officeDde"`
	// Enable/disable stripping of embedded objects in Microsoft Office documents. Valid values: `disable`, `enable`.
	OfficeEmbed pulumi.StringPtrInput `pulumi:"officeEmbed"`
	// Enable/disable stripping of hyperlinks in Microsoft Office documents. Valid values: `disable`, `enable`.
	OfficeHylink pulumi.StringPtrInput `pulumi:"officeHylink"`
	// Enable/disable stripping of linked objects in Microsoft Office documents. Valid values: `disable`, `enable`.
	OfficeLinked pulumi.StringPtrInput `pulumi:"officeLinked"`
	// Enable/disable stripping of macros in Microsoft Office documents. Valid values: `disable`, `enable`.
	OfficeMacro pulumi.StringPtrInput `pulumi:"officeMacro"`
	// Destination to send original file if active content is removed. Valid values: `fortisandbox`, `quarantine`, `discard`.
	OriginalFileDestination pulumi.StringPtrInput `pulumi:"originalFileDestination"`
	// Enable/disable stripping of actions that submit data to other targets in PDF documents. Valid values: `disable`, `enable`.
	PdfActForm pulumi.StringPtrInput `pulumi:"pdfActForm"`
	// Enable/disable stripping of links to other PDFs in PDF documents. Valid values: `disable`, `enable`.
	PdfActGotor pulumi.StringPtrInput `pulumi:"pdfActGotor"`
	// Enable/disable stripping of actions that execute JavaScript code in PDF documents. Valid values: `disable`, `enable`.
	PdfActJava pulumi.StringPtrInput `pulumi:"pdfActJava"`
	// Enable/disable stripping of links to external applications in PDF documents. Valid values: `disable`, `enable`.
	PdfActLaunch pulumi.StringPtrInput `pulumi:"pdfActLaunch"`
	// Enable/disable stripping of embedded movies in PDF documents. Valid values: `disable`, `enable`.
	PdfActMovie pulumi.StringPtrInput `pulumi:"pdfActMovie"`
	// Enable/disable stripping of embedded sound files in PDF documents. Valid values: `disable`, `enable`.
	PdfActSound pulumi.StringPtrInput `pulumi:"pdfActSound"`
	// Enable/disable stripping of embedded files in PDF documents. Valid values: `disable`, `enable`.
	PdfEmbedfile pulumi.StringPtrInput `pulumi:"pdfEmbedfile"`
	// Enable/disable stripping of hyperlinks from PDF documents. Valid values: `disable`, `enable`.
	PdfHyperlink pulumi.StringPtrInput `pulumi:"pdfHyperlink"`
	// Enable/disable stripping of JavaScript code in PDF documents. Valid values: `disable`, `enable`.
	PdfJavacode pulumi.StringPtrInput `pulumi:"pdfJavacode"`
}

func (ProfileContentDisarmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileContentDisarm)(nil)).Elem()
}

func (i ProfileContentDisarmArgs) ToProfileContentDisarmOutput() ProfileContentDisarmOutput {
	return i.ToProfileContentDisarmOutputWithContext(context.Background())
}

func (i ProfileContentDisarmArgs) ToProfileContentDisarmOutputWithContext(ctx context.Context) ProfileContentDisarmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileContentDisarmOutput)
}

func (i ProfileContentDisarmArgs) ToProfileContentDisarmPtrOutput() ProfileContentDisarmPtrOutput {
	return i.ToProfileContentDisarmPtrOutputWithContext(context.Background())
}

func (i ProfileContentDisarmArgs) ToProfileContentDisarmPtrOutputWithContext(ctx context.Context) ProfileContentDisarmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileContentDisarmOutput).ToProfileContentDisarmPtrOutputWithContext(ctx)
}

// ProfileContentDisarmPtrInput is an input type that accepts ProfileContentDisarmArgs, ProfileContentDisarmPtr and ProfileContentDisarmPtrOutput values.
// You can construct a concrete instance of `ProfileContentDisarmPtrInput` via:
//
//	        ProfileContentDisarmArgs{...}
//
//	or:
//
//	        nil
type ProfileContentDisarmPtrInput interface {
	pulumi.Input

	ToProfileContentDisarmPtrOutput() ProfileContentDisarmPtrOutput
	ToProfileContentDisarmPtrOutputWithContext(context.Context) ProfileContentDisarmPtrOutput
}

type profileContentDisarmPtrType ProfileContentDisarmArgs

func ProfileContentDisarmPtr(v *ProfileContentDisarmArgs) ProfileContentDisarmPtrInput {
	return (*profileContentDisarmPtrType)(v)
}

func (*profileContentDisarmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileContentDisarm)(nil)).Elem()
}

func (i *profileContentDisarmPtrType) ToProfileContentDisarmPtrOutput() ProfileContentDisarmPtrOutput {
	return i.ToProfileContentDisarmPtrOutputWithContext(context.Background())
}

func (i *profileContentDisarmPtrType) ToProfileContentDisarmPtrOutputWithContext(ctx context.Context) ProfileContentDisarmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileContentDisarmPtrOutput)
}

type ProfileContentDisarmOutput struct{ *pulumi.OutputState }

func (ProfileContentDisarmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileContentDisarm)(nil)).Elem()
}

func (o ProfileContentDisarmOutput) ToProfileContentDisarmOutput() ProfileContentDisarmOutput {
	return o
}

func (o ProfileContentDisarmOutput) ToProfileContentDisarmOutputWithContext(ctx context.Context) ProfileContentDisarmOutput {
	return o
}

func (o ProfileContentDisarmOutput) ToProfileContentDisarmPtrOutput() ProfileContentDisarmPtrOutput {
	return o.ToProfileContentDisarmPtrOutputWithContext(context.Background())
}

func (o ProfileContentDisarmOutput) ToProfileContentDisarmPtrOutputWithContext(ctx context.Context) ProfileContentDisarmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileContentDisarm) *ProfileContentDisarm {
		return &v
	}).(ProfileContentDisarmPtrOutput)
}

// Enable/disable inserting a cover page into the disarmed document. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmOutput) CoverPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileContentDisarm) *string { return v.CoverPage }).(pulumi.StringPtrOutput)
}

// Enable/disable only detect disarmable files, do not alter content. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmOutput) DetectOnly() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileContentDisarm) *string { return v.DetectOnly }).(pulumi.StringPtrOutput)
}

// Action to be taken if CDR engine encounters an unrecoverable error. Valid values: `block`, `log-only`, `ignore`.
func (o ProfileContentDisarmOutput) ErrorAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileContentDisarm) *string { return v.ErrorAction }).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of PowerPoint action events in Microsoft Office documents. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmOutput) OfficeAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileContentDisarm) *string { return v.OfficeAction }).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of Dynamic Data Exchange events in Microsoft Office documents. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmOutput) OfficeDde() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileContentDisarm) *string { return v.OfficeDde }).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of embedded objects in Microsoft Office documents. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmOutput) OfficeEmbed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileContentDisarm) *string { return v.OfficeEmbed }).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of hyperlinks in Microsoft Office documents. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmOutput) OfficeHylink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileContentDisarm) *string { return v.OfficeHylink }).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of linked objects in Microsoft Office documents. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmOutput) OfficeLinked() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileContentDisarm) *string { return v.OfficeLinked }).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of macros in Microsoft Office documents. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmOutput) OfficeMacro() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileContentDisarm) *string { return v.OfficeMacro }).(pulumi.StringPtrOutput)
}

// Destination to send original file if active content is removed. Valid values: `fortisandbox`, `quarantine`, `discard`.
func (o ProfileContentDisarmOutput) OriginalFileDestination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileContentDisarm) *string { return v.OriginalFileDestination }).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of actions that submit data to other targets in PDF documents. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmOutput) PdfActForm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileContentDisarm) *string { return v.PdfActForm }).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of links to other PDFs in PDF documents. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmOutput) PdfActGotor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileContentDisarm) *string { return v.PdfActGotor }).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of actions that execute JavaScript code in PDF documents. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmOutput) PdfActJava() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileContentDisarm) *string { return v.PdfActJava }).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of links to external applications in PDF documents. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmOutput) PdfActLaunch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileContentDisarm) *string { return v.PdfActLaunch }).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of embedded movies in PDF documents. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmOutput) PdfActMovie() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileContentDisarm) *string { return v.PdfActMovie }).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of embedded sound files in PDF documents. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmOutput) PdfActSound() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileContentDisarm) *string { return v.PdfActSound }).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of embedded files in PDF documents. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmOutput) PdfEmbedfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileContentDisarm) *string { return v.PdfEmbedfile }).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of hyperlinks from PDF documents. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmOutput) PdfHyperlink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileContentDisarm) *string { return v.PdfHyperlink }).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of JavaScript code in PDF documents. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmOutput) PdfJavacode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileContentDisarm) *string { return v.PdfJavacode }).(pulumi.StringPtrOutput)
}

type ProfileContentDisarmPtrOutput struct{ *pulumi.OutputState }

func (ProfileContentDisarmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileContentDisarm)(nil)).Elem()
}

func (o ProfileContentDisarmPtrOutput) ToProfileContentDisarmPtrOutput() ProfileContentDisarmPtrOutput {
	return o
}

func (o ProfileContentDisarmPtrOutput) ToProfileContentDisarmPtrOutputWithContext(ctx context.Context) ProfileContentDisarmPtrOutput {
	return o
}

func (o ProfileContentDisarmPtrOutput) Elem() ProfileContentDisarmOutput {
	return o.ApplyT(func(v *ProfileContentDisarm) ProfileContentDisarm {
		if v != nil {
			return *v
		}
		var ret ProfileContentDisarm
		return ret
	}).(ProfileContentDisarmOutput)
}

// Enable/disable inserting a cover page into the disarmed document. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmPtrOutput) CoverPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.CoverPage
	}).(pulumi.StringPtrOutput)
}

// Enable/disable only detect disarmable files, do not alter content. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmPtrOutput) DetectOnly() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.DetectOnly
	}).(pulumi.StringPtrOutput)
}

// Action to be taken if CDR engine encounters an unrecoverable error. Valid values: `block`, `log-only`, `ignore`.
func (o ProfileContentDisarmPtrOutput) ErrorAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.ErrorAction
	}).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of PowerPoint action events in Microsoft Office documents. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmPtrOutput) OfficeAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.OfficeAction
	}).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of Dynamic Data Exchange events in Microsoft Office documents. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmPtrOutput) OfficeDde() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.OfficeDde
	}).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of embedded objects in Microsoft Office documents. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmPtrOutput) OfficeEmbed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.OfficeEmbed
	}).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of hyperlinks in Microsoft Office documents. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmPtrOutput) OfficeHylink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.OfficeHylink
	}).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of linked objects in Microsoft Office documents. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmPtrOutput) OfficeLinked() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.OfficeLinked
	}).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of macros in Microsoft Office documents. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmPtrOutput) OfficeMacro() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.OfficeMacro
	}).(pulumi.StringPtrOutput)
}

// Destination to send original file if active content is removed. Valid values: `fortisandbox`, `quarantine`, `discard`.
func (o ProfileContentDisarmPtrOutput) OriginalFileDestination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.OriginalFileDestination
	}).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of actions that submit data to other targets in PDF documents. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmPtrOutput) PdfActForm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.PdfActForm
	}).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of links to other PDFs in PDF documents. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmPtrOutput) PdfActGotor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.PdfActGotor
	}).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of actions that execute JavaScript code in PDF documents. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmPtrOutput) PdfActJava() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.PdfActJava
	}).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of links to external applications in PDF documents. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmPtrOutput) PdfActLaunch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.PdfActLaunch
	}).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of embedded movies in PDF documents. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmPtrOutput) PdfActMovie() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.PdfActMovie
	}).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of embedded sound files in PDF documents. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmPtrOutput) PdfActSound() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.PdfActSound
	}).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of embedded files in PDF documents. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmPtrOutput) PdfEmbedfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.PdfEmbedfile
	}).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of hyperlinks from PDF documents. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmPtrOutput) PdfHyperlink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.PdfHyperlink
	}).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of JavaScript code in PDF documents. Valid values: `disable`, `enable`.
func (o ProfileContentDisarmPtrOutput) PdfJavacode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.PdfJavacode
	}).(pulumi.StringPtrOutput)
}

type ProfileExternalBlocklist struct {
	// External blocklist.
	Name *string `pulumi:"name"`
}

// ProfileExternalBlocklistInput is an input type that accepts ProfileExternalBlocklistArgs and ProfileExternalBlocklistOutput values.
// You can construct a concrete instance of `ProfileExternalBlocklistInput` via:
//
//	ProfileExternalBlocklistArgs{...}
type ProfileExternalBlocklistInput interface {
	pulumi.Input

	ToProfileExternalBlocklistOutput() ProfileExternalBlocklistOutput
	ToProfileExternalBlocklistOutputWithContext(context.Context) ProfileExternalBlocklistOutput
}

type ProfileExternalBlocklistArgs struct {
	// External blocklist.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProfileExternalBlocklistArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileExternalBlocklist)(nil)).Elem()
}

func (i ProfileExternalBlocklistArgs) ToProfileExternalBlocklistOutput() ProfileExternalBlocklistOutput {
	return i.ToProfileExternalBlocklistOutputWithContext(context.Background())
}

func (i ProfileExternalBlocklistArgs) ToProfileExternalBlocklistOutputWithContext(ctx context.Context) ProfileExternalBlocklistOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileExternalBlocklistOutput)
}

// ProfileExternalBlocklistArrayInput is an input type that accepts ProfileExternalBlocklistArray and ProfileExternalBlocklistArrayOutput values.
// You can construct a concrete instance of `ProfileExternalBlocklistArrayInput` via:
//
//	ProfileExternalBlocklistArray{ ProfileExternalBlocklistArgs{...} }
type ProfileExternalBlocklistArrayInput interface {
	pulumi.Input

	ToProfileExternalBlocklistArrayOutput() ProfileExternalBlocklistArrayOutput
	ToProfileExternalBlocklistArrayOutputWithContext(context.Context) ProfileExternalBlocklistArrayOutput
}

type ProfileExternalBlocklistArray []ProfileExternalBlocklistInput

func (ProfileExternalBlocklistArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileExternalBlocklist)(nil)).Elem()
}

func (i ProfileExternalBlocklistArray) ToProfileExternalBlocklistArrayOutput() ProfileExternalBlocklistArrayOutput {
	return i.ToProfileExternalBlocklistArrayOutputWithContext(context.Background())
}

func (i ProfileExternalBlocklistArray) ToProfileExternalBlocklistArrayOutputWithContext(ctx context.Context) ProfileExternalBlocklistArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileExternalBlocklistArrayOutput)
}

type ProfileExternalBlocklistOutput struct{ *pulumi.OutputState }

func (ProfileExternalBlocklistOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileExternalBlocklist)(nil)).Elem()
}

func (o ProfileExternalBlocklistOutput) ToProfileExternalBlocklistOutput() ProfileExternalBlocklistOutput {
	return o
}

func (o ProfileExternalBlocklistOutput) ToProfileExternalBlocklistOutputWithContext(ctx context.Context) ProfileExternalBlocklistOutput {
	return o
}

// External blocklist.
func (o ProfileExternalBlocklistOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileExternalBlocklist) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProfileExternalBlocklistArrayOutput struct{ *pulumi.OutputState }

func (ProfileExternalBlocklistArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileExternalBlocklist)(nil)).Elem()
}

func (o ProfileExternalBlocklistArrayOutput) ToProfileExternalBlocklistArrayOutput() ProfileExternalBlocklistArrayOutput {
	return o
}

func (o ProfileExternalBlocklistArrayOutput) ToProfileExternalBlocklistArrayOutputWithContext(ctx context.Context) ProfileExternalBlocklistArrayOutput {
	return o
}

func (o ProfileExternalBlocklistArrayOutput) Index(i pulumi.IntInput) ProfileExternalBlocklistOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProfileExternalBlocklist {
		return vs[0].([]ProfileExternalBlocklist)[vs[1].(int)]
	}).(ProfileExternalBlocklistOutput)
}

type ProfileFtp struct {
	// Select the archive types to block.
	ArchiveBlock *string `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog *string `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan *string `pulumi:"avScan"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator *string `pulumi:"emulator"`
	// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
	ExternalBlocklist *string `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai *string `pulumi:"fortiai"`
	// Enable/disable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr *string `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox *string `pulumi:"fortisandbox"`
	// Enable/disable FTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options *string `pulumi:"options"`
	// Enable Virus Outbreak Prevention service.
	OutbreakPrevention *string `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine *string `pulumi:"quarantine"`
}

// ProfileFtpInput is an input type that accepts ProfileFtpArgs and ProfileFtpOutput values.
// You can construct a concrete instance of `ProfileFtpInput` via:
//
//	ProfileFtpArgs{...}
type ProfileFtpInput interface {
	pulumi.Input

	ToProfileFtpOutput() ProfileFtpOutput
	ToProfileFtpOutputWithContext(context.Context) ProfileFtpOutput
}

type ProfileFtpArgs struct {
	// Select the archive types to block.
	ArchiveBlock pulumi.StringPtrInput `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog pulumi.StringPtrInput `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan pulumi.StringPtrInput `pulumi:"avScan"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator pulumi.StringPtrInput `pulumi:"emulator"`
	// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
	ExternalBlocklist pulumi.StringPtrInput `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai pulumi.StringPtrInput `pulumi:"fortiai"`
	// Enable/disable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr pulumi.StringPtrInput `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox pulumi.StringPtrInput `pulumi:"fortisandbox"`
	// Enable/disable FTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Enable Virus Outbreak Prevention service.
	OutbreakPrevention pulumi.StringPtrInput `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine pulumi.StringPtrInput `pulumi:"quarantine"`
}

func (ProfileFtpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileFtp)(nil)).Elem()
}

func (i ProfileFtpArgs) ToProfileFtpOutput() ProfileFtpOutput {
	return i.ToProfileFtpOutputWithContext(context.Background())
}

func (i ProfileFtpArgs) ToProfileFtpOutputWithContext(ctx context.Context) ProfileFtpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileFtpOutput)
}

func (i ProfileFtpArgs) ToProfileFtpPtrOutput() ProfileFtpPtrOutput {
	return i.ToProfileFtpPtrOutputWithContext(context.Background())
}

func (i ProfileFtpArgs) ToProfileFtpPtrOutputWithContext(ctx context.Context) ProfileFtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileFtpOutput).ToProfileFtpPtrOutputWithContext(ctx)
}

// ProfileFtpPtrInput is an input type that accepts ProfileFtpArgs, ProfileFtpPtr and ProfileFtpPtrOutput values.
// You can construct a concrete instance of `ProfileFtpPtrInput` via:
//
//	        ProfileFtpArgs{...}
//
//	or:
//
//	        nil
type ProfileFtpPtrInput interface {
	pulumi.Input

	ToProfileFtpPtrOutput() ProfileFtpPtrOutput
	ToProfileFtpPtrOutputWithContext(context.Context) ProfileFtpPtrOutput
}

type profileFtpPtrType ProfileFtpArgs

func ProfileFtpPtr(v *ProfileFtpArgs) ProfileFtpPtrInput {
	return (*profileFtpPtrType)(v)
}

func (*profileFtpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileFtp)(nil)).Elem()
}

func (i *profileFtpPtrType) ToProfileFtpPtrOutput() ProfileFtpPtrOutput {
	return i.ToProfileFtpPtrOutputWithContext(context.Background())
}

func (i *profileFtpPtrType) ToProfileFtpPtrOutputWithContext(ctx context.Context) ProfileFtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileFtpPtrOutput)
}

type ProfileFtpOutput struct{ *pulumi.OutputState }

func (ProfileFtpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileFtp)(nil)).Elem()
}

func (o ProfileFtpOutput) ToProfileFtpOutput() ProfileFtpOutput {
	return o
}

func (o ProfileFtpOutput) ToProfileFtpOutputWithContext(ctx context.Context) ProfileFtpOutput {
	return o
}

func (o ProfileFtpOutput) ToProfileFtpPtrOutput() ProfileFtpPtrOutput {
	return o.ToProfileFtpPtrOutputWithContext(context.Background())
}

func (o ProfileFtpOutput) ToProfileFtpPtrOutputWithContext(ctx context.Context) ProfileFtpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileFtp) *ProfileFtp {
		return &v
	}).(ProfileFtpPtrOutput)
}

// Select the archive types to block.
func (o ProfileFtpOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFtp) *string { return v.ArchiveBlock }).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o ProfileFtpOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFtp) *string { return v.ArchiveLog }).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o ProfileFtpOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFtp) *string { return v.AvScan }).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o ProfileFtpOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFtp) *string { return v.Emulator }).(pulumi.StringPtrOutput)
}

// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
func (o ProfileFtpOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFtp) *string { return v.ExternalBlocklist }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o ProfileFtpOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFtp) *string { return v.Fortiai }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o ProfileFtpOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFtp) *string { return v.Fortindr }).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o ProfileFtpOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFtp) *string { return v.Fortisandbox }).(pulumi.StringPtrOutput)
}

// Enable/disable FTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o ProfileFtpOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFtp) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service.
func (o ProfileFtpOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFtp) *string { return v.OutbreakPrevention }).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o ProfileFtpOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFtp) *string { return v.Quarantine }).(pulumi.StringPtrOutput)
}

type ProfileFtpPtrOutput struct{ *pulumi.OutputState }

func (ProfileFtpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileFtp)(nil)).Elem()
}

func (o ProfileFtpPtrOutput) ToProfileFtpPtrOutput() ProfileFtpPtrOutput {
	return o
}

func (o ProfileFtpPtrOutput) ToProfileFtpPtrOutputWithContext(ctx context.Context) ProfileFtpPtrOutput {
	return o
}

func (o ProfileFtpPtrOutput) Elem() ProfileFtpOutput {
	return o.ApplyT(func(v *ProfileFtp) ProfileFtp {
		if v != nil {
			return *v
		}
		var ret ProfileFtp
		return ret
	}).(ProfileFtpOutput)
}

// Select the archive types to block.
func (o ProfileFtpPtrOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileFtp) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveBlock
	}).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o ProfileFtpPtrOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileFtp) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveLog
	}).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o ProfileFtpPtrOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileFtp) *string {
		if v == nil {
			return nil
		}
		return v.AvScan
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o ProfileFtpPtrOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileFtp) *string {
		if v == nil {
			return nil
		}
		return v.Emulator
	}).(pulumi.StringPtrOutput)
}

// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
func (o ProfileFtpPtrOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileFtp) *string {
		if v == nil {
			return nil
		}
		return v.ExternalBlocklist
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o ProfileFtpPtrOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileFtp) *string {
		if v == nil {
			return nil
		}
		return v.Fortiai
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o ProfileFtpPtrOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileFtp) *string {
		if v == nil {
			return nil
		}
		return v.Fortindr
	}).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o ProfileFtpPtrOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileFtp) *string {
		if v == nil {
			return nil
		}
		return v.Fortisandbox
	}).(pulumi.StringPtrOutput)
}

// Enable/disable FTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o ProfileFtpPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileFtp) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service.
func (o ProfileFtpPtrOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileFtp) *string {
		if v == nil {
			return nil
		}
		return v.OutbreakPrevention
	}).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o ProfileFtpPtrOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileFtp) *string {
		if v == nil {
			return nil
		}
		return v.Quarantine
	}).(pulumi.StringPtrOutput)
}

type ProfileHttp struct {
	// Select the archive types to block.
	ArchiveBlock *string `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog *string `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan *string `pulumi:"avScan"`
	// Enable Content Disarm and Reconstruction for this protocol. Valid values: `disable`, `enable`.
	ContentDisarm *string `pulumi:"contentDisarm"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator *string `pulumi:"emulator"`
	// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
	ExternalBlocklist *string `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai *string `pulumi:"fortiai"`
	// Enable/disable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr *string `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox *string `pulumi:"fortisandbox"`
	// Enable/disable HTTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options *string `pulumi:"options"`
	// Enable Virus Outbreak Prevention service.
	OutbreakPrevention *string `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine *string `pulumi:"quarantine"`
	// Configure the action the FortiGate unit will take on unknown content-encoding. Valid values: `block`, `inspect`, `bypass`.
	UnknownContentEncoding *string `pulumi:"unknownContentEncoding"`
}

// ProfileHttpInput is an input type that accepts ProfileHttpArgs and ProfileHttpOutput values.
// You can construct a concrete instance of `ProfileHttpInput` via:
//
//	ProfileHttpArgs{...}
type ProfileHttpInput interface {
	pulumi.Input

	ToProfileHttpOutput() ProfileHttpOutput
	ToProfileHttpOutputWithContext(context.Context) ProfileHttpOutput
}

type ProfileHttpArgs struct {
	// Select the archive types to block.
	ArchiveBlock pulumi.StringPtrInput `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog pulumi.StringPtrInput `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan pulumi.StringPtrInput `pulumi:"avScan"`
	// Enable Content Disarm and Reconstruction for this protocol. Valid values: `disable`, `enable`.
	ContentDisarm pulumi.StringPtrInput `pulumi:"contentDisarm"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator pulumi.StringPtrInput `pulumi:"emulator"`
	// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
	ExternalBlocklist pulumi.StringPtrInput `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai pulumi.StringPtrInput `pulumi:"fortiai"`
	// Enable/disable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr pulumi.StringPtrInput `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox pulumi.StringPtrInput `pulumi:"fortisandbox"`
	// Enable/disable HTTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Enable Virus Outbreak Prevention service.
	OutbreakPrevention pulumi.StringPtrInput `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine pulumi.StringPtrInput `pulumi:"quarantine"`
	// Configure the action the FortiGate unit will take on unknown content-encoding. Valid values: `block`, `inspect`, `bypass`.
	UnknownContentEncoding pulumi.StringPtrInput `pulumi:"unknownContentEncoding"`
}

func (ProfileHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileHttp)(nil)).Elem()
}

func (i ProfileHttpArgs) ToProfileHttpOutput() ProfileHttpOutput {
	return i.ToProfileHttpOutputWithContext(context.Background())
}

func (i ProfileHttpArgs) ToProfileHttpOutputWithContext(ctx context.Context) ProfileHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileHttpOutput)
}

func (i ProfileHttpArgs) ToProfileHttpPtrOutput() ProfileHttpPtrOutput {
	return i.ToProfileHttpPtrOutputWithContext(context.Background())
}

func (i ProfileHttpArgs) ToProfileHttpPtrOutputWithContext(ctx context.Context) ProfileHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileHttpOutput).ToProfileHttpPtrOutputWithContext(ctx)
}

// ProfileHttpPtrInput is an input type that accepts ProfileHttpArgs, ProfileHttpPtr and ProfileHttpPtrOutput values.
// You can construct a concrete instance of `ProfileHttpPtrInput` via:
//
//	        ProfileHttpArgs{...}
//
//	or:
//
//	        nil
type ProfileHttpPtrInput interface {
	pulumi.Input

	ToProfileHttpPtrOutput() ProfileHttpPtrOutput
	ToProfileHttpPtrOutputWithContext(context.Context) ProfileHttpPtrOutput
}

type profileHttpPtrType ProfileHttpArgs

func ProfileHttpPtr(v *ProfileHttpArgs) ProfileHttpPtrInput {
	return (*profileHttpPtrType)(v)
}

func (*profileHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileHttp)(nil)).Elem()
}

func (i *profileHttpPtrType) ToProfileHttpPtrOutput() ProfileHttpPtrOutput {
	return i.ToProfileHttpPtrOutputWithContext(context.Background())
}

func (i *profileHttpPtrType) ToProfileHttpPtrOutputWithContext(ctx context.Context) ProfileHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileHttpPtrOutput)
}

type ProfileHttpOutput struct{ *pulumi.OutputState }

func (ProfileHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileHttp)(nil)).Elem()
}

func (o ProfileHttpOutput) ToProfileHttpOutput() ProfileHttpOutput {
	return o
}

func (o ProfileHttpOutput) ToProfileHttpOutputWithContext(ctx context.Context) ProfileHttpOutput {
	return o
}

func (o ProfileHttpOutput) ToProfileHttpPtrOutput() ProfileHttpPtrOutput {
	return o.ToProfileHttpPtrOutputWithContext(context.Background())
}

func (o ProfileHttpOutput) ToProfileHttpPtrOutputWithContext(ctx context.Context) ProfileHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileHttp) *ProfileHttp {
		return &v
	}).(ProfileHttpPtrOutput)
}

// Select the archive types to block.
func (o ProfileHttpOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileHttp) *string { return v.ArchiveBlock }).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o ProfileHttpOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileHttp) *string { return v.ArchiveLog }).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o ProfileHttpOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileHttp) *string { return v.AvScan }).(pulumi.StringPtrOutput)
}

// Enable Content Disarm and Reconstruction for this protocol. Valid values: `disable`, `enable`.
func (o ProfileHttpOutput) ContentDisarm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileHttp) *string { return v.ContentDisarm }).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o ProfileHttpOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileHttp) *string { return v.Emulator }).(pulumi.StringPtrOutput)
}

// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
func (o ProfileHttpOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileHttp) *string { return v.ExternalBlocklist }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o ProfileHttpOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileHttp) *string { return v.Fortiai }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o ProfileHttpOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileHttp) *string { return v.Fortindr }).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o ProfileHttpOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileHttp) *string { return v.Fortisandbox }).(pulumi.StringPtrOutput)
}

// Enable/disable HTTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o ProfileHttpOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileHttp) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service.
func (o ProfileHttpOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileHttp) *string { return v.OutbreakPrevention }).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o ProfileHttpOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileHttp) *string { return v.Quarantine }).(pulumi.StringPtrOutput)
}

// Configure the action the FortiGate unit will take on unknown content-encoding. Valid values: `block`, `inspect`, `bypass`.
func (o ProfileHttpOutput) UnknownContentEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileHttp) *string { return v.UnknownContentEncoding }).(pulumi.StringPtrOutput)
}

type ProfileHttpPtrOutput struct{ *pulumi.OutputState }

func (ProfileHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileHttp)(nil)).Elem()
}

func (o ProfileHttpPtrOutput) ToProfileHttpPtrOutput() ProfileHttpPtrOutput {
	return o
}

func (o ProfileHttpPtrOutput) ToProfileHttpPtrOutputWithContext(ctx context.Context) ProfileHttpPtrOutput {
	return o
}

func (o ProfileHttpPtrOutput) Elem() ProfileHttpOutput {
	return o.ApplyT(func(v *ProfileHttp) ProfileHttp {
		if v != nil {
			return *v
		}
		var ret ProfileHttp
		return ret
	}).(ProfileHttpOutput)
}

// Select the archive types to block.
func (o ProfileHttpPtrOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveBlock
	}).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o ProfileHttpPtrOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveLog
	}).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o ProfileHttpPtrOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.AvScan
	}).(pulumi.StringPtrOutput)
}

// Enable Content Disarm and Reconstruction for this protocol. Valid values: `disable`, `enable`.
func (o ProfileHttpPtrOutput) ContentDisarm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.ContentDisarm
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o ProfileHttpPtrOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.Emulator
	}).(pulumi.StringPtrOutput)
}

// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
func (o ProfileHttpPtrOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.ExternalBlocklist
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o ProfileHttpPtrOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.Fortiai
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o ProfileHttpPtrOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.Fortindr
	}).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o ProfileHttpPtrOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.Fortisandbox
	}).(pulumi.StringPtrOutput)
}

// Enable/disable HTTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o ProfileHttpPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service.
func (o ProfileHttpPtrOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.OutbreakPrevention
	}).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o ProfileHttpPtrOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.Quarantine
	}).(pulumi.StringPtrOutput)
}

// Configure the action the FortiGate unit will take on unknown content-encoding. Valid values: `block`, `inspect`, `bypass`.
func (o ProfileHttpPtrOutput) UnknownContentEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.UnknownContentEncoding
	}).(pulumi.StringPtrOutput)
}

type ProfileImap struct {
	// Select the archive types to block.
	ArchiveBlock *string `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog *string `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan *string `pulumi:"avScan"`
	// Enable Content Disarm and Reconstruction for this protocol. Valid values: `disable`, `enable`.
	ContentDisarm *string `pulumi:"contentDisarm"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator *string `pulumi:"emulator"`
	// Treat Windows executable files as viruses for the purpose of blocking or monitoring. Valid values: `default`, `virus`.
	Executables *string `pulumi:"executables"`
	// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
	ExternalBlocklist *string `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai *string `pulumi:"fortiai"`
	// Enable/disable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr *string `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox *string `pulumi:"fortisandbox"`
	// Enable/disable POP3 AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options *string `pulumi:"options"`
	// Enable Virus Outbreak Prevention service.
	OutbreakPrevention *string `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine *string `pulumi:"quarantine"`
}

// ProfileImapInput is an input type that accepts ProfileImapArgs and ProfileImapOutput values.
// You can construct a concrete instance of `ProfileImapInput` via:
//
//	ProfileImapArgs{...}
type ProfileImapInput interface {
	pulumi.Input

	ToProfileImapOutput() ProfileImapOutput
	ToProfileImapOutputWithContext(context.Context) ProfileImapOutput
}

type ProfileImapArgs struct {
	// Select the archive types to block.
	ArchiveBlock pulumi.StringPtrInput `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog pulumi.StringPtrInput `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan pulumi.StringPtrInput `pulumi:"avScan"`
	// Enable Content Disarm and Reconstruction for this protocol. Valid values: `disable`, `enable`.
	ContentDisarm pulumi.StringPtrInput `pulumi:"contentDisarm"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator pulumi.StringPtrInput `pulumi:"emulator"`
	// Treat Windows executable files as viruses for the purpose of blocking or monitoring. Valid values: `default`, `virus`.
	Executables pulumi.StringPtrInput `pulumi:"executables"`
	// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
	ExternalBlocklist pulumi.StringPtrInput `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai pulumi.StringPtrInput `pulumi:"fortiai"`
	// Enable/disable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr pulumi.StringPtrInput `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox pulumi.StringPtrInput `pulumi:"fortisandbox"`
	// Enable/disable POP3 AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Enable Virus Outbreak Prevention service.
	OutbreakPrevention pulumi.StringPtrInput `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine pulumi.StringPtrInput `pulumi:"quarantine"`
}

func (ProfileImapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileImap)(nil)).Elem()
}

func (i ProfileImapArgs) ToProfileImapOutput() ProfileImapOutput {
	return i.ToProfileImapOutputWithContext(context.Background())
}

func (i ProfileImapArgs) ToProfileImapOutputWithContext(ctx context.Context) ProfileImapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileImapOutput)
}

func (i ProfileImapArgs) ToProfileImapPtrOutput() ProfileImapPtrOutput {
	return i.ToProfileImapPtrOutputWithContext(context.Background())
}

func (i ProfileImapArgs) ToProfileImapPtrOutputWithContext(ctx context.Context) ProfileImapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileImapOutput).ToProfileImapPtrOutputWithContext(ctx)
}

// ProfileImapPtrInput is an input type that accepts ProfileImapArgs, ProfileImapPtr and ProfileImapPtrOutput values.
// You can construct a concrete instance of `ProfileImapPtrInput` via:
//
//	        ProfileImapArgs{...}
//
//	or:
//
//	        nil
type ProfileImapPtrInput interface {
	pulumi.Input

	ToProfileImapPtrOutput() ProfileImapPtrOutput
	ToProfileImapPtrOutputWithContext(context.Context) ProfileImapPtrOutput
}

type profileImapPtrType ProfileImapArgs

func ProfileImapPtr(v *ProfileImapArgs) ProfileImapPtrInput {
	return (*profileImapPtrType)(v)
}

func (*profileImapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileImap)(nil)).Elem()
}

func (i *profileImapPtrType) ToProfileImapPtrOutput() ProfileImapPtrOutput {
	return i.ToProfileImapPtrOutputWithContext(context.Background())
}

func (i *profileImapPtrType) ToProfileImapPtrOutputWithContext(ctx context.Context) ProfileImapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileImapPtrOutput)
}

type ProfileImapOutput struct{ *pulumi.OutputState }

func (ProfileImapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileImap)(nil)).Elem()
}

func (o ProfileImapOutput) ToProfileImapOutput() ProfileImapOutput {
	return o
}

func (o ProfileImapOutput) ToProfileImapOutputWithContext(ctx context.Context) ProfileImapOutput {
	return o
}

func (o ProfileImapOutput) ToProfileImapPtrOutput() ProfileImapPtrOutput {
	return o.ToProfileImapPtrOutputWithContext(context.Background())
}

func (o ProfileImapOutput) ToProfileImapPtrOutputWithContext(ctx context.Context) ProfileImapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileImap) *ProfileImap {
		return &v
	}).(ProfileImapPtrOutput)
}

// Select the archive types to block.
func (o ProfileImapOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileImap) *string { return v.ArchiveBlock }).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o ProfileImapOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileImap) *string { return v.ArchiveLog }).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o ProfileImapOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileImap) *string { return v.AvScan }).(pulumi.StringPtrOutput)
}

// Enable Content Disarm and Reconstruction for this protocol. Valid values: `disable`, `enable`.
func (o ProfileImapOutput) ContentDisarm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileImap) *string { return v.ContentDisarm }).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o ProfileImapOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileImap) *string { return v.Emulator }).(pulumi.StringPtrOutput)
}

// Treat Windows executable files as viruses for the purpose of blocking or monitoring. Valid values: `default`, `virus`.
func (o ProfileImapOutput) Executables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileImap) *string { return v.Executables }).(pulumi.StringPtrOutput)
}

// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
func (o ProfileImapOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileImap) *string { return v.ExternalBlocklist }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o ProfileImapOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileImap) *string { return v.Fortiai }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o ProfileImapOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileImap) *string { return v.Fortindr }).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o ProfileImapOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileImap) *string { return v.Fortisandbox }).(pulumi.StringPtrOutput)
}

// Enable/disable POP3 AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o ProfileImapOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileImap) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service.
func (o ProfileImapOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileImap) *string { return v.OutbreakPrevention }).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o ProfileImapOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileImap) *string { return v.Quarantine }).(pulumi.StringPtrOutput)
}

type ProfileImapPtrOutput struct{ *pulumi.OutputState }

func (ProfileImapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileImap)(nil)).Elem()
}

func (o ProfileImapPtrOutput) ToProfileImapPtrOutput() ProfileImapPtrOutput {
	return o
}

func (o ProfileImapPtrOutput) ToProfileImapPtrOutputWithContext(ctx context.Context) ProfileImapPtrOutput {
	return o
}

func (o ProfileImapPtrOutput) Elem() ProfileImapOutput {
	return o.ApplyT(func(v *ProfileImap) ProfileImap {
		if v != nil {
			return *v
		}
		var ret ProfileImap
		return ret
	}).(ProfileImapOutput)
}

// Select the archive types to block.
func (o ProfileImapPtrOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveBlock
	}).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o ProfileImapPtrOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveLog
	}).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o ProfileImapPtrOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.AvScan
	}).(pulumi.StringPtrOutput)
}

// Enable Content Disarm and Reconstruction for this protocol. Valid values: `disable`, `enable`.
func (o ProfileImapPtrOutput) ContentDisarm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.ContentDisarm
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o ProfileImapPtrOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.Emulator
	}).(pulumi.StringPtrOutput)
}

// Treat Windows executable files as viruses for the purpose of blocking or monitoring. Valid values: `default`, `virus`.
func (o ProfileImapPtrOutput) Executables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.Executables
	}).(pulumi.StringPtrOutput)
}

// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
func (o ProfileImapPtrOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.ExternalBlocklist
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o ProfileImapPtrOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.Fortiai
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o ProfileImapPtrOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.Fortindr
	}).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o ProfileImapPtrOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.Fortisandbox
	}).(pulumi.StringPtrOutput)
}

// Enable/disable POP3 AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o ProfileImapPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service.
func (o ProfileImapPtrOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.OutbreakPrevention
	}).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o ProfileImapPtrOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.Quarantine
	}).(pulumi.StringPtrOutput)
}

type ProfileMapi struct {
	// Select the archive types to block.
	ArchiveBlock *string `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog *string `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan *string `pulumi:"avScan"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator *string `pulumi:"emulator"`
	// Treat Windows executable files as viruses for the purpose of blocking or monitoring. Valid values: `default`, `virus`.
	Executables *string `pulumi:"executables"`
	// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
	ExternalBlocklist *string `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai *string `pulumi:"fortiai"`
	// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr *string `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox *string `pulumi:"fortisandbox"`
	// Enable/disable MAPI AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options *string `pulumi:"options"`
	// Enable Virus Outbreak Prevention service.
	OutbreakPrevention *string `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine *string `pulumi:"quarantine"`
}

// ProfileMapiInput is an input type that accepts ProfileMapiArgs and ProfileMapiOutput values.
// You can construct a concrete instance of `ProfileMapiInput` via:
//
//	ProfileMapiArgs{...}
type ProfileMapiInput interface {
	pulumi.Input

	ToProfileMapiOutput() ProfileMapiOutput
	ToProfileMapiOutputWithContext(context.Context) ProfileMapiOutput
}

type ProfileMapiArgs struct {
	// Select the archive types to block.
	ArchiveBlock pulumi.StringPtrInput `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog pulumi.StringPtrInput `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan pulumi.StringPtrInput `pulumi:"avScan"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator pulumi.StringPtrInput `pulumi:"emulator"`
	// Treat Windows executable files as viruses for the purpose of blocking or monitoring. Valid values: `default`, `virus`.
	Executables pulumi.StringPtrInput `pulumi:"executables"`
	// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
	ExternalBlocklist pulumi.StringPtrInput `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai pulumi.StringPtrInput `pulumi:"fortiai"`
	// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr pulumi.StringPtrInput `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox pulumi.StringPtrInput `pulumi:"fortisandbox"`
	// Enable/disable MAPI AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Enable Virus Outbreak Prevention service.
	OutbreakPrevention pulumi.StringPtrInput `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine pulumi.StringPtrInput `pulumi:"quarantine"`
}

func (ProfileMapiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileMapi)(nil)).Elem()
}

func (i ProfileMapiArgs) ToProfileMapiOutput() ProfileMapiOutput {
	return i.ToProfileMapiOutputWithContext(context.Background())
}

func (i ProfileMapiArgs) ToProfileMapiOutputWithContext(ctx context.Context) ProfileMapiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileMapiOutput)
}

func (i ProfileMapiArgs) ToProfileMapiPtrOutput() ProfileMapiPtrOutput {
	return i.ToProfileMapiPtrOutputWithContext(context.Background())
}

func (i ProfileMapiArgs) ToProfileMapiPtrOutputWithContext(ctx context.Context) ProfileMapiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileMapiOutput).ToProfileMapiPtrOutputWithContext(ctx)
}

// ProfileMapiPtrInput is an input type that accepts ProfileMapiArgs, ProfileMapiPtr and ProfileMapiPtrOutput values.
// You can construct a concrete instance of `ProfileMapiPtrInput` via:
//
//	        ProfileMapiArgs{...}
//
//	or:
//
//	        nil
type ProfileMapiPtrInput interface {
	pulumi.Input

	ToProfileMapiPtrOutput() ProfileMapiPtrOutput
	ToProfileMapiPtrOutputWithContext(context.Context) ProfileMapiPtrOutput
}

type profileMapiPtrType ProfileMapiArgs

func ProfileMapiPtr(v *ProfileMapiArgs) ProfileMapiPtrInput {
	return (*profileMapiPtrType)(v)
}

func (*profileMapiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileMapi)(nil)).Elem()
}

func (i *profileMapiPtrType) ToProfileMapiPtrOutput() ProfileMapiPtrOutput {
	return i.ToProfileMapiPtrOutputWithContext(context.Background())
}

func (i *profileMapiPtrType) ToProfileMapiPtrOutputWithContext(ctx context.Context) ProfileMapiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileMapiPtrOutput)
}

type ProfileMapiOutput struct{ *pulumi.OutputState }

func (ProfileMapiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileMapi)(nil)).Elem()
}

func (o ProfileMapiOutput) ToProfileMapiOutput() ProfileMapiOutput {
	return o
}

func (o ProfileMapiOutput) ToProfileMapiOutputWithContext(ctx context.Context) ProfileMapiOutput {
	return o
}

func (o ProfileMapiOutput) ToProfileMapiPtrOutput() ProfileMapiPtrOutput {
	return o.ToProfileMapiPtrOutputWithContext(context.Background())
}

func (o ProfileMapiOutput) ToProfileMapiPtrOutputWithContext(ctx context.Context) ProfileMapiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileMapi) *ProfileMapi {
		return &v
	}).(ProfileMapiPtrOutput)
}

// Select the archive types to block.
func (o ProfileMapiOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileMapi) *string { return v.ArchiveBlock }).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o ProfileMapiOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileMapi) *string { return v.ArchiveLog }).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o ProfileMapiOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileMapi) *string { return v.AvScan }).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o ProfileMapiOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileMapi) *string { return v.Emulator }).(pulumi.StringPtrOutput)
}

// Treat Windows executable files as viruses for the purpose of blocking or monitoring. Valid values: `default`, `virus`.
func (o ProfileMapiOutput) Executables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileMapi) *string { return v.Executables }).(pulumi.StringPtrOutput)
}

// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
func (o ProfileMapiOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileMapi) *string { return v.ExternalBlocklist }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o ProfileMapiOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileMapi) *string { return v.Fortiai }).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o ProfileMapiOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileMapi) *string { return v.Fortindr }).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o ProfileMapiOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileMapi) *string { return v.Fortisandbox }).(pulumi.StringPtrOutput)
}

// Enable/disable MAPI AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o ProfileMapiOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileMapi) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service.
func (o ProfileMapiOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileMapi) *string { return v.OutbreakPrevention }).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o ProfileMapiOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileMapi) *string { return v.Quarantine }).(pulumi.StringPtrOutput)
}

type ProfileMapiPtrOutput struct{ *pulumi.OutputState }

func (ProfileMapiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileMapi)(nil)).Elem()
}

func (o ProfileMapiPtrOutput) ToProfileMapiPtrOutput() ProfileMapiPtrOutput {
	return o
}

func (o ProfileMapiPtrOutput) ToProfileMapiPtrOutputWithContext(ctx context.Context) ProfileMapiPtrOutput {
	return o
}

func (o ProfileMapiPtrOutput) Elem() ProfileMapiOutput {
	return o.ApplyT(func(v *ProfileMapi) ProfileMapi {
		if v != nil {
			return *v
		}
		var ret ProfileMapi
		return ret
	}).(ProfileMapiOutput)
}

// Select the archive types to block.
func (o ProfileMapiPtrOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveBlock
	}).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o ProfileMapiPtrOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveLog
	}).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o ProfileMapiPtrOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.AvScan
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o ProfileMapiPtrOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.Emulator
	}).(pulumi.StringPtrOutput)
}

// Treat Windows executable files as viruses for the purpose of blocking or monitoring. Valid values: `default`, `virus`.
func (o ProfileMapiPtrOutput) Executables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.Executables
	}).(pulumi.StringPtrOutput)
}

// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
func (o ProfileMapiPtrOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.ExternalBlocklist
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o ProfileMapiPtrOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.Fortiai
	}).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o ProfileMapiPtrOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.Fortindr
	}).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o ProfileMapiPtrOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.Fortisandbox
	}).(pulumi.StringPtrOutput)
}

// Enable/disable MAPI AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o ProfileMapiPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service.
func (o ProfileMapiPtrOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.OutbreakPrevention
	}).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o ProfileMapiPtrOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.Quarantine
	}).(pulumi.StringPtrOutput)
}

type ProfileNacQuar struct {
	// Duration of quarantine.
	Expiry *string `pulumi:"expiry"`
	// Enable/Disable quarantining infected hosts to the banned user list. Valid values: `none`, `quar-src-ip`.
	Infected *string `pulumi:"infected"`
	// Enable/disable AntiVirus quarantine logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
}

// ProfileNacQuarInput is an input type that accepts ProfileNacQuarArgs and ProfileNacQuarOutput values.
// You can construct a concrete instance of `ProfileNacQuarInput` via:
//
//	ProfileNacQuarArgs{...}
type ProfileNacQuarInput interface {
	pulumi.Input

	ToProfileNacQuarOutput() ProfileNacQuarOutput
	ToProfileNacQuarOutputWithContext(context.Context) ProfileNacQuarOutput
}

type ProfileNacQuarArgs struct {
	// Duration of quarantine.
	Expiry pulumi.StringPtrInput `pulumi:"expiry"`
	// Enable/Disable quarantining infected hosts to the banned user list. Valid values: `none`, `quar-src-ip`.
	Infected pulumi.StringPtrInput `pulumi:"infected"`
	// Enable/disable AntiVirus quarantine logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
}

func (ProfileNacQuarArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileNacQuar)(nil)).Elem()
}

func (i ProfileNacQuarArgs) ToProfileNacQuarOutput() ProfileNacQuarOutput {
	return i.ToProfileNacQuarOutputWithContext(context.Background())
}

func (i ProfileNacQuarArgs) ToProfileNacQuarOutputWithContext(ctx context.Context) ProfileNacQuarOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileNacQuarOutput)
}

func (i ProfileNacQuarArgs) ToProfileNacQuarPtrOutput() ProfileNacQuarPtrOutput {
	return i.ToProfileNacQuarPtrOutputWithContext(context.Background())
}

func (i ProfileNacQuarArgs) ToProfileNacQuarPtrOutputWithContext(ctx context.Context) ProfileNacQuarPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileNacQuarOutput).ToProfileNacQuarPtrOutputWithContext(ctx)
}

// ProfileNacQuarPtrInput is an input type that accepts ProfileNacQuarArgs, ProfileNacQuarPtr and ProfileNacQuarPtrOutput values.
// You can construct a concrete instance of `ProfileNacQuarPtrInput` via:
//
//	        ProfileNacQuarArgs{...}
//
//	or:
//
//	        nil
type ProfileNacQuarPtrInput interface {
	pulumi.Input

	ToProfileNacQuarPtrOutput() ProfileNacQuarPtrOutput
	ToProfileNacQuarPtrOutputWithContext(context.Context) ProfileNacQuarPtrOutput
}

type profileNacQuarPtrType ProfileNacQuarArgs

func ProfileNacQuarPtr(v *ProfileNacQuarArgs) ProfileNacQuarPtrInput {
	return (*profileNacQuarPtrType)(v)
}

func (*profileNacQuarPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileNacQuar)(nil)).Elem()
}

func (i *profileNacQuarPtrType) ToProfileNacQuarPtrOutput() ProfileNacQuarPtrOutput {
	return i.ToProfileNacQuarPtrOutputWithContext(context.Background())
}

func (i *profileNacQuarPtrType) ToProfileNacQuarPtrOutputWithContext(ctx context.Context) ProfileNacQuarPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileNacQuarPtrOutput)
}

type ProfileNacQuarOutput struct{ *pulumi.OutputState }

func (ProfileNacQuarOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileNacQuar)(nil)).Elem()
}

func (o ProfileNacQuarOutput) ToProfileNacQuarOutput() ProfileNacQuarOutput {
	return o
}

func (o ProfileNacQuarOutput) ToProfileNacQuarOutputWithContext(ctx context.Context) ProfileNacQuarOutput {
	return o
}

func (o ProfileNacQuarOutput) ToProfileNacQuarPtrOutput() ProfileNacQuarPtrOutput {
	return o.ToProfileNacQuarPtrOutputWithContext(context.Background())
}

func (o ProfileNacQuarOutput) ToProfileNacQuarPtrOutputWithContext(ctx context.Context) ProfileNacQuarPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileNacQuar) *ProfileNacQuar {
		return &v
	}).(ProfileNacQuarPtrOutput)
}

// Duration of quarantine.
func (o ProfileNacQuarOutput) Expiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileNacQuar) *string { return v.Expiry }).(pulumi.StringPtrOutput)
}

// Enable/Disable quarantining infected hosts to the banned user list. Valid values: `none`, `quar-src-ip`.
func (o ProfileNacQuarOutput) Infected() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileNacQuar) *string { return v.Infected }).(pulumi.StringPtrOutput)
}

// Enable/disable AntiVirus quarantine logging. Valid values: `enable`, `disable`.
func (o ProfileNacQuarOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileNacQuar) *string { return v.Log }).(pulumi.StringPtrOutput)
}

type ProfileNacQuarPtrOutput struct{ *pulumi.OutputState }

func (ProfileNacQuarPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileNacQuar)(nil)).Elem()
}

func (o ProfileNacQuarPtrOutput) ToProfileNacQuarPtrOutput() ProfileNacQuarPtrOutput {
	return o
}

func (o ProfileNacQuarPtrOutput) ToProfileNacQuarPtrOutputWithContext(ctx context.Context) ProfileNacQuarPtrOutput {
	return o
}

func (o ProfileNacQuarPtrOutput) Elem() ProfileNacQuarOutput {
	return o.ApplyT(func(v *ProfileNacQuar) ProfileNacQuar {
		if v != nil {
			return *v
		}
		var ret ProfileNacQuar
		return ret
	}).(ProfileNacQuarOutput)
}

// Duration of quarantine.
func (o ProfileNacQuarPtrOutput) Expiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileNacQuar) *string {
		if v == nil {
			return nil
		}
		return v.Expiry
	}).(pulumi.StringPtrOutput)
}

// Enable/Disable quarantining infected hosts to the banned user list. Valid values: `none`, `quar-src-ip`.
func (o ProfileNacQuarPtrOutput) Infected() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileNacQuar) *string {
		if v == nil {
			return nil
		}
		return v.Infected
	}).(pulumi.StringPtrOutput)
}

// Enable/disable AntiVirus quarantine logging. Valid values: `enable`, `disable`.
func (o ProfileNacQuarPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileNacQuar) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

type ProfileNntp struct {
	// Select the archive types to block.
	ArchiveBlock *string `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog *string `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan *string `pulumi:"avScan"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator *string `pulumi:"emulator"`
	// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
	ExternalBlocklist *string `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai *string `pulumi:"fortiai"`
	// Enable/disable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr *string `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox *string `pulumi:"fortisandbox"`
	// Enable/disable NNTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options *string `pulumi:"options"`
	// Enable Virus Outbreak Prevention service.
	OutbreakPrevention *string `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine *string `pulumi:"quarantine"`
}

// ProfileNntpInput is an input type that accepts ProfileNntpArgs and ProfileNntpOutput values.
// You can construct a concrete instance of `ProfileNntpInput` via:
//
//	ProfileNntpArgs{...}
type ProfileNntpInput interface {
	pulumi.Input

	ToProfileNntpOutput() ProfileNntpOutput
	ToProfileNntpOutputWithContext(context.Context) ProfileNntpOutput
}

type ProfileNntpArgs struct {
	// Select the archive types to block.
	ArchiveBlock pulumi.StringPtrInput `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog pulumi.StringPtrInput `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan pulumi.StringPtrInput `pulumi:"avScan"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator pulumi.StringPtrInput `pulumi:"emulator"`
	// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
	ExternalBlocklist pulumi.StringPtrInput `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai pulumi.StringPtrInput `pulumi:"fortiai"`
	// Enable/disable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr pulumi.StringPtrInput `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox pulumi.StringPtrInput `pulumi:"fortisandbox"`
	// Enable/disable NNTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Enable Virus Outbreak Prevention service.
	OutbreakPrevention pulumi.StringPtrInput `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine pulumi.StringPtrInput `pulumi:"quarantine"`
}

func (ProfileNntpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileNntp)(nil)).Elem()
}

func (i ProfileNntpArgs) ToProfileNntpOutput() ProfileNntpOutput {
	return i.ToProfileNntpOutputWithContext(context.Background())
}

func (i ProfileNntpArgs) ToProfileNntpOutputWithContext(ctx context.Context) ProfileNntpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileNntpOutput)
}

func (i ProfileNntpArgs) ToProfileNntpPtrOutput() ProfileNntpPtrOutput {
	return i.ToProfileNntpPtrOutputWithContext(context.Background())
}

func (i ProfileNntpArgs) ToProfileNntpPtrOutputWithContext(ctx context.Context) ProfileNntpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileNntpOutput).ToProfileNntpPtrOutputWithContext(ctx)
}

// ProfileNntpPtrInput is an input type that accepts ProfileNntpArgs, ProfileNntpPtr and ProfileNntpPtrOutput values.
// You can construct a concrete instance of `ProfileNntpPtrInput` via:
//
//	        ProfileNntpArgs{...}
//
//	or:
//
//	        nil
type ProfileNntpPtrInput interface {
	pulumi.Input

	ToProfileNntpPtrOutput() ProfileNntpPtrOutput
	ToProfileNntpPtrOutputWithContext(context.Context) ProfileNntpPtrOutput
}

type profileNntpPtrType ProfileNntpArgs

func ProfileNntpPtr(v *ProfileNntpArgs) ProfileNntpPtrInput {
	return (*profileNntpPtrType)(v)
}

func (*profileNntpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileNntp)(nil)).Elem()
}

func (i *profileNntpPtrType) ToProfileNntpPtrOutput() ProfileNntpPtrOutput {
	return i.ToProfileNntpPtrOutputWithContext(context.Background())
}

func (i *profileNntpPtrType) ToProfileNntpPtrOutputWithContext(ctx context.Context) ProfileNntpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileNntpPtrOutput)
}

type ProfileNntpOutput struct{ *pulumi.OutputState }

func (ProfileNntpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileNntp)(nil)).Elem()
}

func (o ProfileNntpOutput) ToProfileNntpOutput() ProfileNntpOutput {
	return o
}

func (o ProfileNntpOutput) ToProfileNntpOutputWithContext(ctx context.Context) ProfileNntpOutput {
	return o
}

func (o ProfileNntpOutput) ToProfileNntpPtrOutput() ProfileNntpPtrOutput {
	return o.ToProfileNntpPtrOutputWithContext(context.Background())
}

func (o ProfileNntpOutput) ToProfileNntpPtrOutputWithContext(ctx context.Context) ProfileNntpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileNntp) *ProfileNntp {
		return &v
	}).(ProfileNntpPtrOutput)
}

// Select the archive types to block.
func (o ProfileNntpOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileNntp) *string { return v.ArchiveBlock }).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o ProfileNntpOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileNntp) *string { return v.ArchiveLog }).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o ProfileNntpOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileNntp) *string { return v.AvScan }).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o ProfileNntpOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileNntp) *string { return v.Emulator }).(pulumi.StringPtrOutput)
}

// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
func (o ProfileNntpOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileNntp) *string { return v.ExternalBlocklist }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o ProfileNntpOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileNntp) *string { return v.Fortiai }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o ProfileNntpOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileNntp) *string { return v.Fortindr }).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o ProfileNntpOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileNntp) *string { return v.Fortisandbox }).(pulumi.StringPtrOutput)
}

// Enable/disable NNTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o ProfileNntpOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileNntp) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service.
func (o ProfileNntpOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileNntp) *string { return v.OutbreakPrevention }).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o ProfileNntpOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileNntp) *string { return v.Quarantine }).(pulumi.StringPtrOutput)
}

type ProfileNntpPtrOutput struct{ *pulumi.OutputState }

func (ProfileNntpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileNntp)(nil)).Elem()
}

func (o ProfileNntpPtrOutput) ToProfileNntpPtrOutput() ProfileNntpPtrOutput {
	return o
}

func (o ProfileNntpPtrOutput) ToProfileNntpPtrOutputWithContext(ctx context.Context) ProfileNntpPtrOutput {
	return o
}

func (o ProfileNntpPtrOutput) Elem() ProfileNntpOutput {
	return o.ApplyT(func(v *ProfileNntp) ProfileNntp {
		if v != nil {
			return *v
		}
		var ret ProfileNntp
		return ret
	}).(ProfileNntpOutput)
}

// Select the archive types to block.
func (o ProfileNntpPtrOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileNntp) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveBlock
	}).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o ProfileNntpPtrOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileNntp) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveLog
	}).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o ProfileNntpPtrOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileNntp) *string {
		if v == nil {
			return nil
		}
		return v.AvScan
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o ProfileNntpPtrOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileNntp) *string {
		if v == nil {
			return nil
		}
		return v.Emulator
	}).(pulumi.StringPtrOutput)
}

// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
func (o ProfileNntpPtrOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileNntp) *string {
		if v == nil {
			return nil
		}
		return v.ExternalBlocklist
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o ProfileNntpPtrOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileNntp) *string {
		if v == nil {
			return nil
		}
		return v.Fortiai
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o ProfileNntpPtrOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileNntp) *string {
		if v == nil {
			return nil
		}
		return v.Fortindr
	}).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o ProfileNntpPtrOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileNntp) *string {
		if v == nil {
			return nil
		}
		return v.Fortisandbox
	}).(pulumi.StringPtrOutput)
}

// Enable/disable NNTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o ProfileNntpPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileNntp) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service.
func (o ProfileNntpPtrOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileNntp) *string {
		if v == nil {
			return nil
		}
		return v.OutbreakPrevention
	}).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o ProfileNntpPtrOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileNntp) *string {
		if v == nil {
			return nil
		}
		return v.Quarantine
	}).(pulumi.StringPtrOutput)
}

type ProfileOutbreakPrevention struct {
	// Enable/disable external malware blocklist. Valid values: `disable`, `enable`.
	ExternalBlocklist *string `pulumi:"externalBlocklist"`
	// Enable/disable FortiGuard Virus outbreak prevention service. Valid values: `disable`, `enable`.
	FtgdService *string `pulumi:"ftgdService"`
}

// ProfileOutbreakPreventionInput is an input type that accepts ProfileOutbreakPreventionArgs and ProfileOutbreakPreventionOutput values.
// You can construct a concrete instance of `ProfileOutbreakPreventionInput` via:
//
//	ProfileOutbreakPreventionArgs{...}
type ProfileOutbreakPreventionInput interface {
	pulumi.Input

	ToProfileOutbreakPreventionOutput() ProfileOutbreakPreventionOutput
	ToProfileOutbreakPreventionOutputWithContext(context.Context) ProfileOutbreakPreventionOutput
}

type ProfileOutbreakPreventionArgs struct {
	// Enable/disable external malware blocklist. Valid values: `disable`, `enable`.
	ExternalBlocklist pulumi.StringPtrInput `pulumi:"externalBlocklist"`
	// Enable/disable FortiGuard Virus outbreak prevention service. Valid values: `disable`, `enable`.
	FtgdService pulumi.StringPtrInput `pulumi:"ftgdService"`
}

func (ProfileOutbreakPreventionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileOutbreakPrevention)(nil)).Elem()
}

func (i ProfileOutbreakPreventionArgs) ToProfileOutbreakPreventionOutput() ProfileOutbreakPreventionOutput {
	return i.ToProfileOutbreakPreventionOutputWithContext(context.Background())
}

func (i ProfileOutbreakPreventionArgs) ToProfileOutbreakPreventionOutputWithContext(ctx context.Context) ProfileOutbreakPreventionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileOutbreakPreventionOutput)
}

func (i ProfileOutbreakPreventionArgs) ToProfileOutbreakPreventionPtrOutput() ProfileOutbreakPreventionPtrOutput {
	return i.ToProfileOutbreakPreventionPtrOutputWithContext(context.Background())
}

func (i ProfileOutbreakPreventionArgs) ToProfileOutbreakPreventionPtrOutputWithContext(ctx context.Context) ProfileOutbreakPreventionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileOutbreakPreventionOutput).ToProfileOutbreakPreventionPtrOutputWithContext(ctx)
}

// ProfileOutbreakPreventionPtrInput is an input type that accepts ProfileOutbreakPreventionArgs, ProfileOutbreakPreventionPtr and ProfileOutbreakPreventionPtrOutput values.
// You can construct a concrete instance of `ProfileOutbreakPreventionPtrInput` via:
//
//	        ProfileOutbreakPreventionArgs{...}
//
//	or:
//
//	        nil
type ProfileOutbreakPreventionPtrInput interface {
	pulumi.Input

	ToProfileOutbreakPreventionPtrOutput() ProfileOutbreakPreventionPtrOutput
	ToProfileOutbreakPreventionPtrOutputWithContext(context.Context) ProfileOutbreakPreventionPtrOutput
}

type profileOutbreakPreventionPtrType ProfileOutbreakPreventionArgs

func ProfileOutbreakPreventionPtr(v *ProfileOutbreakPreventionArgs) ProfileOutbreakPreventionPtrInput {
	return (*profileOutbreakPreventionPtrType)(v)
}

func (*profileOutbreakPreventionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileOutbreakPrevention)(nil)).Elem()
}

func (i *profileOutbreakPreventionPtrType) ToProfileOutbreakPreventionPtrOutput() ProfileOutbreakPreventionPtrOutput {
	return i.ToProfileOutbreakPreventionPtrOutputWithContext(context.Background())
}

func (i *profileOutbreakPreventionPtrType) ToProfileOutbreakPreventionPtrOutputWithContext(ctx context.Context) ProfileOutbreakPreventionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileOutbreakPreventionPtrOutput)
}

type ProfileOutbreakPreventionOutput struct{ *pulumi.OutputState }

func (ProfileOutbreakPreventionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileOutbreakPrevention)(nil)).Elem()
}

func (o ProfileOutbreakPreventionOutput) ToProfileOutbreakPreventionOutput() ProfileOutbreakPreventionOutput {
	return o
}

func (o ProfileOutbreakPreventionOutput) ToProfileOutbreakPreventionOutputWithContext(ctx context.Context) ProfileOutbreakPreventionOutput {
	return o
}

func (o ProfileOutbreakPreventionOutput) ToProfileOutbreakPreventionPtrOutput() ProfileOutbreakPreventionPtrOutput {
	return o.ToProfileOutbreakPreventionPtrOutputWithContext(context.Background())
}

func (o ProfileOutbreakPreventionOutput) ToProfileOutbreakPreventionPtrOutputWithContext(ctx context.Context) ProfileOutbreakPreventionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileOutbreakPrevention) *ProfileOutbreakPrevention {
		return &v
	}).(ProfileOutbreakPreventionPtrOutput)
}

// Enable/disable external malware blocklist. Valid values: `disable`, `enable`.
func (o ProfileOutbreakPreventionOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileOutbreakPrevention) *string { return v.ExternalBlocklist }).(pulumi.StringPtrOutput)
}

// Enable/disable FortiGuard Virus outbreak prevention service. Valid values: `disable`, `enable`.
func (o ProfileOutbreakPreventionOutput) FtgdService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileOutbreakPrevention) *string { return v.FtgdService }).(pulumi.StringPtrOutput)
}

type ProfileOutbreakPreventionPtrOutput struct{ *pulumi.OutputState }

func (ProfileOutbreakPreventionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileOutbreakPrevention)(nil)).Elem()
}

func (o ProfileOutbreakPreventionPtrOutput) ToProfileOutbreakPreventionPtrOutput() ProfileOutbreakPreventionPtrOutput {
	return o
}

func (o ProfileOutbreakPreventionPtrOutput) ToProfileOutbreakPreventionPtrOutputWithContext(ctx context.Context) ProfileOutbreakPreventionPtrOutput {
	return o
}

func (o ProfileOutbreakPreventionPtrOutput) Elem() ProfileOutbreakPreventionOutput {
	return o.ApplyT(func(v *ProfileOutbreakPrevention) ProfileOutbreakPrevention {
		if v != nil {
			return *v
		}
		var ret ProfileOutbreakPrevention
		return ret
	}).(ProfileOutbreakPreventionOutput)
}

// Enable/disable external malware blocklist. Valid values: `disable`, `enable`.
func (o ProfileOutbreakPreventionPtrOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileOutbreakPrevention) *string {
		if v == nil {
			return nil
		}
		return v.ExternalBlocklist
	}).(pulumi.StringPtrOutput)
}

// Enable/disable FortiGuard Virus outbreak prevention service. Valid values: `disable`, `enable`.
func (o ProfileOutbreakPreventionPtrOutput) FtgdService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileOutbreakPrevention) *string {
		if v == nil {
			return nil
		}
		return v.FtgdService
	}).(pulumi.StringPtrOutput)
}

type ProfilePop3 struct {
	// Select the archive types to block.
	ArchiveBlock *string `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog *string `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan *string `pulumi:"avScan"`
	// AV Content Disarm and Reconstruction settings. The structure of `contentDisarm` block is documented below.
	ContentDisarm *string `pulumi:"contentDisarm"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator *string `pulumi:"emulator"`
	// Treat Windows executable files as viruses for the purpose of blocking or monitoring. Valid values: `default`, `virus`.
	Executables *string `pulumi:"executables"`
	// One or more external malware block lists. The structure of `externalBlocklist` block is documented below.
	ExternalBlocklist *string `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai *string `pulumi:"fortiai"`
	// Enable/disable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr *string `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox *string `pulumi:"fortisandbox"`
	// Enable/disable CIFS AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options *string `pulumi:"options"`
	// Configure Virus Outbreak Prevention settings. The structure of `outbreakPrevention` block is documented below.
	OutbreakPrevention *string `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine *string `pulumi:"quarantine"`
}

// ProfilePop3Input is an input type that accepts ProfilePop3Args and ProfilePop3Output values.
// You can construct a concrete instance of `ProfilePop3Input` via:
//
//	ProfilePop3Args{...}
type ProfilePop3Input interface {
	pulumi.Input

	ToProfilePop3Output() ProfilePop3Output
	ToProfilePop3OutputWithContext(context.Context) ProfilePop3Output
}

type ProfilePop3Args struct {
	// Select the archive types to block.
	ArchiveBlock pulumi.StringPtrInput `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog pulumi.StringPtrInput `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan pulumi.StringPtrInput `pulumi:"avScan"`
	// AV Content Disarm and Reconstruction settings. The structure of `contentDisarm` block is documented below.
	ContentDisarm pulumi.StringPtrInput `pulumi:"contentDisarm"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator pulumi.StringPtrInput `pulumi:"emulator"`
	// Treat Windows executable files as viruses for the purpose of blocking or monitoring. Valid values: `default`, `virus`.
	Executables pulumi.StringPtrInput `pulumi:"executables"`
	// One or more external malware block lists. The structure of `externalBlocklist` block is documented below.
	ExternalBlocklist pulumi.StringPtrInput `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai pulumi.StringPtrInput `pulumi:"fortiai"`
	// Enable/disable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr pulumi.StringPtrInput `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox pulumi.StringPtrInput `pulumi:"fortisandbox"`
	// Enable/disable CIFS AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Configure Virus Outbreak Prevention settings. The structure of `outbreakPrevention` block is documented below.
	OutbreakPrevention pulumi.StringPtrInput `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine pulumi.StringPtrInput `pulumi:"quarantine"`
}

func (ProfilePop3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfilePop3)(nil)).Elem()
}

func (i ProfilePop3Args) ToProfilePop3Output() ProfilePop3Output {
	return i.ToProfilePop3OutputWithContext(context.Background())
}

func (i ProfilePop3Args) ToProfilePop3OutputWithContext(ctx context.Context) ProfilePop3Output {
	return pulumi.ToOutputWithContext(ctx, i).(ProfilePop3Output)
}

func (i ProfilePop3Args) ToProfilePop3PtrOutput() ProfilePop3PtrOutput {
	return i.ToProfilePop3PtrOutputWithContext(context.Background())
}

func (i ProfilePop3Args) ToProfilePop3PtrOutputWithContext(ctx context.Context) ProfilePop3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfilePop3Output).ToProfilePop3PtrOutputWithContext(ctx)
}

// ProfilePop3PtrInput is an input type that accepts ProfilePop3Args, ProfilePop3Ptr and ProfilePop3PtrOutput values.
// You can construct a concrete instance of `ProfilePop3PtrInput` via:
//
//	        ProfilePop3Args{...}
//
//	or:
//
//	        nil
type ProfilePop3PtrInput interface {
	pulumi.Input

	ToProfilePop3PtrOutput() ProfilePop3PtrOutput
	ToProfilePop3PtrOutputWithContext(context.Context) ProfilePop3PtrOutput
}

type profilePop3PtrType ProfilePop3Args

func ProfilePop3Ptr(v *ProfilePop3Args) ProfilePop3PtrInput {
	return (*profilePop3PtrType)(v)
}

func (*profilePop3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfilePop3)(nil)).Elem()
}

func (i *profilePop3PtrType) ToProfilePop3PtrOutput() ProfilePop3PtrOutput {
	return i.ToProfilePop3PtrOutputWithContext(context.Background())
}

func (i *profilePop3PtrType) ToProfilePop3PtrOutputWithContext(ctx context.Context) ProfilePop3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfilePop3PtrOutput)
}

type ProfilePop3Output struct{ *pulumi.OutputState }

func (ProfilePop3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfilePop3)(nil)).Elem()
}

func (o ProfilePop3Output) ToProfilePop3Output() ProfilePop3Output {
	return o
}

func (o ProfilePop3Output) ToProfilePop3OutputWithContext(ctx context.Context) ProfilePop3Output {
	return o
}

func (o ProfilePop3Output) ToProfilePop3PtrOutput() ProfilePop3PtrOutput {
	return o.ToProfilePop3PtrOutputWithContext(context.Background())
}

func (o ProfilePop3Output) ToProfilePop3PtrOutputWithContext(ctx context.Context) ProfilePop3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfilePop3) *ProfilePop3 {
		return &v
	}).(ProfilePop3PtrOutput)
}

// Select the archive types to block.
func (o ProfilePop3Output) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfilePop3) *string { return v.ArchiveBlock }).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o ProfilePop3Output) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfilePop3) *string { return v.ArchiveLog }).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o ProfilePop3Output) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfilePop3) *string { return v.AvScan }).(pulumi.StringPtrOutput)
}

// AV Content Disarm and Reconstruction settings. The structure of `contentDisarm` block is documented below.
func (o ProfilePop3Output) ContentDisarm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfilePop3) *string { return v.ContentDisarm }).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o ProfilePop3Output) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfilePop3) *string { return v.Emulator }).(pulumi.StringPtrOutput)
}

// Treat Windows executable files as viruses for the purpose of blocking or monitoring. Valid values: `default`, `virus`.
func (o ProfilePop3Output) Executables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfilePop3) *string { return v.Executables }).(pulumi.StringPtrOutput)
}

// One or more external malware block lists. The structure of `externalBlocklist` block is documented below.
func (o ProfilePop3Output) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfilePop3) *string { return v.ExternalBlocklist }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o ProfilePop3Output) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfilePop3) *string { return v.Fortiai }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o ProfilePop3Output) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfilePop3) *string { return v.Fortindr }).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o ProfilePop3Output) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfilePop3) *string { return v.Fortisandbox }).(pulumi.StringPtrOutput)
}

// Enable/disable CIFS AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o ProfilePop3Output) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfilePop3) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Configure Virus Outbreak Prevention settings. The structure of `outbreakPrevention` block is documented below.
func (o ProfilePop3Output) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfilePop3) *string { return v.OutbreakPrevention }).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o ProfilePop3Output) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfilePop3) *string { return v.Quarantine }).(pulumi.StringPtrOutput)
}

type ProfilePop3PtrOutput struct{ *pulumi.OutputState }

func (ProfilePop3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfilePop3)(nil)).Elem()
}

func (o ProfilePop3PtrOutput) ToProfilePop3PtrOutput() ProfilePop3PtrOutput {
	return o
}

func (o ProfilePop3PtrOutput) ToProfilePop3PtrOutputWithContext(ctx context.Context) ProfilePop3PtrOutput {
	return o
}

func (o ProfilePop3PtrOutput) Elem() ProfilePop3Output {
	return o.ApplyT(func(v *ProfilePop3) ProfilePop3 {
		if v != nil {
			return *v
		}
		var ret ProfilePop3
		return ret
	}).(ProfilePop3Output)
}

// Select the archive types to block.
func (o ProfilePop3PtrOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveBlock
	}).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o ProfilePop3PtrOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveLog
	}).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o ProfilePop3PtrOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.AvScan
	}).(pulumi.StringPtrOutput)
}

// AV Content Disarm and Reconstruction settings. The structure of `contentDisarm` block is documented below.
func (o ProfilePop3PtrOutput) ContentDisarm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.ContentDisarm
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o ProfilePop3PtrOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.Emulator
	}).(pulumi.StringPtrOutput)
}

// Treat Windows executable files as viruses for the purpose of blocking or monitoring. Valid values: `default`, `virus`.
func (o ProfilePop3PtrOutput) Executables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.Executables
	}).(pulumi.StringPtrOutput)
}

// One or more external malware block lists. The structure of `externalBlocklist` block is documented below.
func (o ProfilePop3PtrOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.ExternalBlocklist
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o ProfilePop3PtrOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.Fortiai
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o ProfilePop3PtrOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.Fortindr
	}).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o ProfilePop3PtrOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.Fortisandbox
	}).(pulumi.StringPtrOutput)
}

// Enable/disable CIFS AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o ProfilePop3PtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Configure Virus Outbreak Prevention settings. The structure of `outbreakPrevention` block is documented below.
func (o ProfilePop3PtrOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.OutbreakPrevention
	}).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o ProfilePop3PtrOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.Quarantine
	}).(pulumi.StringPtrOutput)
}

type ProfileSmb struct {
	// Select the archive types to block. Valid values: `encrypted`, `corrupted`, `partiallycorrupted`, `multipart`, `nested`, `mailbomb`, `fileslimit`, `timeout`, `unhandled`.
	ArchiveBlock *string `pulumi:"archiveBlock"`
	// Select the archive types to log. Valid values: `encrypted`, `corrupted`, `partiallycorrupted`, `multipart`, `nested`, `mailbomb`, `fileslimit`, `timeout`, `unhandled`.
	ArchiveLog *string `pulumi:"archiveLog"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator *string `pulumi:"emulator"`
	// Enable/disable SMB AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options *string `pulumi:"options"`
	// Enable Virus Outbreak Prevention service. Valid values: `disabled`, `files`, `full-archive`.
	OutbreakPrevention *string `pulumi:"outbreakPrevention"`
}

// ProfileSmbInput is an input type that accepts ProfileSmbArgs and ProfileSmbOutput values.
// You can construct a concrete instance of `ProfileSmbInput` via:
//
//	ProfileSmbArgs{...}
type ProfileSmbInput interface {
	pulumi.Input

	ToProfileSmbOutput() ProfileSmbOutput
	ToProfileSmbOutputWithContext(context.Context) ProfileSmbOutput
}

type ProfileSmbArgs struct {
	// Select the archive types to block. Valid values: `encrypted`, `corrupted`, `partiallycorrupted`, `multipart`, `nested`, `mailbomb`, `fileslimit`, `timeout`, `unhandled`.
	ArchiveBlock pulumi.StringPtrInput `pulumi:"archiveBlock"`
	// Select the archive types to log. Valid values: `encrypted`, `corrupted`, `partiallycorrupted`, `multipart`, `nested`, `mailbomb`, `fileslimit`, `timeout`, `unhandled`.
	ArchiveLog pulumi.StringPtrInput `pulumi:"archiveLog"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator pulumi.StringPtrInput `pulumi:"emulator"`
	// Enable/disable SMB AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Enable Virus Outbreak Prevention service. Valid values: `disabled`, `files`, `full-archive`.
	OutbreakPrevention pulumi.StringPtrInput `pulumi:"outbreakPrevention"`
}

func (ProfileSmbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileSmb)(nil)).Elem()
}

func (i ProfileSmbArgs) ToProfileSmbOutput() ProfileSmbOutput {
	return i.ToProfileSmbOutputWithContext(context.Background())
}

func (i ProfileSmbArgs) ToProfileSmbOutputWithContext(ctx context.Context) ProfileSmbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileSmbOutput)
}

func (i ProfileSmbArgs) ToProfileSmbPtrOutput() ProfileSmbPtrOutput {
	return i.ToProfileSmbPtrOutputWithContext(context.Background())
}

func (i ProfileSmbArgs) ToProfileSmbPtrOutputWithContext(ctx context.Context) ProfileSmbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileSmbOutput).ToProfileSmbPtrOutputWithContext(ctx)
}

// ProfileSmbPtrInput is an input type that accepts ProfileSmbArgs, ProfileSmbPtr and ProfileSmbPtrOutput values.
// You can construct a concrete instance of `ProfileSmbPtrInput` via:
//
//	        ProfileSmbArgs{...}
//
//	or:
//
//	        nil
type ProfileSmbPtrInput interface {
	pulumi.Input

	ToProfileSmbPtrOutput() ProfileSmbPtrOutput
	ToProfileSmbPtrOutputWithContext(context.Context) ProfileSmbPtrOutput
}

type profileSmbPtrType ProfileSmbArgs

func ProfileSmbPtr(v *ProfileSmbArgs) ProfileSmbPtrInput {
	return (*profileSmbPtrType)(v)
}

func (*profileSmbPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileSmb)(nil)).Elem()
}

func (i *profileSmbPtrType) ToProfileSmbPtrOutput() ProfileSmbPtrOutput {
	return i.ToProfileSmbPtrOutputWithContext(context.Background())
}

func (i *profileSmbPtrType) ToProfileSmbPtrOutputWithContext(ctx context.Context) ProfileSmbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileSmbPtrOutput)
}

type ProfileSmbOutput struct{ *pulumi.OutputState }

func (ProfileSmbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileSmb)(nil)).Elem()
}

func (o ProfileSmbOutput) ToProfileSmbOutput() ProfileSmbOutput {
	return o
}

func (o ProfileSmbOutput) ToProfileSmbOutputWithContext(ctx context.Context) ProfileSmbOutput {
	return o
}

func (o ProfileSmbOutput) ToProfileSmbPtrOutput() ProfileSmbPtrOutput {
	return o.ToProfileSmbPtrOutputWithContext(context.Background())
}

func (o ProfileSmbOutput) ToProfileSmbPtrOutputWithContext(ctx context.Context) ProfileSmbPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileSmb) *ProfileSmb {
		return &v
	}).(ProfileSmbPtrOutput)
}

// Select the archive types to block. Valid values: `encrypted`, `corrupted`, `partiallycorrupted`, `multipart`, `nested`, `mailbomb`, `fileslimit`, `timeout`, `unhandled`.
func (o ProfileSmbOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileSmb) *string { return v.ArchiveBlock }).(pulumi.StringPtrOutput)
}

// Select the archive types to log. Valid values: `encrypted`, `corrupted`, `partiallycorrupted`, `multipart`, `nested`, `mailbomb`, `fileslimit`, `timeout`, `unhandled`.
func (o ProfileSmbOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileSmb) *string { return v.ArchiveLog }).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o ProfileSmbOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileSmb) *string { return v.Emulator }).(pulumi.StringPtrOutput)
}

// Enable/disable SMB AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o ProfileSmbOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileSmb) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service. Valid values: `disabled`, `files`, `full-archive`.
func (o ProfileSmbOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileSmb) *string { return v.OutbreakPrevention }).(pulumi.StringPtrOutput)
}

type ProfileSmbPtrOutput struct{ *pulumi.OutputState }

func (ProfileSmbPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileSmb)(nil)).Elem()
}

func (o ProfileSmbPtrOutput) ToProfileSmbPtrOutput() ProfileSmbPtrOutput {
	return o
}

func (o ProfileSmbPtrOutput) ToProfileSmbPtrOutputWithContext(ctx context.Context) ProfileSmbPtrOutput {
	return o
}

func (o ProfileSmbPtrOutput) Elem() ProfileSmbOutput {
	return o.ApplyT(func(v *ProfileSmb) ProfileSmb {
		if v != nil {
			return *v
		}
		var ret ProfileSmb
		return ret
	}).(ProfileSmbOutput)
}

// Select the archive types to block. Valid values: `encrypted`, `corrupted`, `partiallycorrupted`, `multipart`, `nested`, `mailbomb`, `fileslimit`, `timeout`, `unhandled`.
func (o ProfileSmbPtrOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileSmb) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveBlock
	}).(pulumi.StringPtrOutput)
}

// Select the archive types to log. Valid values: `encrypted`, `corrupted`, `partiallycorrupted`, `multipart`, `nested`, `mailbomb`, `fileslimit`, `timeout`, `unhandled`.
func (o ProfileSmbPtrOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileSmb) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveLog
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o ProfileSmbPtrOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileSmb) *string {
		if v == nil {
			return nil
		}
		return v.Emulator
	}).(pulumi.StringPtrOutput)
}

// Enable/disable SMB AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o ProfileSmbPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileSmb) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service. Valid values: `disabled`, `files`, `full-archive`.
func (o ProfileSmbPtrOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileSmb) *string {
		if v == nil {
			return nil
		}
		return v.OutbreakPrevention
	}).(pulumi.StringPtrOutput)
}

type ProfileSmtp struct {
	// Select the archive types to block.
	ArchiveBlock *string `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog *string `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan *string `pulumi:"avScan"`
	// Enable Content Disarm and Reconstruction for this protocol. Valid values: `disable`, `enable`.
	ContentDisarm *string `pulumi:"contentDisarm"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator *string `pulumi:"emulator"`
	// Treat Windows executable files as viruses for the purpose of blocking or monitoring. Valid values: `default`, `virus`.
	Executables *string `pulumi:"executables"`
	// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
	ExternalBlocklist *string `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai *string `pulumi:"fortiai"`
	// Enable/disable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr *string `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox *string `pulumi:"fortisandbox"`
	// Enable/disable SMTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options *string `pulumi:"options"`
	// Enable Virus Outbreak Prevention service.
	OutbreakPrevention *string `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine *string `pulumi:"quarantine"`
}

// ProfileSmtpInput is an input type that accepts ProfileSmtpArgs and ProfileSmtpOutput values.
// You can construct a concrete instance of `ProfileSmtpInput` via:
//
//	ProfileSmtpArgs{...}
type ProfileSmtpInput interface {
	pulumi.Input

	ToProfileSmtpOutput() ProfileSmtpOutput
	ToProfileSmtpOutputWithContext(context.Context) ProfileSmtpOutput
}

type ProfileSmtpArgs struct {
	// Select the archive types to block.
	ArchiveBlock pulumi.StringPtrInput `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog pulumi.StringPtrInput `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan pulumi.StringPtrInput `pulumi:"avScan"`
	// Enable Content Disarm and Reconstruction for this protocol. Valid values: `disable`, `enable`.
	ContentDisarm pulumi.StringPtrInput `pulumi:"contentDisarm"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator pulumi.StringPtrInput `pulumi:"emulator"`
	// Treat Windows executable files as viruses for the purpose of blocking or monitoring. Valid values: `default`, `virus`.
	Executables pulumi.StringPtrInput `pulumi:"executables"`
	// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
	ExternalBlocklist pulumi.StringPtrInput `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai pulumi.StringPtrInput `pulumi:"fortiai"`
	// Enable/disable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr pulumi.StringPtrInput `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox pulumi.StringPtrInput `pulumi:"fortisandbox"`
	// Enable/disable SMTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Enable Virus Outbreak Prevention service.
	OutbreakPrevention pulumi.StringPtrInput `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine pulumi.StringPtrInput `pulumi:"quarantine"`
}

func (ProfileSmtpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileSmtp)(nil)).Elem()
}

func (i ProfileSmtpArgs) ToProfileSmtpOutput() ProfileSmtpOutput {
	return i.ToProfileSmtpOutputWithContext(context.Background())
}

func (i ProfileSmtpArgs) ToProfileSmtpOutputWithContext(ctx context.Context) ProfileSmtpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileSmtpOutput)
}

func (i ProfileSmtpArgs) ToProfileSmtpPtrOutput() ProfileSmtpPtrOutput {
	return i.ToProfileSmtpPtrOutputWithContext(context.Background())
}

func (i ProfileSmtpArgs) ToProfileSmtpPtrOutputWithContext(ctx context.Context) ProfileSmtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileSmtpOutput).ToProfileSmtpPtrOutputWithContext(ctx)
}

// ProfileSmtpPtrInput is an input type that accepts ProfileSmtpArgs, ProfileSmtpPtr and ProfileSmtpPtrOutput values.
// You can construct a concrete instance of `ProfileSmtpPtrInput` via:
//
//	        ProfileSmtpArgs{...}
//
//	or:
//
//	        nil
type ProfileSmtpPtrInput interface {
	pulumi.Input

	ToProfileSmtpPtrOutput() ProfileSmtpPtrOutput
	ToProfileSmtpPtrOutputWithContext(context.Context) ProfileSmtpPtrOutput
}

type profileSmtpPtrType ProfileSmtpArgs

func ProfileSmtpPtr(v *ProfileSmtpArgs) ProfileSmtpPtrInput {
	return (*profileSmtpPtrType)(v)
}

func (*profileSmtpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileSmtp)(nil)).Elem()
}

func (i *profileSmtpPtrType) ToProfileSmtpPtrOutput() ProfileSmtpPtrOutput {
	return i.ToProfileSmtpPtrOutputWithContext(context.Background())
}

func (i *profileSmtpPtrType) ToProfileSmtpPtrOutputWithContext(ctx context.Context) ProfileSmtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileSmtpPtrOutput)
}

type ProfileSmtpOutput struct{ *pulumi.OutputState }

func (ProfileSmtpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileSmtp)(nil)).Elem()
}

func (o ProfileSmtpOutput) ToProfileSmtpOutput() ProfileSmtpOutput {
	return o
}

func (o ProfileSmtpOutput) ToProfileSmtpOutputWithContext(ctx context.Context) ProfileSmtpOutput {
	return o
}

func (o ProfileSmtpOutput) ToProfileSmtpPtrOutput() ProfileSmtpPtrOutput {
	return o.ToProfileSmtpPtrOutputWithContext(context.Background())
}

func (o ProfileSmtpOutput) ToProfileSmtpPtrOutputWithContext(ctx context.Context) ProfileSmtpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileSmtp) *ProfileSmtp {
		return &v
	}).(ProfileSmtpPtrOutput)
}

// Select the archive types to block.
func (o ProfileSmtpOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileSmtp) *string { return v.ArchiveBlock }).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o ProfileSmtpOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileSmtp) *string { return v.ArchiveLog }).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o ProfileSmtpOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileSmtp) *string { return v.AvScan }).(pulumi.StringPtrOutput)
}

// Enable Content Disarm and Reconstruction for this protocol. Valid values: `disable`, `enable`.
func (o ProfileSmtpOutput) ContentDisarm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileSmtp) *string { return v.ContentDisarm }).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o ProfileSmtpOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileSmtp) *string { return v.Emulator }).(pulumi.StringPtrOutput)
}

// Treat Windows executable files as viruses for the purpose of blocking or monitoring. Valid values: `default`, `virus`.
func (o ProfileSmtpOutput) Executables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileSmtp) *string { return v.Executables }).(pulumi.StringPtrOutput)
}

// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
func (o ProfileSmtpOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileSmtp) *string { return v.ExternalBlocklist }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o ProfileSmtpOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileSmtp) *string { return v.Fortiai }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o ProfileSmtpOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileSmtp) *string { return v.Fortindr }).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o ProfileSmtpOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileSmtp) *string { return v.Fortisandbox }).(pulumi.StringPtrOutput)
}

// Enable/disable SMTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o ProfileSmtpOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileSmtp) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service.
func (o ProfileSmtpOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileSmtp) *string { return v.OutbreakPrevention }).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o ProfileSmtpOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileSmtp) *string { return v.Quarantine }).(pulumi.StringPtrOutput)
}

type ProfileSmtpPtrOutput struct{ *pulumi.OutputState }

func (ProfileSmtpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileSmtp)(nil)).Elem()
}

func (o ProfileSmtpPtrOutput) ToProfileSmtpPtrOutput() ProfileSmtpPtrOutput {
	return o
}

func (o ProfileSmtpPtrOutput) ToProfileSmtpPtrOutputWithContext(ctx context.Context) ProfileSmtpPtrOutput {
	return o
}

func (o ProfileSmtpPtrOutput) Elem() ProfileSmtpOutput {
	return o.ApplyT(func(v *ProfileSmtp) ProfileSmtp {
		if v != nil {
			return *v
		}
		var ret ProfileSmtp
		return ret
	}).(ProfileSmtpOutput)
}

// Select the archive types to block.
func (o ProfileSmtpPtrOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveBlock
	}).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o ProfileSmtpPtrOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveLog
	}).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o ProfileSmtpPtrOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.AvScan
	}).(pulumi.StringPtrOutput)
}

// Enable Content Disarm and Reconstruction for this protocol. Valid values: `disable`, `enable`.
func (o ProfileSmtpPtrOutput) ContentDisarm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.ContentDisarm
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o ProfileSmtpPtrOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.Emulator
	}).(pulumi.StringPtrOutput)
}

// Treat Windows executable files as viruses for the purpose of blocking or monitoring. Valid values: `default`, `virus`.
func (o ProfileSmtpPtrOutput) Executables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.Executables
	}).(pulumi.StringPtrOutput)
}

// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
func (o ProfileSmtpPtrOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.ExternalBlocklist
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o ProfileSmtpPtrOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.Fortiai
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o ProfileSmtpPtrOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.Fortindr
	}).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o ProfileSmtpPtrOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.Fortisandbox
	}).(pulumi.StringPtrOutput)
}

// Enable/disable SMTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o ProfileSmtpPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service.
func (o ProfileSmtpPtrOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.OutbreakPrevention
	}).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o ProfileSmtpPtrOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.Quarantine
	}).(pulumi.StringPtrOutput)
}

type ProfileSsh struct {
	// Select the archive types to block.
	ArchiveBlock *string `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog *string `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan *string `pulumi:"avScan"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator *string `pulumi:"emulator"`
	// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
	ExternalBlocklist *string `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai *string `pulumi:"fortiai"`
	// Enable/disable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr *string `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox *string `pulumi:"fortisandbox"`
	// Enable/disable SFTP and SCP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options *string `pulumi:"options"`
	// Enable Virus Outbreak Prevention service.
	OutbreakPrevention *string `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine *string `pulumi:"quarantine"`
}

// ProfileSshInput is an input type that accepts ProfileSshArgs and ProfileSshOutput values.
// You can construct a concrete instance of `ProfileSshInput` via:
//
//	ProfileSshArgs{...}
type ProfileSshInput interface {
	pulumi.Input

	ToProfileSshOutput() ProfileSshOutput
	ToProfileSshOutputWithContext(context.Context) ProfileSshOutput
}

type ProfileSshArgs struct {
	// Select the archive types to block.
	ArchiveBlock pulumi.StringPtrInput `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog pulumi.StringPtrInput `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan pulumi.StringPtrInput `pulumi:"avScan"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator pulumi.StringPtrInput `pulumi:"emulator"`
	// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
	ExternalBlocklist pulumi.StringPtrInput `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai pulumi.StringPtrInput `pulumi:"fortiai"`
	// Enable/disable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr pulumi.StringPtrInput `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox pulumi.StringPtrInput `pulumi:"fortisandbox"`
	// Enable/disable SFTP and SCP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Enable Virus Outbreak Prevention service.
	OutbreakPrevention pulumi.StringPtrInput `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine pulumi.StringPtrInput `pulumi:"quarantine"`
}

func (ProfileSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileSsh)(nil)).Elem()
}

func (i ProfileSshArgs) ToProfileSshOutput() ProfileSshOutput {
	return i.ToProfileSshOutputWithContext(context.Background())
}

func (i ProfileSshArgs) ToProfileSshOutputWithContext(ctx context.Context) ProfileSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileSshOutput)
}

func (i ProfileSshArgs) ToProfileSshPtrOutput() ProfileSshPtrOutput {
	return i.ToProfileSshPtrOutputWithContext(context.Background())
}

func (i ProfileSshArgs) ToProfileSshPtrOutputWithContext(ctx context.Context) ProfileSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileSshOutput).ToProfileSshPtrOutputWithContext(ctx)
}

// ProfileSshPtrInput is an input type that accepts ProfileSshArgs, ProfileSshPtr and ProfileSshPtrOutput values.
// You can construct a concrete instance of `ProfileSshPtrInput` via:
//
//	        ProfileSshArgs{...}
//
//	or:
//
//	        nil
type ProfileSshPtrInput interface {
	pulumi.Input

	ToProfileSshPtrOutput() ProfileSshPtrOutput
	ToProfileSshPtrOutputWithContext(context.Context) ProfileSshPtrOutput
}

type profileSshPtrType ProfileSshArgs

func ProfileSshPtr(v *ProfileSshArgs) ProfileSshPtrInput {
	return (*profileSshPtrType)(v)
}

func (*profileSshPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileSsh)(nil)).Elem()
}

func (i *profileSshPtrType) ToProfileSshPtrOutput() ProfileSshPtrOutput {
	return i.ToProfileSshPtrOutputWithContext(context.Background())
}

func (i *profileSshPtrType) ToProfileSshPtrOutputWithContext(ctx context.Context) ProfileSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileSshPtrOutput)
}

type ProfileSshOutput struct{ *pulumi.OutputState }

func (ProfileSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileSsh)(nil)).Elem()
}

func (o ProfileSshOutput) ToProfileSshOutput() ProfileSshOutput {
	return o
}

func (o ProfileSshOutput) ToProfileSshOutputWithContext(ctx context.Context) ProfileSshOutput {
	return o
}

func (o ProfileSshOutput) ToProfileSshPtrOutput() ProfileSshPtrOutput {
	return o.ToProfileSshPtrOutputWithContext(context.Background())
}

func (o ProfileSshOutput) ToProfileSshPtrOutputWithContext(ctx context.Context) ProfileSshPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileSsh) *ProfileSsh {
		return &v
	}).(ProfileSshPtrOutput)
}

// Select the archive types to block.
func (o ProfileSshOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileSsh) *string { return v.ArchiveBlock }).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o ProfileSshOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileSsh) *string { return v.ArchiveLog }).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o ProfileSshOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileSsh) *string { return v.AvScan }).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o ProfileSshOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileSsh) *string { return v.Emulator }).(pulumi.StringPtrOutput)
}

// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
func (o ProfileSshOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileSsh) *string { return v.ExternalBlocklist }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o ProfileSshOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileSsh) *string { return v.Fortiai }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o ProfileSshOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileSsh) *string { return v.Fortindr }).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o ProfileSshOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileSsh) *string { return v.Fortisandbox }).(pulumi.StringPtrOutput)
}

// Enable/disable SFTP and SCP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o ProfileSshOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileSsh) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service.
func (o ProfileSshOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileSsh) *string { return v.OutbreakPrevention }).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o ProfileSshOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileSsh) *string { return v.Quarantine }).(pulumi.StringPtrOutput)
}

type ProfileSshPtrOutput struct{ *pulumi.OutputState }

func (ProfileSshPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileSsh)(nil)).Elem()
}

func (o ProfileSshPtrOutput) ToProfileSshPtrOutput() ProfileSshPtrOutput {
	return o
}

func (o ProfileSshPtrOutput) ToProfileSshPtrOutputWithContext(ctx context.Context) ProfileSshPtrOutput {
	return o
}

func (o ProfileSshPtrOutput) Elem() ProfileSshOutput {
	return o.ApplyT(func(v *ProfileSsh) ProfileSsh {
		if v != nil {
			return *v
		}
		var ret ProfileSsh
		return ret
	}).(ProfileSshOutput)
}

// Select the archive types to block.
func (o ProfileSshPtrOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileSsh) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveBlock
	}).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o ProfileSshPtrOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileSsh) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveLog
	}).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o ProfileSshPtrOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileSsh) *string {
		if v == nil {
			return nil
		}
		return v.AvScan
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o ProfileSshPtrOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileSsh) *string {
		if v == nil {
			return nil
		}
		return v.Emulator
	}).(pulumi.StringPtrOutput)
}

// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
func (o ProfileSshPtrOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileSsh) *string {
		if v == nil {
			return nil
		}
		return v.ExternalBlocklist
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o ProfileSshPtrOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileSsh) *string {
		if v == nil {
			return nil
		}
		return v.Fortiai
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o ProfileSshPtrOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileSsh) *string {
		if v == nil {
			return nil
		}
		return v.Fortindr
	}).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o ProfileSshPtrOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileSsh) *string {
		if v == nil {
			return nil
		}
		return v.Fortisandbox
	}).(pulumi.StringPtrOutput)
}

// Enable/disable SFTP and SCP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o ProfileSshPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileSsh) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service.
func (o ProfileSshPtrOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileSsh) *string {
		if v == nil {
			return nil
		}
		return v.OutbreakPrevention
	}).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o ProfileSshPtrOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileSsh) *string {
		if v == nil {
			return nil
		}
		return v.Quarantine
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileCifsInput)(nil)).Elem(), ProfileCifsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileCifsPtrInput)(nil)).Elem(), ProfileCifsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileContentDisarmInput)(nil)).Elem(), ProfileContentDisarmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileContentDisarmPtrInput)(nil)).Elem(), ProfileContentDisarmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileExternalBlocklistInput)(nil)).Elem(), ProfileExternalBlocklistArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileExternalBlocklistArrayInput)(nil)).Elem(), ProfileExternalBlocklistArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileFtpInput)(nil)).Elem(), ProfileFtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileFtpPtrInput)(nil)).Elem(), ProfileFtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileHttpInput)(nil)).Elem(), ProfileHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileHttpPtrInput)(nil)).Elem(), ProfileHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileImapInput)(nil)).Elem(), ProfileImapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileImapPtrInput)(nil)).Elem(), ProfileImapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileMapiInput)(nil)).Elem(), ProfileMapiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileMapiPtrInput)(nil)).Elem(), ProfileMapiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileNacQuarInput)(nil)).Elem(), ProfileNacQuarArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileNacQuarPtrInput)(nil)).Elem(), ProfileNacQuarArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileNntpInput)(nil)).Elem(), ProfileNntpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileNntpPtrInput)(nil)).Elem(), ProfileNntpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileOutbreakPreventionInput)(nil)).Elem(), ProfileOutbreakPreventionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileOutbreakPreventionPtrInput)(nil)).Elem(), ProfileOutbreakPreventionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfilePop3Input)(nil)).Elem(), ProfilePop3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfilePop3PtrInput)(nil)).Elem(), ProfilePop3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileSmbInput)(nil)).Elem(), ProfileSmbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileSmbPtrInput)(nil)).Elem(), ProfileSmbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileSmtpInput)(nil)).Elem(), ProfileSmtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileSmtpPtrInput)(nil)).Elem(), ProfileSmtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileSshInput)(nil)).Elem(), ProfileSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileSshPtrInput)(nil)).Elem(), ProfileSshArgs{})
	pulumi.RegisterOutputType(ProfileCifsOutput{})
	pulumi.RegisterOutputType(ProfileCifsPtrOutput{})
	pulumi.RegisterOutputType(ProfileContentDisarmOutput{})
	pulumi.RegisterOutputType(ProfileContentDisarmPtrOutput{})
	pulumi.RegisterOutputType(ProfileExternalBlocklistOutput{})
	pulumi.RegisterOutputType(ProfileExternalBlocklistArrayOutput{})
	pulumi.RegisterOutputType(ProfileFtpOutput{})
	pulumi.RegisterOutputType(ProfileFtpPtrOutput{})
	pulumi.RegisterOutputType(ProfileHttpOutput{})
	pulumi.RegisterOutputType(ProfileHttpPtrOutput{})
	pulumi.RegisterOutputType(ProfileImapOutput{})
	pulumi.RegisterOutputType(ProfileImapPtrOutput{})
	pulumi.RegisterOutputType(ProfileMapiOutput{})
	pulumi.RegisterOutputType(ProfileMapiPtrOutput{})
	pulumi.RegisterOutputType(ProfileNacQuarOutput{})
	pulumi.RegisterOutputType(ProfileNacQuarPtrOutput{})
	pulumi.RegisterOutputType(ProfileNntpOutput{})
	pulumi.RegisterOutputType(ProfileNntpPtrOutput{})
	pulumi.RegisterOutputType(ProfileOutbreakPreventionOutput{})
	pulumi.RegisterOutputType(ProfileOutbreakPreventionPtrOutput{})
	pulumi.RegisterOutputType(ProfilePop3Output{})
	pulumi.RegisterOutputType(ProfilePop3PtrOutput{})
	pulumi.RegisterOutputType(ProfileSmbOutput{})
	pulumi.RegisterOutputType(ProfileSmbPtrOutput{})
	pulumi.RegisterOutputType(ProfileSmtpOutput{})
	pulumi.RegisterOutputType(ProfileSmtpPtrOutput{})
	pulumi.RegisterOutputType(ProfileSshOutput{})
	pulumi.RegisterOutputType(ProfileSshPtrOutput{})
}
