// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wirelesscontroller

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure Wireless Termination Points (WTP) system log server profile. Applies to FortiOS Version `>= 7.0.2`.
//
// ## Import
//
// WirelessController SyslogProfile can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:wirelesscontroller/syslogprofile:Syslogprofile labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:wirelesscontroller/syslogprofile:Syslogprofile labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Syslogprofile struct {
	pulumi.CustomResourceState

	// Comment.
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// Lowest level of log messages that FortiAP units send to this server (default = information) Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debugging`.
	LogLevel pulumi.StringOutput `pulumi:"logLevel"`
	// WTP system log server profile name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Syslog server address type (default = IP) Valid values: `fqdn`, `ip`.
	ServerAddrType pulumi.StringOutput `pulumi:"serverAddrType"`
	// FQDN of syslog server that FortiAP units send log messages to.
	ServerFqdn pulumi.StringOutput `pulumi:"serverFqdn"`
	// IP address of syslog server that FortiAP units send log messages to.
	ServerIp pulumi.StringOutput `pulumi:"serverIp"`
	// Port number of syslog server that FortiAP units send log messages to (default = 514).
	ServerPort pulumi.IntOutput `pulumi:"serverPort"`
	// Enable/disable FortiAP units to send log messages to a syslog server (default = enable). Valid values: `enable`, `disable`.
	ServerStatus pulumi.StringOutput `pulumi:"serverStatus"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringOutput `pulumi:"vdomparam"`
}

// NewSyslogprofile registers a new resource with the given unique name, arguments, and options.
func NewSyslogprofile(ctx *pulumi.Context,
	name string, args *SyslogprofileArgs, opts ...pulumi.ResourceOption) (*Syslogprofile, error) {
	if args == nil {
		args = &SyslogprofileArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Syslogprofile
	err := ctx.RegisterResource("fortios:wirelesscontroller/syslogprofile:Syslogprofile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSyslogprofile gets an existing Syslogprofile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSyslogprofile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SyslogprofileState, opts ...pulumi.ResourceOption) (*Syslogprofile, error) {
	var resource Syslogprofile
	err := ctx.ReadResource("fortios:wirelesscontroller/syslogprofile:Syslogprofile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Syslogprofile resources.
type syslogprofileState struct {
	// Comment.
	Comment *string `pulumi:"comment"`
	// Lowest level of log messages that FortiAP units send to this server (default = information) Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debugging`.
	LogLevel *string `pulumi:"logLevel"`
	// WTP system log server profile name.
	Name *string `pulumi:"name"`
	// Syslog server address type (default = IP) Valid values: `fqdn`, `ip`.
	ServerAddrType *string `pulumi:"serverAddrType"`
	// FQDN of syslog server that FortiAP units send log messages to.
	ServerFqdn *string `pulumi:"serverFqdn"`
	// IP address of syslog server that FortiAP units send log messages to.
	ServerIp *string `pulumi:"serverIp"`
	// Port number of syslog server that FortiAP units send log messages to (default = 514).
	ServerPort *int `pulumi:"serverPort"`
	// Enable/disable FortiAP units to send log messages to a syslog server (default = enable). Valid values: `enable`, `disable`.
	ServerStatus *string `pulumi:"serverStatus"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SyslogprofileState struct {
	// Comment.
	Comment pulumi.StringPtrInput
	// Lowest level of log messages that FortiAP units send to this server (default = information) Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debugging`.
	LogLevel pulumi.StringPtrInput
	// WTP system log server profile name.
	Name pulumi.StringPtrInput
	// Syslog server address type (default = IP) Valid values: `fqdn`, `ip`.
	ServerAddrType pulumi.StringPtrInput
	// FQDN of syslog server that FortiAP units send log messages to.
	ServerFqdn pulumi.StringPtrInput
	// IP address of syslog server that FortiAP units send log messages to.
	ServerIp pulumi.StringPtrInput
	// Port number of syslog server that FortiAP units send log messages to (default = 514).
	ServerPort pulumi.IntPtrInput
	// Enable/disable FortiAP units to send log messages to a syslog server (default = enable). Valid values: `enable`, `disable`.
	ServerStatus pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SyslogprofileState) ElementType() reflect.Type {
	return reflect.TypeOf((*syslogprofileState)(nil)).Elem()
}

type syslogprofileArgs struct {
	// Comment.
	Comment *string `pulumi:"comment"`
	// Lowest level of log messages that FortiAP units send to this server (default = information) Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debugging`.
	LogLevel *string `pulumi:"logLevel"`
	// WTP system log server profile name.
	Name *string `pulumi:"name"`
	// Syslog server address type (default = IP) Valid values: `fqdn`, `ip`.
	ServerAddrType *string `pulumi:"serverAddrType"`
	// FQDN of syslog server that FortiAP units send log messages to.
	ServerFqdn *string `pulumi:"serverFqdn"`
	// IP address of syslog server that FortiAP units send log messages to.
	ServerIp *string `pulumi:"serverIp"`
	// Port number of syslog server that FortiAP units send log messages to (default = 514).
	ServerPort *int `pulumi:"serverPort"`
	// Enable/disable FortiAP units to send log messages to a syslog server (default = enable). Valid values: `enable`, `disable`.
	ServerStatus *string `pulumi:"serverStatus"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Syslogprofile resource.
type SyslogprofileArgs struct {
	// Comment.
	Comment pulumi.StringPtrInput
	// Lowest level of log messages that FortiAP units send to this server (default = information) Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debugging`.
	LogLevel pulumi.StringPtrInput
	// WTP system log server profile name.
	Name pulumi.StringPtrInput
	// Syslog server address type (default = IP) Valid values: `fqdn`, `ip`.
	ServerAddrType pulumi.StringPtrInput
	// FQDN of syslog server that FortiAP units send log messages to.
	ServerFqdn pulumi.StringPtrInput
	// IP address of syslog server that FortiAP units send log messages to.
	ServerIp pulumi.StringPtrInput
	// Port number of syslog server that FortiAP units send log messages to (default = 514).
	ServerPort pulumi.IntPtrInput
	// Enable/disable FortiAP units to send log messages to a syslog server (default = enable). Valid values: `enable`, `disable`.
	ServerStatus pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SyslogprofileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*syslogprofileArgs)(nil)).Elem()
}

type SyslogprofileInput interface {
	pulumi.Input

	ToSyslogprofileOutput() SyslogprofileOutput
	ToSyslogprofileOutputWithContext(ctx context.Context) SyslogprofileOutput
}

func (*Syslogprofile) ElementType() reflect.Type {
	return reflect.TypeOf((**Syslogprofile)(nil)).Elem()
}

func (i *Syslogprofile) ToSyslogprofileOutput() SyslogprofileOutput {
	return i.ToSyslogprofileOutputWithContext(context.Background())
}

func (i *Syslogprofile) ToSyslogprofileOutputWithContext(ctx context.Context) SyslogprofileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyslogprofileOutput)
}

// SyslogprofileArrayInput is an input type that accepts SyslogprofileArray and SyslogprofileArrayOutput values.
// You can construct a concrete instance of `SyslogprofileArrayInput` via:
//
//	SyslogprofileArray{ SyslogprofileArgs{...} }
type SyslogprofileArrayInput interface {
	pulumi.Input

	ToSyslogprofileArrayOutput() SyslogprofileArrayOutput
	ToSyslogprofileArrayOutputWithContext(context.Context) SyslogprofileArrayOutput
}

type SyslogprofileArray []SyslogprofileInput

func (SyslogprofileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Syslogprofile)(nil)).Elem()
}

func (i SyslogprofileArray) ToSyslogprofileArrayOutput() SyslogprofileArrayOutput {
	return i.ToSyslogprofileArrayOutputWithContext(context.Background())
}

func (i SyslogprofileArray) ToSyslogprofileArrayOutputWithContext(ctx context.Context) SyslogprofileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyslogprofileArrayOutput)
}

// SyslogprofileMapInput is an input type that accepts SyslogprofileMap and SyslogprofileMapOutput values.
// You can construct a concrete instance of `SyslogprofileMapInput` via:
//
//	SyslogprofileMap{ "key": SyslogprofileArgs{...} }
type SyslogprofileMapInput interface {
	pulumi.Input

	ToSyslogprofileMapOutput() SyslogprofileMapOutput
	ToSyslogprofileMapOutputWithContext(context.Context) SyslogprofileMapOutput
}

type SyslogprofileMap map[string]SyslogprofileInput

func (SyslogprofileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Syslogprofile)(nil)).Elem()
}

func (i SyslogprofileMap) ToSyslogprofileMapOutput() SyslogprofileMapOutput {
	return i.ToSyslogprofileMapOutputWithContext(context.Background())
}

func (i SyslogprofileMap) ToSyslogprofileMapOutputWithContext(ctx context.Context) SyslogprofileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyslogprofileMapOutput)
}

type SyslogprofileOutput struct{ *pulumi.OutputState }

func (SyslogprofileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Syslogprofile)(nil)).Elem()
}

func (o SyslogprofileOutput) ToSyslogprofileOutput() SyslogprofileOutput {
	return o
}

func (o SyslogprofileOutput) ToSyslogprofileOutputWithContext(ctx context.Context) SyslogprofileOutput {
	return o
}

// Comment.
func (o SyslogprofileOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Syslogprofile) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// Lowest level of log messages that FortiAP units send to this server (default = information) Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debugging`.
func (o SyslogprofileOutput) LogLevel() pulumi.StringOutput {
	return o.ApplyT(func(v *Syslogprofile) pulumi.StringOutput { return v.LogLevel }).(pulumi.StringOutput)
}

// WTP system log server profile name.
func (o SyslogprofileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Syslogprofile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Syslog server address type (default = IP) Valid values: `fqdn`, `ip`.
func (o SyslogprofileOutput) ServerAddrType() pulumi.StringOutput {
	return o.ApplyT(func(v *Syslogprofile) pulumi.StringOutput { return v.ServerAddrType }).(pulumi.StringOutput)
}

// FQDN of syslog server that FortiAP units send log messages to.
func (o SyslogprofileOutput) ServerFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v *Syslogprofile) pulumi.StringOutput { return v.ServerFqdn }).(pulumi.StringOutput)
}

// IP address of syslog server that FortiAP units send log messages to.
func (o SyslogprofileOutput) ServerIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Syslogprofile) pulumi.StringOutput { return v.ServerIp }).(pulumi.StringOutput)
}

// Port number of syslog server that FortiAP units send log messages to (default = 514).
func (o SyslogprofileOutput) ServerPort() pulumi.IntOutput {
	return o.ApplyT(func(v *Syslogprofile) pulumi.IntOutput { return v.ServerPort }).(pulumi.IntOutput)
}

// Enable/disable FortiAP units to send log messages to a syslog server (default = enable). Valid values: `enable`, `disable`.
func (o SyslogprofileOutput) ServerStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *Syslogprofile) pulumi.StringOutput { return v.ServerStatus }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SyslogprofileOutput) Vdomparam() pulumi.StringOutput {
	return o.ApplyT(func(v *Syslogprofile) pulumi.StringOutput { return v.Vdomparam }).(pulumi.StringOutput)
}

type SyslogprofileArrayOutput struct{ *pulumi.OutputState }

func (SyslogprofileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Syslogprofile)(nil)).Elem()
}

func (o SyslogprofileArrayOutput) ToSyslogprofileArrayOutput() SyslogprofileArrayOutput {
	return o
}

func (o SyslogprofileArrayOutput) ToSyslogprofileArrayOutputWithContext(ctx context.Context) SyslogprofileArrayOutput {
	return o
}

func (o SyslogprofileArrayOutput) Index(i pulumi.IntInput) SyslogprofileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Syslogprofile {
		return vs[0].([]*Syslogprofile)[vs[1].(int)]
	}).(SyslogprofileOutput)
}

type SyslogprofileMapOutput struct{ *pulumi.OutputState }

func (SyslogprofileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Syslogprofile)(nil)).Elem()
}

func (o SyslogprofileMapOutput) ToSyslogprofileMapOutput() SyslogprofileMapOutput {
	return o
}

func (o SyslogprofileMapOutput) ToSyslogprofileMapOutputWithContext(ctx context.Context) SyslogprofileMapOutput {
	return o
}

func (o SyslogprofileMapOutput) MapIndex(k pulumi.StringInput) SyslogprofileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Syslogprofile {
		return vs[0].(map[string]*Syslogprofile)[vs[1].(string)]
	}).(SyslogprofileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SyslogprofileInput)(nil)).Elem(), &Syslogprofile{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyslogprofileArrayInput)(nil)).Elem(), SyslogprofileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyslogprofileMapInput)(nil)).Elem(), SyslogprofileMap{})
	pulumi.RegisterOutputType(SyslogprofileOutput{})
	pulumi.RegisterOutputType(SyslogprofileArrayOutput{})
	pulumi.RegisterOutputType(SyslogprofileMapOutput{})
}
