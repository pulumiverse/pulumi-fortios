// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wirelesscontroller

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure the MAC address group. Applies to FortiOS Version `6.2.4,6.2.6,6.4.0,6.4.1,6.4.2,6.4.10,6.4.11,6.4.12,6.4.13,6.4.14,7.0.0,7.0.1,7.0.2,7.0.3,7.0.4,7.0.5,7.0.6,7.0.7,7.0.8,7.0.9,7.0.10,7.0.11,7.0.12,7.0.13`.
//
// ## Import
//
// WirelessController Addrgrp can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:wirelesscontroller/addrgrp:Addrgrp labelname {{fosid}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:wirelesscontroller/addrgrp:Addrgrp labelname {{fosid}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Addrgrp struct {
	pulumi.CustomResourceState

	// Manually selected group of addresses. The structure of `addresses` block is documented below.
	Addresses AddrgrpAddressArrayOutput `pulumi:"addresses"`
	// Allow or block the clients with MAC addresses that are not in the group. Valid values: `allow`, `deny`.
	DefaultPolicy pulumi.StringOutput `pulumi:"defaultPolicy"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// ID.
	Fosid pulumi.StringOutput `pulumi:"fosid"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewAddrgrp registers a new resource with the given unique name, arguments, and options.
func NewAddrgrp(ctx *pulumi.Context,
	name string, args *AddrgrpArgs, opts ...pulumi.ResourceOption) (*Addrgrp, error) {
	if args == nil {
		args = &AddrgrpArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Addrgrp
	err := ctx.RegisterResource("fortios:wirelesscontroller/addrgrp:Addrgrp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAddrgrp gets an existing Addrgrp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAddrgrp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AddrgrpState, opts ...pulumi.ResourceOption) (*Addrgrp, error) {
	var resource Addrgrp
	err := ctx.ReadResource("fortios:wirelesscontroller/addrgrp:Addrgrp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Addrgrp resources.
type addrgrpState struct {
	// Manually selected group of addresses. The structure of `addresses` block is documented below.
	Addresses []AddrgrpAddress `pulumi:"addresses"`
	// Allow or block the clients with MAC addresses that are not in the group. Valid values: `allow`, `deny`.
	DefaultPolicy *string `pulumi:"defaultPolicy"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// ID.
	Fosid *string `pulumi:"fosid"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type AddrgrpState struct {
	// Manually selected group of addresses. The structure of `addresses` block is documented below.
	Addresses AddrgrpAddressArrayInput
	// Allow or block the clients with MAC addresses that are not in the group. Valid values: `allow`, `deny`.
	DefaultPolicy pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// ID.
	Fosid pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (AddrgrpState) ElementType() reflect.Type {
	return reflect.TypeOf((*addrgrpState)(nil)).Elem()
}

type addrgrpArgs struct {
	// Manually selected group of addresses. The structure of `addresses` block is documented below.
	Addresses []AddrgrpAddress `pulumi:"addresses"`
	// Allow or block the clients with MAC addresses that are not in the group. Valid values: `allow`, `deny`.
	DefaultPolicy *string `pulumi:"defaultPolicy"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// ID.
	Fosid *string `pulumi:"fosid"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Addrgrp resource.
type AddrgrpArgs struct {
	// Manually selected group of addresses. The structure of `addresses` block is documented below.
	Addresses AddrgrpAddressArrayInput
	// Allow or block the clients with MAC addresses that are not in the group. Valid values: `allow`, `deny`.
	DefaultPolicy pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// ID.
	Fosid pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (AddrgrpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*addrgrpArgs)(nil)).Elem()
}

type AddrgrpInput interface {
	pulumi.Input

	ToAddrgrpOutput() AddrgrpOutput
	ToAddrgrpOutputWithContext(ctx context.Context) AddrgrpOutput
}

func (*Addrgrp) ElementType() reflect.Type {
	return reflect.TypeOf((**Addrgrp)(nil)).Elem()
}

func (i *Addrgrp) ToAddrgrpOutput() AddrgrpOutput {
	return i.ToAddrgrpOutputWithContext(context.Background())
}

func (i *Addrgrp) ToAddrgrpOutputWithContext(ctx context.Context) AddrgrpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddrgrpOutput)
}

// AddrgrpArrayInput is an input type that accepts AddrgrpArray and AddrgrpArrayOutput values.
// You can construct a concrete instance of `AddrgrpArrayInput` via:
//
//	AddrgrpArray{ AddrgrpArgs{...} }
type AddrgrpArrayInput interface {
	pulumi.Input

	ToAddrgrpArrayOutput() AddrgrpArrayOutput
	ToAddrgrpArrayOutputWithContext(context.Context) AddrgrpArrayOutput
}

type AddrgrpArray []AddrgrpInput

func (AddrgrpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Addrgrp)(nil)).Elem()
}

func (i AddrgrpArray) ToAddrgrpArrayOutput() AddrgrpArrayOutput {
	return i.ToAddrgrpArrayOutputWithContext(context.Background())
}

func (i AddrgrpArray) ToAddrgrpArrayOutputWithContext(ctx context.Context) AddrgrpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddrgrpArrayOutput)
}

// AddrgrpMapInput is an input type that accepts AddrgrpMap and AddrgrpMapOutput values.
// You can construct a concrete instance of `AddrgrpMapInput` via:
//
//	AddrgrpMap{ "key": AddrgrpArgs{...} }
type AddrgrpMapInput interface {
	pulumi.Input

	ToAddrgrpMapOutput() AddrgrpMapOutput
	ToAddrgrpMapOutputWithContext(context.Context) AddrgrpMapOutput
}

type AddrgrpMap map[string]AddrgrpInput

func (AddrgrpMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Addrgrp)(nil)).Elem()
}

func (i AddrgrpMap) ToAddrgrpMapOutput() AddrgrpMapOutput {
	return i.ToAddrgrpMapOutputWithContext(context.Background())
}

func (i AddrgrpMap) ToAddrgrpMapOutputWithContext(ctx context.Context) AddrgrpMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddrgrpMapOutput)
}

type AddrgrpOutput struct{ *pulumi.OutputState }

func (AddrgrpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Addrgrp)(nil)).Elem()
}

func (o AddrgrpOutput) ToAddrgrpOutput() AddrgrpOutput {
	return o
}

func (o AddrgrpOutput) ToAddrgrpOutputWithContext(ctx context.Context) AddrgrpOutput {
	return o
}

// Manually selected group of addresses. The structure of `addresses` block is documented below.
func (o AddrgrpOutput) Addresses() AddrgrpAddressArrayOutput {
	return o.ApplyT(func(v *Addrgrp) AddrgrpAddressArrayOutput { return v.Addresses }).(AddrgrpAddressArrayOutput)
}

// Allow or block the clients with MAC addresses that are not in the group. Valid values: `allow`, `deny`.
func (o AddrgrpOutput) DefaultPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *Addrgrp) pulumi.StringOutput { return v.DefaultPolicy }).(pulumi.StringOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o AddrgrpOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Addrgrp) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// ID.
func (o AddrgrpOutput) Fosid() pulumi.StringOutput {
	return o.ApplyT(func(v *Addrgrp) pulumi.StringOutput { return v.Fosid }).(pulumi.StringOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o AddrgrpOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Addrgrp) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o AddrgrpOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Addrgrp) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type AddrgrpArrayOutput struct{ *pulumi.OutputState }

func (AddrgrpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Addrgrp)(nil)).Elem()
}

func (o AddrgrpArrayOutput) ToAddrgrpArrayOutput() AddrgrpArrayOutput {
	return o
}

func (o AddrgrpArrayOutput) ToAddrgrpArrayOutputWithContext(ctx context.Context) AddrgrpArrayOutput {
	return o
}

func (o AddrgrpArrayOutput) Index(i pulumi.IntInput) AddrgrpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Addrgrp {
		return vs[0].([]*Addrgrp)[vs[1].(int)]
	}).(AddrgrpOutput)
}

type AddrgrpMapOutput struct{ *pulumi.OutputState }

func (AddrgrpMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Addrgrp)(nil)).Elem()
}

func (o AddrgrpMapOutput) ToAddrgrpMapOutput() AddrgrpMapOutput {
	return o
}

func (o AddrgrpMapOutput) ToAddrgrpMapOutputWithContext(ctx context.Context) AddrgrpMapOutput {
	return o
}

func (o AddrgrpMapOutput) MapIndex(k pulumi.StringInput) AddrgrpOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Addrgrp {
		return vs[0].(map[string]*Addrgrp)[vs[1].(string)]
	}).(AddrgrpOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AddrgrpInput)(nil)).Elem(), &Addrgrp{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddrgrpArrayInput)(nil)).Elem(), AddrgrpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddrgrpMapInput)(nil)).Elem(), AddrgrpMap{})
	pulumi.RegisterOutputType(AddrgrpOutput{})
	pulumi.RegisterOutputType(AddrgrpArrayOutput{})
	pulumi.RegisterOutputType(AddrgrpMapOutput{})
}
