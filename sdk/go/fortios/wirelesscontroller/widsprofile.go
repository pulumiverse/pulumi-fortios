// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wirelesscontroller

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure wireless intrusion detection system (WIDS) profiles.
//
// ## Import
//
// WirelessController WidsProfile can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:wirelesscontroller/widsprofile:Widsprofile labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:wirelesscontroller/widsprofile:Widsprofile labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Widsprofile struct {
	pulumi.CustomResourceState

	// Enable/disable on-wire rogue AP auto-suppression (default = disable). Valid values: `enable`, `disable`.
	ApAutoSuppress pulumi.StringOutput `pulumi:"apAutoSuppress"`
	// Optionally turn off scanning for one or more days of the week. Separate the days with a space. By default, no days are set. Valid values: `sunday`, `monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday`.
	ApBgscanDisableDay pulumi.StringOutput `pulumi:"apBgscanDisableDay"`
	// End time, using a 24-hour clock in the format of hh:mm, for disabling background scanning (default = 00:00).
	ApBgscanDisableEnd pulumi.StringOutput `pulumi:"apBgscanDisableEnd"`
	// Firewall schedules for turning off FortiAP radio background scan. Background scan will be disabled when at least one of the schedules is valid. Separate multiple schedule names with a space. The structure of `apBgscanDisableSchedules` block is documented below.
	ApBgscanDisableSchedules WidsprofileApBgscanDisableScheduleArrayOutput `pulumi:"apBgscanDisableSchedules"`
	// Start time, using a 24-hour clock in the format of hh:mm, for disabling background scanning (default = 00:00).
	ApBgscanDisableStart pulumi.StringOutput `pulumi:"apBgscanDisableStart"`
	// Listening time on a scanning channel (10 - 1000 msec, default = 20).
	ApBgscanDuration pulumi.IntOutput `pulumi:"apBgscanDuration"`
	// Waiting time for channel inactivity before scanning this channel (0 - 1000 msec, default = 0).
	ApBgscanIdle pulumi.IntOutput `pulumi:"apBgscanIdle"`
	// Period of time between scanning two channels (1 - 600 sec, default = 1).
	ApBgscanIntv pulumi.IntOutput `pulumi:"apBgscanIntv"`
	// Period of time between background scans (60 - 3600 sec, default = 600).
	ApBgscanPeriod pulumi.IntOutput `pulumi:"apBgscanPeriod"`
	// Period of time between background scan reports (15 - 600 sec, default = 30).
	ApBgscanReportIntv pulumi.IntOutput `pulumi:"apBgscanReportIntv"`
	// Period of time between foreground scan reports (15 - 600 sec, default = 15).
	ApFgscanReportIntv pulumi.IntOutput `pulumi:"apFgscanReportIntv"`
	// Enable/disable rogue AP detection. Valid values: `disable`, `enable`.
	ApScan pulumi.StringOutput `pulumi:"apScan"`
	// Selected ap scan channel list for 2.4G and 5G bands. The structure of `apScanChannelList2g5g` block is documented below.
	ApScanChannelList2g5gs WidsprofileApScanChannelList2g5gArrayOutput `pulumi:"apScanChannelList2g5gs"`
	// Selected ap scan channel list for 6G band. The structure of `apScanChannelList6g` block is documented below.
	ApScanChannelList6gs WidsprofileApScanChannelList6gArrayOutput `pulumi:"apScanChannelList6gs"`
	// Enable/disable passive scanning. Enable means do not send probe request on any channels (default = disable). Valid values: `enable`, `disable`.
	ApScanPassive pulumi.StringOutput `pulumi:"apScanPassive"`
	// Minimum signal level/threshold in dBm required for the AP to report detected rogue AP (-95 to -20, default = -90).
	ApScanThreshold pulumi.StringOutput `pulumi:"apScanThreshold"`
	// Enable/disable asleap attack detection (default = disable). Valid values: `enable`, `disable`.
	AsleapAttack pulumi.StringOutput `pulumi:"asleapAttack"`
	// The threshold value for association frame flooding.
	AssocFloodThresh pulumi.IntOutput `pulumi:"assocFloodThresh"`
	// Number of seconds after which a station is considered not connected.
	AssocFloodTime pulumi.IntOutput `pulumi:"assocFloodTime"`
	// Enable/disable association frame flooding detection (default = disable). Valid values: `enable`, `disable`.
	AssocFrameFlood pulumi.StringOutput `pulumi:"assocFrameFlood"`
	// The threshold value for authentication frame flooding.
	AuthFloodThresh pulumi.IntOutput `pulumi:"authFloodThresh"`
	// Number of seconds after which a station is considered not connected.
	AuthFloodTime pulumi.IntOutput `pulumi:"authFloodTime"`
	// Enable/disable authentication frame flooding detection (default = disable). Valid values: `enable`, `disable`.
	AuthFrameFlood pulumi.StringOutput `pulumi:"authFrameFlood"`
	// Comment.
	Comment pulumi.StringOutput `pulumi:"comment"`
	// Enable/disable broadcasting de-authentication detection (default = disable). Valid values: `enable`, `disable`.
	DeauthBroadcast pulumi.StringOutput `pulumi:"deauthBroadcast"`
	// Threshold value per second to deauth unknown src for DoS attack (0: no limit).
	DeauthUnknownSrcThresh pulumi.IntOutput `pulumi:"deauthUnknownSrcThresh"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Enable/disable EAPOL-Failure flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolFailFlood pulumi.StringOutput `pulumi:"eapolFailFlood"`
	// The detection interval for EAPOL-Failure flooding (1 - 3600 sec).
	EapolFailIntv pulumi.IntOutput `pulumi:"eapolFailIntv"`
	// The threshold value for EAPOL-Failure flooding in specified interval.
	EapolFailThresh pulumi.IntOutput `pulumi:"eapolFailThresh"`
	// Enable/disable EAPOL-Logoff flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolLogoffFlood pulumi.StringOutput `pulumi:"eapolLogoffFlood"`
	// The detection interval for EAPOL-Logoff flooding (1 - 3600 sec).
	EapolLogoffIntv pulumi.IntOutput `pulumi:"eapolLogoffIntv"`
	// The threshold value for EAPOL-Logoff flooding in specified interval.
	EapolLogoffThresh pulumi.IntOutput `pulumi:"eapolLogoffThresh"`
	// Enable/disable premature EAPOL-Failure flooding (to STA) detection (default = disable). Valid values: `enable`, `disable`.
	EapolPreFailFlood pulumi.StringOutput `pulumi:"eapolPreFailFlood"`
	// The detection interval for premature EAPOL-Failure flooding (1 - 3600 sec).
	EapolPreFailIntv pulumi.IntOutput `pulumi:"eapolPreFailIntv"`
	// The threshold value for premature EAPOL-Failure flooding in specified interval.
	EapolPreFailThresh pulumi.IntOutput `pulumi:"eapolPreFailThresh"`
	// Enable/disable premature EAPOL-Success flooding (to STA) detection (default = disable). Valid values: `enable`, `disable`.
	EapolPreSuccFlood pulumi.StringOutput `pulumi:"eapolPreSuccFlood"`
	// The detection interval for premature EAPOL-Success flooding (1 - 3600 sec).
	EapolPreSuccIntv pulumi.IntOutput `pulumi:"eapolPreSuccIntv"`
	// The threshold value for premature EAPOL-Success flooding in specified interval.
	EapolPreSuccThresh pulumi.IntOutput `pulumi:"eapolPreSuccThresh"`
	// Enable/disable EAPOL-Start flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolStartFlood pulumi.StringOutput `pulumi:"eapolStartFlood"`
	// The detection interval for EAPOL-Start flooding (1 - 3600 sec).
	EapolStartIntv pulumi.IntOutput `pulumi:"eapolStartIntv"`
	// The threshold value for EAPOL-Start flooding in specified interval.
	EapolStartThresh pulumi.IntOutput `pulumi:"eapolStartThresh"`
	// Enable/disable EAPOL-Success flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolSuccFlood pulumi.StringOutput `pulumi:"eapolSuccFlood"`
	// The detection interval for EAPOL-Success flooding (1 - 3600 sec).
	EapolSuccIntv pulumi.IntOutput `pulumi:"eapolSuccIntv"`
	// The threshold value for EAPOL-Success flooding in specified interval.
	EapolSuccThresh pulumi.IntOutput `pulumi:"eapolSuccThresh"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Enable/disable invalid MAC OUI detection. Valid values: `enable`, `disable`.
	InvalidMacOui pulumi.StringOutput `pulumi:"invalidMacOui"`
	// Enable/disable long duration attack detection based on user configured threshold (default = disable). Valid values: `enable`, `disable`.
	LongDurationAttack pulumi.StringOutput `pulumi:"longDurationAttack"`
	// Threshold value for long duration attack detection (1000 - 32767 usec, default = 8200).
	LongDurationThresh pulumi.IntOutput `pulumi:"longDurationThresh"`
	// WIDS profile name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Enable/disable null SSID probe response detection (default = disable). Valid values: `enable`, `disable`.
	NullSsidProbeResp pulumi.StringOutput `pulumi:"nullSsidProbeResp"`
	// Scan WiFi nearby stations (default = disable). Valid values: `disable`, `foreign`, `both`.
	SensorMode pulumi.StringOutput `pulumi:"sensorMode"`
	// Enable/disable spoofed de-authentication attack detection (default = disable). Valid values: `enable`, `disable`.
	SpoofedDeauth pulumi.StringOutput `pulumi:"spoofedDeauth"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	//
	// The `apScanChannelList2g5g` block supports:
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Enable/disable weak WEP IV (Initialization Vector) detection (default = disable). Valid values: `enable`, `disable`.
	WeakWepIv pulumi.StringOutput `pulumi:"weakWepIv"`
	// Enable/disable wireless bridge detection (default = disable). Valid values: `enable`, `disable`.
	WirelessBridge pulumi.StringOutput `pulumi:"wirelessBridge"`
}

// NewWidsprofile registers a new resource with the given unique name, arguments, and options.
func NewWidsprofile(ctx *pulumi.Context,
	name string, args *WidsprofileArgs, opts ...pulumi.ResourceOption) (*Widsprofile, error) {
	if args == nil {
		args = &WidsprofileArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Widsprofile
	err := ctx.RegisterResource("fortios:wirelesscontroller/widsprofile:Widsprofile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWidsprofile gets an existing Widsprofile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWidsprofile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WidsprofileState, opts ...pulumi.ResourceOption) (*Widsprofile, error) {
	var resource Widsprofile
	err := ctx.ReadResource("fortios:wirelesscontroller/widsprofile:Widsprofile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Widsprofile resources.
type widsprofileState struct {
	// Enable/disable on-wire rogue AP auto-suppression (default = disable). Valid values: `enable`, `disable`.
	ApAutoSuppress *string `pulumi:"apAutoSuppress"`
	// Optionally turn off scanning for one or more days of the week. Separate the days with a space. By default, no days are set. Valid values: `sunday`, `monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday`.
	ApBgscanDisableDay *string `pulumi:"apBgscanDisableDay"`
	// End time, using a 24-hour clock in the format of hh:mm, for disabling background scanning (default = 00:00).
	ApBgscanDisableEnd *string `pulumi:"apBgscanDisableEnd"`
	// Firewall schedules for turning off FortiAP radio background scan. Background scan will be disabled when at least one of the schedules is valid. Separate multiple schedule names with a space. The structure of `apBgscanDisableSchedules` block is documented below.
	ApBgscanDisableSchedules []WidsprofileApBgscanDisableSchedule `pulumi:"apBgscanDisableSchedules"`
	// Start time, using a 24-hour clock in the format of hh:mm, for disabling background scanning (default = 00:00).
	ApBgscanDisableStart *string `pulumi:"apBgscanDisableStart"`
	// Listening time on a scanning channel (10 - 1000 msec, default = 20).
	ApBgscanDuration *int `pulumi:"apBgscanDuration"`
	// Waiting time for channel inactivity before scanning this channel (0 - 1000 msec, default = 0).
	ApBgscanIdle *int `pulumi:"apBgscanIdle"`
	// Period of time between scanning two channels (1 - 600 sec, default = 1).
	ApBgscanIntv *int `pulumi:"apBgscanIntv"`
	// Period of time between background scans (60 - 3600 sec, default = 600).
	ApBgscanPeriod *int `pulumi:"apBgscanPeriod"`
	// Period of time between background scan reports (15 - 600 sec, default = 30).
	ApBgscanReportIntv *int `pulumi:"apBgscanReportIntv"`
	// Period of time between foreground scan reports (15 - 600 sec, default = 15).
	ApFgscanReportIntv *int `pulumi:"apFgscanReportIntv"`
	// Enable/disable rogue AP detection. Valid values: `disable`, `enable`.
	ApScan *string `pulumi:"apScan"`
	// Selected ap scan channel list for 2.4G and 5G bands. The structure of `apScanChannelList2g5g` block is documented below.
	ApScanChannelList2g5gs []WidsprofileApScanChannelList2g5g `pulumi:"apScanChannelList2g5gs"`
	// Selected ap scan channel list for 6G band. The structure of `apScanChannelList6g` block is documented below.
	ApScanChannelList6gs []WidsprofileApScanChannelList6g `pulumi:"apScanChannelList6gs"`
	// Enable/disable passive scanning. Enable means do not send probe request on any channels (default = disable). Valid values: `enable`, `disable`.
	ApScanPassive *string `pulumi:"apScanPassive"`
	// Minimum signal level/threshold in dBm required for the AP to report detected rogue AP (-95 to -20, default = -90).
	ApScanThreshold *string `pulumi:"apScanThreshold"`
	// Enable/disable asleap attack detection (default = disable). Valid values: `enable`, `disable`.
	AsleapAttack *string `pulumi:"asleapAttack"`
	// The threshold value for association frame flooding.
	AssocFloodThresh *int `pulumi:"assocFloodThresh"`
	// Number of seconds after which a station is considered not connected.
	AssocFloodTime *int `pulumi:"assocFloodTime"`
	// Enable/disable association frame flooding detection (default = disable). Valid values: `enable`, `disable`.
	AssocFrameFlood *string `pulumi:"assocFrameFlood"`
	// The threshold value for authentication frame flooding.
	AuthFloodThresh *int `pulumi:"authFloodThresh"`
	// Number of seconds after which a station is considered not connected.
	AuthFloodTime *int `pulumi:"authFloodTime"`
	// Enable/disable authentication frame flooding detection (default = disable). Valid values: `enable`, `disable`.
	AuthFrameFlood *string `pulumi:"authFrameFlood"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// Enable/disable broadcasting de-authentication detection (default = disable). Valid values: `enable`, `disable`.
	DeauthBroadcast *string `pulumi:"deauthBroadcast"`
	// Threshold value per second to deauth unknown src for DoS attack (0: no limit).
	DeauthUnknownSrcThresh *int `pulumi:"deauthUnknownSrcThresh"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable EAPOL-Failure flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolFailFlood *string `pulumi:"eapolFailFlood"`
	// The detection interval for EAPOL-Failure flooding (1 - 3600 sec).
	EapolFailIntv *int `pulumi:"eapolFailIntv"`
	// The threshold value for EAPOL-Failure flooding in specified interval.
	EapolFailThresh *int `pulumi:"eapolFailThresh"`
	// Enable/disable EAPOL-Logoff flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolLogoffFlood *string `pulumi:"eapolLogoffFlood"`
	// The detection interval for EAPOL-Logoff flooding (1 - 3600 sec).
	EapolLogoffIntv *int `pulumi:"eapolLogoffIntv"`
	// The threshold value for EAPOL-Logoff flooding in specified interval.
	EapolLogoffThresh *int `pulumi:"eapolLogoffThresh"`
	// Enable/disable premature EAPOL-Failure flooding (to STA) detection (default = disable). Valid values: `enable`, `disable`.
	EapolPreFailFlood *string `pulumi:"eapolPreFailFlood"`
	// The detection interval for premature EAPOL-Failure flooding (1 - 3600 sec).
	EapolPreFailIntv *int `pulumi:"eapolPreFailIntv"`
	// The threshold value for premature EAPOL-Failure flooding in specified interval.
	EapolPreFailThresh *int `pulumi:"eapolPreFailThresh"`
	// Enable/disable premature EAPOL-Success flooding (to STA) detection (default = disable). Valid values: `enable`, `disable`.
	EapolPreSuccFlood *string `pulumi:"eapolPreSuccFlood"`
	// The detection interval for premature EAPOL-Success flooding (1 - 3600 sec).
	EapolPreSuccIntv *int `pulumi:"eapolPreSuccIntv"`
	// The threshold value for premature EAPOL-Success flooding in specified interval.
	EapolPreSuccThresh *int `pulumi:"eapolPreSuccThresh"`
	// Enable/disable EAPOL-Start flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolStartFlood *string `pulumi:"eapolStartFlood"`
	// The detection interval for EAPOL-Start flooding (1 - 3600 sec).
	EapolStartIntv *int `pulumi:"eapolStartIntv"`
	// The threshold value for EAPOL-Start flooding in specified interval.
	EapolStartThresh *int `pulumi:"eapolStartThresh"`
	// Enable/disable EAPOL-Success flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolSuccFlood *string `pulumi:"eapolSuccFlood"`
	// The detection interval for EAPOL-Success flooding (1 - 3600 sec).
	EapolSuccIntv *int `pulumi:"eapolSuccIntv"`
	// The threshold value for EAPOL-Success flooding in specified interval.
	EapolSuccThresh *int `pulumi:"eapolSuccThresh"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Enable/disable invalid MAC OUI detection. Valid values: `enable`, `disable`.
	InvalidMacOui *string `pulumi:"invalidMacOui"`
	// Enable/disable long duration attack detection based on user configured threshold (default = disable). Valid values: `enable`, `disable`.
	LongDurationAttack *string `pulumi:"longDurationAttack"`
	// Threshold value for long duration attack detection (1000 - 32767 usec, default = 8200).
	LongDurationThresh *int `pulumi:"longDurationThresh"`
	// WIDS profile name.
	Name *string `pulumi:"name"`
	// Enable/disable null SSID probe response detection (default = disable). Valid values: `enable`, `disable`.
	NullSsidProbeResp *string `pulumi:"nullSsidProbeResp"`
	// Scan WiFi nearby stations (default = disable). Valid values: `disable`, `foreign`, `both`.
	SensorMode *string `pulumi:"sensorMode"`
	// Enable/disable spoofed de-authentication attack detection (default = disable). Valid values: `enable`, `disable`.
	SpoofedDeauth *string `pulumi:"spoofedDeauth"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	//
	// The `apScanChannelList2g5g` block supports:
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable weak WEP IV (Initialization Vector) detection (default = disable). Valid values: `enable`, `disable`.
	WeakWepIv *string `pulumi:"weakWepIv"`
	// Enable/disable wireless bridge detection (default = disable). Valid values: `enable`, `disable`.
	WirelessBridge *string `pulumi:"wirelessBridge"`
}

type WidsprofileState struct {
	// Enable/disable on-wire rogue AP auto-suppression (default = disable). Valid values: `enable`, `disable`.
	ApAutoSuppress pulumi.StringPtrInput
	// Optionally turn off scanning for one or more days of the week. Separate the days with a space. By default, no days are set. Valid values: `sunday`, `monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday`.
	ApBgscanDisableDay pulumi.StringPtrInput
	// End time, using a 24-hour clock in the format of hh:mm, for disabling background scanning (default = 00:00).
	ApBgscanDisableEnd pulumi.StringPtrInput
	// Firewall schedules for turning off FortiAP radio background scan. Background scan will be disabled when at least one of the schedules is valid. Separate multiple schedule names with a space. The structure of `apBgscanDisableSchedules` block is documented below.
	ApBgscanDisableSchedules WidsprofileApBgscanDisableScheduleArrayInput
	// Start time, using a 24-hour clock in the format of hh:mm, for disabling background scanning (default = 00:00).
	ApBgscanDisableStart pulumi.StringPtrInput
	// Listening time on a scanning channel (10 - 1000 msec, default = 20).
	ApBgscanDuration pulumi.IntPtrInput
	// Waiting time for channel inactivity before scanning this channel (0 - 1000 msec, default = 0).
	ApBgscanIdle pulumi.IntPtrInput
	// Period of time between scanning two channels (1 - 600 sec, default = 1).
	ApBgscanIntv pulumi.IntPtrInput
	// Period of time between background scans (60 - 3600 sec, default = 600).
	ApBgscanPeriod pulumi.IntPtrInput
	// Period of time between background scan reports (15 - 600 sec, default = 30).
	ApBgscanReportIntv pulumi.IntPtrInput
	// Period of time between foreground scan reports (15 - 600 sec, default = 15).
	ApFgscanReportIntv pulumi.IntPtrInput
	// Enable/disable rogue AP detection. Valid values: `disable`, `enable`.
	ApScan pulumi.StringPtrInput
	// Selected ap scan channel list for 2.4G and 5G bands. The structure of `apScanChannelList2g5g` block is documented below.
	ApScanChannelList2g5gs WidsprofileApScanChannelList2g5gArrayInput
	// Selected ap scan channel list for 6G band. The structure of `apScanChannelList6g` block is documented below.
	ApScanChannelList6gs WidsprofileApScanChannelList6gArrayInput
	// Enable/disable passive scanning. Enable means do not send probe request on any channels (default = disable). Valid values: `enable`, `disable`.
	ApScanPassive pulumi.StringPtrInput
	// Minimum signal level/threshold in dBm required for the AP to report detected rogue AP (-95 to -20, default = -90).
	ApScanThreshold pulumi.StringPtrInput
	// Enable/disable asleap attack detection (default = disable). Valid values: `enable`, `disable`.
	AsleapAttack pulumi.StringPtrInput
	// The threshold value for association frame flooding.
	AssocFloodThresh pulumi.IntPtrInput
	// Number of seconds after which a station is considered not connected.
	AssocFloodTime pulumi.IntPtrInput
	// Enable/disable association frame flooding detection (default = disable). Valid values: `enable`, `disable`.
	AssocFrameFlood pulumi.StringPtrInput
	// The threshold value for authentication frame flooding.
	AuthFloodThresh pulumi.IntPtrInput
	// Number of seconds after which a station is considered not connected.
	AuthFloodTime pulumi.IntPtrInput
	// Enable/disable authentication frame flooding detection (default = disable). Valid values: `enable`, `disable`.
	AuthFrameFlood pulumi.StringPtrInput
	// Comment.
	Comment pulumi.StringPtrInput
	// Enable/disable broadcasting de-authentication detection (default = disable). Valid values: `enable`, `disable`.
	DeauthBroadcast pulumi.StringPtrInput
	// Threshold value per second to deauth unknown src for DoS attack (0: no limit).
	DeauthUnknownSrcThresh pulumi.IntPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable EAPOL-Failure flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolFailFlood pulumi.StringPtrInput
	// The detection interval for EAPOL-Failure flooding (1 - 3600 sec).
	EapolFailIntv pulumi.IntPtrInput
	// The threshold value for EAPOL-Failure flooding in specified interval.
	EapolFailThresh pulumi.IntPtrInput
	// Enable/disable EAPOL-Logoff flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolLogoffFlood pulumi.StringPtrInput
	// The detection interval for EAPOL-Logoff flooding (1 - 3600 sec).
	EapolLogoffIntv pulumi.IntPtrInput
	// The threshold value for EAPOL-Logoff flooding in specified interval.
	EapolLogoffThresh pulumi.IntPtrInput
	// Enable/disable premature EAPOL-Failure flooding (to STA) detection (default = disable). Valid values: `enable`, `disable`.
	EapolPreFailFlood pulumi.StringPtrInput
	// The detection interval for premature EAPOL-Failure flooding (1 - 3600 sec).
	EapolPreFailIntv pulumi.IntPtrInput
	// The threshold value for premature EAPOL-Failure flooding in specified interval.
	EapolPreFailThresh pulumi.IntPtrInput
	// Enable/disable premature EAPOL-Success flooding (to STA) detection (default = disable). Valid values: `enable`, `disable`.
	EapolPreSuccFlood pulumi.StringPtrInput
	// The detection interval for premature EAPOL-Success flooding (1 - 3600 sec).
	EapolPreSuccIntv pulumi.IntPtrInput
	// The threshold value for premature EAPOL-Success flooding in specified interval.
	EapolPreSuccThresh pulumi.IntPtrInput
	// Enable/disable EAPOL-Start flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolStartFlood pulumi.StringPtrInput
	// The detection interval for EAPOL-Start flooding (1 - 3600 sec).
	EapolStartIntv pulumi.IntPtrInput
	// The threshold value for EAPOL-Start flooding in specified interval.
	EapolStartThresh pulumi.IntPtrInput
	// Enable/disable EAPOL-Success flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolSuccFlood pulumi.StringPtrInput
	// The detection interval for EAPOL-Success flooding (1 - 3600 sec).
	EapolSuccIntv pulumi.IntPtrInput
	// The threshold value for EAPOL-Success flooding in specified interval.
	EapolSuccThresh pulumi.IntPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Enable/disable invalid MAC OUI detection. Valid values: `enable`, `disable`.
	InvalidMacOui pulumi.StringPtrInput
	// Enable/disable long duration attack detection based on user configured threshold (default = disable). Valid values: `enable`, `disable`.
	LongDurationAttack pulumi.StringPtrInput
	// Threshold value for long duration attack detection (1000 - 32767 usec, default = 8200).
	LongDurationThresh pulumi.IntPtrInput
	// WIDS profile name.
	Name pulumi.StringPtrInput
	// Enable/disable null SSID probe response detection (default = disable). Valid values: `enable`, `disable`.
	NullSsidProbeResp pulumi.StringPtrInput
	// Scan WiFi nearby stations (default = disable). Valid values: `disable`, `foreign`, `both`.
	SensorMode pulumi.StringPtrInput
	// Enable/disable spoofed de-authentication attack detection (default = disable). Valid values: `enable`, `disable`.
	SpoofedDeauth pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	//
	// The `apScanChannelList2g5g` block supports:
	Vdomparam pulumi.StringPtrInput
	// Enable/disable weak WEP IV (Initialization Vector) detection (default = disable). Valid values: `enable`, `disable`.
	WeakWepIv pulumi.StringPtrInput
	// Enable/disable wireless bridge detection (default = disable). Valid values: `enable`, `disable`.
	WirelessBridge pulumi.StringPtrInput
}

func (WidsprofileState) ElementType() reflect.Type {
	return reflect.TypeOf((*widsprofileState)(nil)).Elem()
}

type widsprofileArgs struct {
	// Enable/disable on-wire rogue AP auto-suppression (default = disable). Valid values: `enable`, `disable`.
	ApAutoSuppress *string `pulumi:"apAutoSuppress"`
	// Optionally turn off scanning for one or more days of the week. Separate the days with a space. By default, no days are set. Valid values: `sunday`, `monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday`.
	ApBgscanDisableDay *string `pulumi:"apBgscanDisableDay"`
	// End time, using a 24-hour clock in the format of hh:mm, for disabling background scanning (default = 00:00).
	ApBgscanDisableEnd *string `pulumi:"apBgscanDisableEnd"`
	// Firewall schedules for turning off FortiAP radio background scan. Background scan will be disabled when at least one of the schedules is valid. Separate multiple schedule names with a space. The structure of `apBgscanDisableSchedules` block is documented below.
	ApBgscanDisableSchedules []WidsprofileApBgscanDisableSchedule `pulumi:"apBgscanDisableSchedules"`
	// Start time, using a 24-hour clock in the format of hh:mm, for disabling background scanning (default = 00:00).
	ApBgscanDisableStart *string `pulumi:"apBgscanDisableStart"`
	// Listening time on a scanning channel (10 - 1000 msec, default = 20).
	ApBgscanDuration *int `pulumi:"apBgscanDuration"`
	// Waiting time for channel inactivity before scanning this channel (0 - 1000 msec, default = 0).
	ApBgscanIdle *int `pulumi:"apBgscanIdle"`
	// Period of time between scanning two channels (1 - 600 sec, default = 1).
	ApBgscanIntv *int `pulumi:"apBgscanIntv"`
	// Period of time between background scans (60 - 3600 sec, default = 600).
	ApBgscanPeriod *int `pulumi:"apBgscanPeriod"`
	// Period of time between background scan reports (15 - 600 sec, default = 30).
	ApBgscanReportIntv *int `pulumi:"apBgscanReportIntv"`
	// Period of time between foreground scan reports (15 - 600 sec, default = 15).
	ApFgscanReportIntv *int `pulumi:"apFgscanReportIntv"`
	// Enable/disable rogue AP detection. Valid values: `disable`, `enable`.
	ApScan *string `pulumi:"apScan"`
	// Selected ap scan channel list for 2.4G and 5G bands. The structure of `apScanChannelList2g5g` block is documented below.
	ApScanChannelList2g5gs []WidsprofileApScanChannelList2g5g `pulumi:"apScanChannelList2g5gs"`
	// Selected ap scan channel list for 6G band. The structure of `apScanChannelList6g` block is documented below.
	ApScanChannelList6gs []WidsprofileApScanChannelList6g `pulumi:"apScanChannelList6gs"`
	// Enable/disable passive scanning. Enable means do not send probe request on any channels (default = disable). Valid values: `enable`, `disable`.
	ApScanPassive *string `pulumi:"apScanPassive"`
	// Minimum signal level/threshold in dBm required for the AP to report detected rogue AP (-95 to -20, default = -90).
	ApScanThreshold *string `pulumi:"apScanThreshold"`
	// Enable/disable asleap attack detection (default = disable). Valid values: `enable`, `disable`.
	AsleapAttack *string `pulumi:"asleapAttack"`
	// The threshold value for association frame flooding.
	AssocFloodThresh *int `pulumi:"assocFloodThresh"`
	// Number of seconds after which a station is considered not connected.
	AssocFloodTime *int `pulumi:"assocFloodTime"`
	// Enable/disable association frame flooding detection (default = disable). Valid values: `enable`, `disable`.
	AssocFrameFlood *string `pulumi:"assocFrameFlood"`
	// The threshold value for authentication frame flooding.
	AuthFloodThresh *int `pulumi:"authFloodThresh"`
	// Number of seconds after which a station is considered not connected.
	AuthFloodTime *int `pulumi:"authFloodTime"`
	// Enable/disable authentication frame flooding detection (default = disable). Valid values: `enable`, `disable`.
	AuthFrameFlood *string `pulumi:"authFrameFlood"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// Enable/disable broadcasting de-authentication detection (default = disable). Valid values: `enable`, `disable`.
	DeauthBroadcast *string `pulumi:"deauthBroadcast"`
	// Threshold value per second to deauth unknown src for DoS attack (0: no limit).
	DeauthUnknownSrcThresh *int `pulumi:"deauthUnknownSrcThresh"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable EAPOL-Failure flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolFailFlood *string `pulumi:"eapolFailFlood"`
	// The detection interval for EAPOL-Failure flooding (1 - 3600 sec).
	EapolFailIntv *int `pulumi:"eapolFailIntv"`
	// The threshold value for EAPOL-Failure flooding in specified interval.
	EapolFailThresh *int `pulumi:"eapolFailThresh"`
	// Enable/disable EAPOL-Logoff flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolLogoffFlood *string `pulumi:"eapolLogoffFlood"`
	// The detection interval for EAPOL-Logoff flooding (1 - 3600 sec).
	EapolLogoffIntv *int `pulumi:"eapolLogoffIntv"`
	// The threshold value for EAPOL-Logoff flooding in specified interval.
	EapolLogoffThresh *int `pulumi:"eapolLogoffThresh"`
	// Enable/disable premature EAPOL-Failure flooding (to STA) detection (default = disable). Valid values: `enable`, `disable`.
	EapolPreFailFlood *string `pulumi:"eapolPreFailFlood"`
	// The detection interval for premature EAPOL-Failure flooding (1 - 3600 sec).
	EapolPreFailIntv *int `pulumi:"eapolPreFailIntv"`
	// The threshold value for premature EAPOL-Failure flooding in specified interval.
	EapolPreFailThresh *int `pulumi:"eapolPreFailThresh"`
	// Enable/disable premature EAPOL-Success flooding (to STA) detection (default = disable). Valid values: `enable`, `disable`.
	EapolPreSuccFlood *string `pulumi:"eapolPreSuccFlood"`
	// The detection interval for premature EAPOL-Success flooding (1 - 3600 sec).
	EapolPreSuccIntv *int `pulumi:"eapolPreSuccIntv"`
	// The threshold value for premature EAPOL-Success flooding in specified interval.
	EapolPreSuccThresh *int `pulumi:"eapolPreSuccThresh"`
	// Enable/disable EAPOL-Start flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolStartFlood *string `pulumi:"eapolStartFlood"`
	// The detection interval for EAPOL-Start flooding (1 - 3600 sec).
	EapolStartIntv *int `pulumi:"eapolStartIntv"`
	// The threshold value for EAPOL-Start flooding in specified interval.
	EapolStartThresh *int `pulumi:"eapolStartThresh"`
	// Enable/disable EAPOL-Success flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolSuccFlood *string `pulumi:"eapolSuccFlood"`
	// The detection interval for EAPOL-Success flooding (1 - 3600 sec).
	EapolSuccIntv *int `pulumi:"eapolSuccIntv"`
	// The threshold value for EAPOL-Success flooding in specified interval.
	EapolSuccThresh *int `pulumi:"eapolSuccThresh"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Enable/disable invalid MAC OUI detection. Valid values: `enable`, `disable`.
	InvalidMacOui *string `pulumi:"invalidMacOui"`
	// Enable/disable long duration attack detection based on user configured threshold (default = disable). Valid values: `enable`, `disable`.
	LongDurationAttack *string `pulumi:"longDurationAttack"`
	// Threshold value for long duration attack detection (1000 - 32767 usec, default = 8200).
	LongDurationThresh *int `pulumi:"longDurationThresh"`
	// WIDS profile name.
	Name *string `pulumi:"name"`
	// Enable/disable null SSID probe response detection (default = disable). Valid values: `enable`, `disable`.
	NullSsidProbeResp *string `pulumi:"nullSsidProbeResp"`
	// Scan WiFi nearby stations (default = disable). Valid values: `disable`, `foreign`, `both`.
	SensorMode *string `pulumi:"sensorMode"`
	// Enable/disable spoofed de-authentication attack detection (default = disable). Valid values: `enable`, `disable`.
	SpoofedDeauth *string `pulumi:"spoofedDeauth"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	//
	// The `apScanChannelList2g5g` block supports:
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable weak WEP IV (Initialization Vector) detection (default = disable). Valid values: `enable`, `disable`.
	WeakWepIv *string `pulumi:"weakWepIv"`
	// Enable/disable wireless bridge detection (default = disable). Valid values: `enable`, `disable`.
	WirelessBridge *string `pulumi:"wirelessBridge"`
}

// The set of arguments for constructing a Widsprofile resource.
type WidsprofileArgs struct {
	// Enable/disable on-wire rogue AP auto-suppression (default = disable). Valid values: `enable`, `disable`.
	ApAutoSuppress pulumi.StringPtrInput
	// Optionally turn off scanning for one or more days of the week. Separate the days with a space. By default, no days are set. Valid values: `sunday`, `monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday`.
	ApBgscanDisableDay pulumi.StringPtrInput
	// End time, using a 24-hour clock in the format of hh:mm, for disabling background scanning (default = 00:00).
	ApBgscanDisableEnd pulumi.StringPtrInput
	// Firewall schedules for turning off FortiAP radio background scan. Background scan will be disabled when at least one of the schedules is valid. Separate multiple schedule names with a space. The structure of `apBgscanDisableSchedules` block is documented below.
	ApBgscanDisableSchedules WidsprofileApBgscanDisableScheduleArrayInput
	// Start time, using a 24-hour clock in the format of hh:mm, for disabling background scanning (default = 00:00).
	ApBgscanDisableStart pulumi.StringPtrInput
	// Listening time on a scanning channel (10 - 1000 msec, default = 20).
	ApBgscanDuration pulumi.IntPtrInput
	// Waiting time for channel inactivity before scanning this channel (0 - 1000 msec, default = 0).
	ApBgscanIdle pulumi.IntPtrInput
	// Period of time between scanning two channels (1 - 600 sec, default = 1).
	ApBgscanIntv pulumi.IntPtrInput
	// Period of time between background scans (60 - 3600 sec, default = 600).
	ApBgscanPeriod pulumi.IntPtrInput
	// Period of time between background scan reports (15 - 600 sec, default = 30).
	ApBgscanReportIntv pulumi.IntPtrInput
	// Period of time between foreground scan reports (15 - 600 sec, default = 15).
	ApFgscanReportIntv pulumi.IntPtrInput
	// Enable/disable rogue AP detection. Valid values: `disable`, `enable`.
	ApScan pulumi.StringPtrInput
	// Selected ap scan channel list for 2.4G and 5G bands. The structure of `apScanChannelList2g5g` block is documented below.
	ApScanChannelList2g5gs WidsprofileApScanChannelList2g5gArrayInput
	// Selected ap scan channel list for 6G band. The structure of `apScanChannelList6g` block is documented below.
	ApScanChannelList6gs WidsprofileApScanChannelList6gArrayInput
	// Enable/disable passive scanning. Enable means do not send probe request on any channels (default = disable). Valid values: `enable`, `disable`.
	ApScanPassive pulumi.StringPtrInput
	// Minimum signal level/threshold in dBm required for the AP to report detected rogue AP (-95 to -20, default = -90).
	ApScanThreshold pulumi.StringPtrInput
	// Enable/disable asleap attack detection (default = disable). Valid values: `enable`, `disable`.
	AsleapAttack pulumi.StringPtrInput
	// The threshold value for association frame flooding.
	AssocFloodThresh pulumi.IntPtrInput
	// Number of seconds after which a station is considered not connected.
	AssocFloodTime pulumi.IntPtrInput
	// Enable/disable association frame flooding detection (default = disable). Valid values: `enable`, `disable`.
	AssocFrameFlood pulumi.StringPtrInput
	// The threshold value for authentication frame flooding.
	AuthFloodThresh pulumi.IntPtrInput
	// Number of seconds after which a station is considered not connected.
	AuthFloodTime pulumi.IntPtrInput
	// Enable/disable authentication frame flooding detection (default = disable). Valid values: `enable`, `disable`.
	AuthFrameFlood pulumi.StringPtrInput
	// Comment.
	Comment pulumi.StringPtrInput
	// Enable/disable broadcasting de-authentication detection (default = disable). Valid values: `enable`, `disable`.
	DeauthBroadcast pulumi.StringPtrInput
	// Threshold value per second to deauth unknown src for DoS attack (0: no limit).
	DeauthUnknownSrcThresh pulumi.IntPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable EAPOL-Failure flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolFailFlood pulumi.StringPtrInput
	// The detection interval for EAPOL-Failure flooding (1 - 3600 sec).
	EapolFailIntv pulumi.IntPtrInput
	// The threshold value for EAPOL-Failure flooding in specified interval.
	EapolFailThresh pulumi.IntPtrInput
	// Enable/disable EAPOL-Logoff flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolLogoffFlood pulumi.StringPtrInput
	// The detection interval for EAPOL-Logoff flooding (1 - 3600 sec).
	EapolLogoffIntv pulumi.IntPtrInput
	// The threshold value for EAPOL-Logoff flooding in specified interval.
	EapolLogoffThresh pulumi.IntPtrInput
	// Enable/disable premature EAPOL-Failure flooding (to STA) detection (default = disable). Valid values: `enable`, `disable`.
	EapolPreFailFlood pulumi.StringPtrInput
	// The detection interval for premature EAPOL-Failure flooding (1 - 3600 sec).
	EapolPreFailIntv pulumi.IntPtrInput
	// The threshold value for premature EAPOL-Failure flooding in specified interval.
	EapolPreFailThresh pulumi.IntPtrInput
	// Enable/disable premature EAPOL-Success flooding (to STA) detection (default = disable). Valid values: `enable`, `disable`.
	EapolPreSuccFlood pulumi.StringPtrInput
	// The detection interval for premature EAPOL-Success flooding (1 - 3600 sec).
	EapolPreSuccIntv pulumi.IntPtrInput
	// The threshold value for premature EAPOL-Success flooding in specified interval.
	EapolPreSuccThresh pulumi.IntPtrInput
	// Enable/disable EAPOL-Start flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolStartFlood pulumi.StringPtrInput
	// The detection interval for EAPOL-Start flooding (1 - 3600 sec).
	EapolStartIntv pulumi.IntPtrInput
	// The threshold value for EAPOL-Start flooding in specified interval.
	EapolStartThresh pulumi.IntPtrInput
	// Enable/disable EAPOL-Success flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolSuccFlood pulumi.StringPtrInput
	// The detection interval for EAPOL-Success flooding (1 - 3600 sec).
	EapolSuccIntv pulumi.IntPtrInput
	// The threshold value for EAPOL-Success flooding in specified interval.
	EapolSuccThresh pulumi.IntPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Enable/disable invalid MAC OUI detection. Valid values: `enable`, `disable`.
	InvalidMacOui pulumi.StringPtrInput
	// Enable/disable long duration attack detection based on user configured threshold (default = disable). Valid values: `enable`, `disable`.
	LongDurationAttack pulumi.StringPtrInput
	// Threshold value for long duration attack detection (1000 - 32767 usec, default = 8200).
	LongDurationThresh pulumi.IntPtrInput
	// WIDS profile name.
	Name pulumi.StringPtrInput
	// Enable/disable null SSID probe response detection (default = disable). Valid values: `enable`, `disable`.
	NullSsidProbeResp pulumi.StringPtrInput
	// Scan WiFi nearby stations (default = disable). Valid values: `disable`, `foreign`, `both`.
	SensorMode pulumi.StringPtrInput
	// Enable/disable spoofed de-authentication attack detection (default = disable). Valid values: `enable`, `disable`.
	SpoofedDeauth pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	//
	// The `apScanChannelList2g5g` block supports:
	Vdomparam pulumi.StringPtrInput
	// Enable/disable weak WEP IV (Initialization Vector) detection (default = disable). Valid values: `enable`, `disable`.
	WeakWepIv pulumi.StringPtrInput
	// Enable/disable wireless bridge detection (default = disable). Valid values: `enable`, `disable`.
	WirelessBridge pulumi.StringPtrInput
}

func (WidsprofileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*widsprofileArgs)(nil)).Elem()
}

type WidsprofileInput interface {
	pulumi.Input

	ToWidsprofileOutput() WidsprofileOutput
	ToWidsprofileOutputWithContext(ctx context.Context) WidsprofileOutput
}

func (*Widsprofile) ElementType() reflect.Type {
	return reflect.TypeOf((**Widsprofile)(nil)).Elem()
}

func (i *Widsprofile) ToWidsprofileOutput() WidsprofileOutput {
	return i.ToWidsprofileOutputWithContext(context.Background())
}

func (i *Widsprofile) ToWidsprofileOutputWithContext(ctx context.Context) WidsprofileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WidsprofileOutput)
}

// WidsprofileArrayInput is an input type that accepts WidsprofileArray and WidsprofileArrayOutput values.
// You can construct a concrete instance of `WidsprofileArrayInput` via:
//
//	WidsprofileArray{ WidsprofileArgs{...} }
type WidsprofileArrayInput interface {
	pulumi.Input

	ToWidsprofileArrayOutput() WidsprofileArrayOutput
	ToWidsprofileArrayOutputWithContext(context.Context) WidsprofileArrayOutput
}

type WidsprofileArray []WidsprofileInput

func (WidsprofileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Widsprofile)(nil)).Elem()
}

func (i WidsprofileArray) ToWidsprofileArrayOutput() WidsprofileArrayOutput {
	return i.ToWidsprofileArrayOutputWithContext(context.Background())
}

func (i WidsprofileArray) ToWidsprofileArrayOutputWithContext(ctx context.Context) WidsprofileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WidsprofileArrayOutput)
}

// WidsprofileMapInput is an input type that accepts WidsprofileMap and WidsprofileMapOutput values.
// You can construct a concrete instance of `WidsprofileMapInput` via:
//
//	WidsprofileMap{ "key": WidsprofileArgs{...} }
type WidsprofileMapInput interface {
	pulumi.Input

	ToWidsprofileMapOutput() WidsprofileMapOutput
	ToWidsprofileMapOutputWithContext(context.Context) WidsprofileMapOutput
}

type WidsprofileMap map[string]WidsprofileInput

func (WidsprofileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Widsprofile)(nil)).Elem()
}

func (i WidsprofileMap) ToWidsprofileMapOutput() WidsprofileMapOutput {
	return i.ToWidsprofileMapOutputWithContext(context.Background())
}

func (i WidsprofileMap) ToWidsprofileMapOutputWithContext(ctx context.Context) WidsprofileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WidsprofileMapOutput)
}

type WidsprofileOutput struct{ *pulumi.OutputState }

func (WidsprofileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Widsprofile)(nil)).Elem()
}

func (o WidsprofileOutput) ToWidsprofileOutput() WidsprofileOutput {
	return o
}

func (o WidsprofileOutput) ToWidsprofileOutputWithContext(ctx context.Context) WidsprofileOutput {
	return o
}

// Enable/disable on-wire rogue AP auto-suppression (default = disable). Valid values: `enable`, `disable`.
func (o WidsprofileOutput) ApAutoSuppress() pulumi.StringOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.StringOutput { return v.ApAutoSuppress }).(pulumi.StringOutput)
}

// Optionally turn off scanning for one or more days of the week. Separate the days with a space. By default, no days are set. Valid values: `sunday`, `monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday`.
func (o WidsprofileOutput) ApBgscanDisableDay() pulumi.StringOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.StringOutput { return v.ApBgscanDisableDay }).(pulumi.StringOutput)
}

// End time, using a 24-hour clock in the format of hh:mm, for disabling background scanning (default = 00:00).
func (o WidsprofileOutput) ApBgscanDisableEnd() pulumi.StringOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.StringOutput { return v.ApBgscanDisableEnd }).(pulumi.StringOutput)
}

// Firewall schedules for turning off FortiAP radio background scan. Background scan will be disabled when at least one of the schedules is valid. Separate multiple schedule names with a space. The structure of `apBgscanDisableSchedules` block is documented below.
func (o WidsprofileOutput) ApBgscanDisableSchedules() WidsprofileApBgscanDisableScheduleArrayOutput {
	return o.ApplyT(func(v *Widsprofile) WidsprofileApBgscanDisableScheduleArrayOutput { return v.ApBgscanDisableSchedules }).(WidsprofileApBgscanDisableScheduleArrayOutput)
}

// Start time, using a 24-hour clock in the format of hh:mm, for disabling background scanning (default = 00:00).
func (o WidsprofileOutput) ApBgscanDisableStart() pulumi.StringOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.StringOutput { return v.ApBgscanDisableStart }).(pulumi.StringOutput)
}

// Listening time on a scanning channel (10 - 1000 msec, default = 20).
func (o WidsprofileOutput) ApBgscanDuration() pulumi.IntOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.IntOutput { return v.ApBgscanDuration }).(pulumi.IntOutput)
}

// Waiting time for channel inactivity before scanning this channel (0 - 1000 msec, default = 0).
func (o WidsprofileOutput) ApBgscanIdle() pulumi.IntOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.IntOutput { return v.ApBgscanIdle }).(pulumi.IntOutput)
}

// Period of time between scanning two channels (1 - 600 sec, default = 1).
func (o WidsprofileOutput) ApBgscanIntv() pulumi.IntOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.IntOutput { return v.ApBgscanIntv }).(pulumi.IntOutput)
}

// Period of time between background scans (60 - 3600 sec, default = 600).
func (o WidsprofileOutput) ApBgscanPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.IntOutput { return v.ApBgscanPeriod }).(pulumi.IntOutput)
}

// Period of time between background scan reports (15 - 600 sec, default = 30).
func (o WidsprofileOutput) ApBgscanReportIntv() pulumi.IntOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.IntOutput { return v.ApBgscanReportIntv }).(pulumi.IntOutput)
}

// Period of time between foreground scan reports (15 - 600 sec, default = 15).
func (o WidsprofileOutput) ApFgscanReportIntv() pulumi.IntOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.IntOutput { return v.ApFgscanReportIntv }).(pulumi.IntOutput)
}

// Enable/disable rogue AP detection. Valid values: `disable`, `enable`.
func (o WidsprofileOutput) ApScan() pulumi.StringOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.StringOutput { return v.ApScan }).(pulumi.StringOutput)
}

// Selected ap scan channel list for 2.4G and 5G bands. The structure of `apScanChannelList2g5g` block is documented below.
func (o WidsprofileOutput) ApScanChannelList2g5gs() WidsprofileApScanChannelList2g5gArrayOutput {
	return o.ApplyT(func(v *Widsprofile) WidsprofileApScanChannelList2g5gArrayOutput { return v.ApScanChannelList2g5gs }).(WidsprofileApScanChannelList2g5gArrayOutput)
}

// Selected ap scan channel list for 6G band. The structure of `apScanChannelList6g` block is documented below.
func (o WidsprofileOutput) ApScanChannelList6gs() WidsprofileApScanChannelList6gArrayOutput {
	return o.ApplyT(func(v *Widsprofile) WidsprofileApScanChannelList6gArrayOutput { return v.ApScanChannelList6gs }).(WidsprofileApScanChannelList6gArrayOutput)
}

// Enable/disable passive scanning. Enable means do not send probe request on any channels (default = disable). Valid values: `enable`, `disable`.
func (o WidsprofileOutput) ApScanPassive() pulumi.StringOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.StringOutput { return v.ApScanPassive }).(pulumi.StringOutput)
}

// Minimum signal level/threshold in dBm required for the AP to report detected rogue AP (-95 to -20, default = -90).
func (o WidsprofileOutput) ApScanThreshold() pulumi.StringOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.StringOutput { return v.ApScanThreshold }).(pulumi.StringOutput)
}

// Enable/disable asleap attack detection (default = disable). Valid values: `enable`, `disable`.
func (o WidsprofileOutput) AsleapAttack() pulumi.StringOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.StringOutput { return v.AsleapAttack }).(pulumi.StringOutput)
}

// The threshold value for association frame flooding.
func (o WidsprofileOutput) AssocFloodThresh() pulumi.IntOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.IntOutput { return v.AssocFloodThresh }).(pulumi.IntOutput)
}

// Number of seconds after which a station is considered not connected.
func (o WidsprofileOutput) AssocFloodTime() pulumi.IntOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.IntOutput { return v.AssocFloodTime }).(pulumi.IntOutput)
}

// Enable/disable association frame flooding detection (default = disable). Valid values: `enable`, `disable`.
func (o WidsprofileOutput) AssocFrameFlood() pulumi.StringOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.StringOutput { return v.AssocFrameFlood }).(pulumi.StringOutput)
}

// The threshold value for authentication frame flooding.
func (o WidsprofileOutput) AuthFloodThresh() pulumi.IntOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.IntOutput { return v.AuthFloodThresh }).(pulumi.IntOutput)
}

// Number of seconds after which a station is considered not connected.
func (o WidsprofileOutput) AuthFloodTime() pulumi.IntOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.IntOutput { return v.AuthFloodTime }).(pulumi.IntOutput)
}

// Enable/disable authentication frame flooding detection (default = disable). Valid values: `enable`, `disable`.
func (o WidsprofileOutput) AuthFrameFlood() pulumi.StringOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.StringOutput { return v.AuthFrameFlood }).(pulumi.StringOutput)
}

// Comment.
func (o WidsprofileOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.StringOutput { return v.Comment }).(pulumi.StringOutput)
}

// Enable/disable broadcasting de-authentication detection (default = disable). Valid values: `enable`, `disable`.
func (o WidsprofileOutput) DeauthBroadcast() pulumi.StringOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.StringOutput { return v.DeauthBroadcast }).(pulumi.StringOutput)
}

// Threshold value per second to deauth unknown src for DoS attack (0: no limit).
func (o WidsprofileOutput) DeauthUnknownSrcThresh() pulumi.IntOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.IntOutput { return v.DeauthUnknownSrcThresh }).(pulumi.IntOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o WidsprofileOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Enable/disable EAPOL-Failure flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
func (o WidsprofileOutput) EapolFailFlood() pulumi.StringOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.StringOutput { return v.EapolFailFlood }).(pulumi.StringOutput)
}

// The detection interval for EAPOL-Failure flooding (1 - 3600 sec).
func (o WidsprofileOutput) EapolFailIntv() pulumi.IntOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.IntOutput { return v.EapolFailIntv }).(pulumi.IntOutput)
}

// The threshold value for EAPOL-Failure flooding in specified interval.
func (o WidsprofileOutput) EapolFailThresh() pulumi.IntOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.IntOutput { return v.EapolFailThresh }).(pulumi.IntOutput)
}

// Enable/disable EAPOL-Logoff flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
func (o WidsprofileOutput) EapolLogoffFlood() pulumi.StringOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.StringOutput { return v.EapolLogoffFlood }).(pulumi.StringOutput)
}

// The detection interval for EAPOL-Logoff flooding (1 - 3600 sec).
func (o WidsprofileOutput) EapolLogoffIntv() pulumi.IntOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.IntOutput { return v.EapolLogoffIntv }).(pulumi.IntOutput)
}

// The threshold value for EAPOL-Logoff flooding in specified interval.
func (o WidsprofileOutput) EapolLogoffThresh() pulumi.IntOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.IntOutput { return v.EapolLogoffThresh }).(pulumi.IntOutput)
}

// Enable/disable premature EAPOL-Failure flooding (to STA) detection (default = disable). Valid values: `enable`, `disable`.
func (o WidsprofileOutput) EapolPreFailFlood() pulumi.StringOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.StringOutput { return v.EapolPreFailFlood }).(pulumi.StringOutput)
}

// The detection interval for premature EAPOL-Failure flooding (1 - 3600 sec).
func (o WidsprofileOutput) EapolPreFailIntv() pulumi.IntOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.IntOutput { return v.EapolPreFailIntv }).(pulumi.IntOutput)
}

// The threshold value for premature EAPOL-Failure flooding in specified interval.
func (o WidsprofileOutput) EapolPreFailThresh() pulumi.IntOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.IntOutput { return v.EapolPreFailThresh }).(pulumi.IntOutput)
}

// Enable/disable premature EAPOL-Success flooding (to STA) detection (default = disable). Valid values: `enable`, `disable`.
func (o WidsprofileOutput) EapolPreSuccFlood() pulumi.StringOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.StringOutput { return v.EapolPreSuccFlood }).(pulumi.StringOutput)
}

// The detection interval for premature EAPOL-Success flooding (1 - 3600 sec).
func (o WidsprofileOutput) EapolPreSuccIntv() pulumi.IntOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.IntOutput { return v.EapolPreSuccIntv }).(pulumi.IntOutput)
}

// The threshold value for premature EAPOL-Success flooding in specified interval.
func (o WidsprofileOutput) EapolPreSuccThresh() pulumi.IntOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.IntOutput { return v.EapolPreSuccThresh }).(pulumi.IntOutput)
}

// Enable/disable EAPOL-Start flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
func (o WidsprofileOutput) EapolStartFlood() pulumi.StringOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.StringOutput { return v.EapolStartFlood }).(pulumi.StringOutput)
}

// The detection interval for EAPOL-Start flooding (1 - 3600 sec).
func (o WidsprofileOutput) EapolStartIntv() pulumi.IntOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.IntOutput { return v.EapolStartIntv }).(pulumi.IntOutput)
}

// The threshold value for EAPOL-Start flooding in specified interval.
func (o WidsprofileOutput) EapolStartThresh() pulumi.IntOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.IntOutput { return v.EapolStartThresh }).(pulumi.IntOutput)
}

// Enable/disable EAPOL-Success flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
func (o WidsprofileOutput) EapolSuccFlood() pulumi.StringOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.StringOutput { return v.EapolSuccFlood }).(pulumi.StringOutput)
}

// The detection interval for EAPOL-Success flooding (1 - 3600 sec).
func (o WidsprofileOutput) EapolSuccIntv() pulumi.IntOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.IntOutput { return v.EapolSuccIntv }).(pulumi.IntOutput)
}

// The threshold value for EAPOL-Success flooding in specified interval.
func (o WidsprofileOutput) EapolSuccThresh() pulumi.IntOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.IntOutput { return v.EapolSuccThresh }).(pulumi.IntOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o WidsprofileOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Enable/disable invalid MAC OUI detection. Valid values: `enable`, `disable`.
func (o WidsprofileOutput) InvalidMacOui() pulumi.StringOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.StringOutput { return v.InvalidMacOui }).(pulumi.StringOutput)
}

// Enable/disable long duration attack detection based on user configured threshold (default = disable). Valid values: `enable`, `disable`.
func (o WidsprofileOutput) LongDurationAttack() pulumi.StringOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.StringOutput { return v.LongDurationAttack }).(pulumi.StringOutput)
}

// Threshold value for long duration attack detection (1000 - 32767 usec, default = 8200).
func (o WidsprofileOutput) LongDurationThresh() pulumi.IntOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.IntOutput { return v.LongDurationThresh }).(pulumi.IntOutput)
}

// WIDS profile name.
func (o WidsprofileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Enable/disable null SSID probe response detection (default = disable). Valid values: `enable`, `disable`.
func (o WidsprofileOutput) NullSsidProbeResp() pulumi.StringOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.StringOutput { return v.NullSsidProbeResp }).(pulumi.StringOutput)
}

// Scan WiFi nearby stations (default = disable). Valid values: `disable`, `foreign`, `both`.
func (o WidsprofileOutput) SensorMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.StringOutput { return v.SensorMode }).(pulumi.StringOutput)
}

// Enable/disable spoofed de-authentication attack detection (default = disable). Valid values: `enable`, `disable`.
func (o WidsprofileOutput) SpoofedDeauth() pulumi.StringOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.StringOutput { return v.SpoofedDeauth }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
//
// The `apScanChannelList2g5g` block supports:
func (o WidsprofileOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// Enable/disable weak WEP IV (Initialization Vector) detection (default = disable). Valid values: `enable`, `disable`.
func (o WidsprofileOutput) WeakWepIv() pulumi.StringOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.StringOutput { return v.WeakWepIv }).(pulumi.StringOutput)
}

// Enable/disable wireless bridge detection (default = disable). Valid values: `enable`, `disable`.
func (o WidsprofileOutput) WirelessBridge() pulumi.StringOutput {
	return o.ApplyT(func(v *Widsprofile) pulumi.StringOutput { return v.WirelessBridge }).(pulumi.StringOutput)
}

type WidsprofileArrayOutput struct{ *pulumi.OutputState }

func (WidsprofileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Widsprofile)(nil)).Elem()
}

func (o WidsprofileArrayOutput) ToWidsprofileArrayOutput() WidsprofileArrayOutput {
	return o
}

func (o WidsprofileArrayOutput) ToWidsprofileArrayOutputWithContext(ctx context.Context) WidsprofileArrayOutput {
	return o
}

func (o WidsprofileArrayOutput) Index(i pulumi.IntInput) WidsprofileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Widsprofile {
		return vs[0].([]*Widsprofile)[vs[1].(int)]
	}).(WidsprofileOutput)
}

type WidsprofileMapOutput struct{ *pulumi.OutputState }

func (WidsprofileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Widsprofile)(nil)).Elem()
}

func (o WidsprofileMapOutput) ToWidsprofileMapOutput() WidsprofileMapOutput {
	return o
}

func (o WidsprofileMapOutput) ToWidsprofileMapOutputWithContext(ctx context.Context) WidsprofileMapOutput {
	return o
}

func (o WidsprofileMapOutput) MapIndex(k pulumi.StringInput) WidsprofileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Widsprofile {
		return vs[0].(map[string]*Widsprofile)[vs[1].(string)]
	}).(WidsprofileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WidsprofileInput)(nil)).Elem(), &Widsprofile{})
	pulumi.RegisterInputType(reflect.TypeOf((*WidsprofileArrayInput)(nil)).Elem(), WidsprofileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WidsprofileMapInput)(nil)).Elem(), WidsprofileMap{})
	pulumi.RegisterOutputType(WidsprofileOutput{})
	pulumi.RegisterOutputType(WidsprofileArrayOutput{})
	pulumi.RegisterOutputType(WidsprofileMapOutput{})
}
