// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wirelesscontroller

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure Wireless Termination Points (WTPs), that is, FortiAPs or APs to be managed by FortiGate.
//
// ## Import
//
// WirelessController Wtp can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:wirelesscontroller/wtp:Wtp labelname {{wtp_id}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:wirelesscontroller/wtp:Wtp labelname {{wtp_id}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Wtp struct {
	pulumi.CustomResourceState

	// Configure how the FortiGate operating as a wireless controller discovers and manages this WTP, AP or FortiAP. Valid values: `discovered`, `disable`, `enable`.
	Admin pulumi.StringOutput `pulumi:"admin"`
	// Control management access to the managed WTP, FortiAP, or AP. Separate entries with a space.
	Allowaccess pulumi.StringOutput `pulumi:"allowaccess"`
	// AP local configuration profile name.
	ApcfgProfile pulumi.StringOutput `pulumi:"apcfgProfile"`
	// Override BLE Major ID.
	BleMajorId pulumi.IntOutput `pulumi:"bleMajorId"`
	// Override BLE Minor ID.
	BleMinorId pulumi.IntOutput `pulumi:"bleMinorId"`
	// Bonjour profile name.
	BonjourProfile pulumi.StringOutput `pulumi:"bonjourProfile"`
	// WTP latitude coordinate.
	CoordinateLatitude pulumi.StringOutput `pulumi:"coordinateLatitude"`
	// WTP longitude coordinate.
	CoordinateLongitude pulumi.StringOutput `pulumi:"coordinateLongitude"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Firmware version to provision to this FortiAP on bootup (major.minor.build, i.e. 6.2.1234).
	FirmwareProvision pulumi.StringOutput `pulumi:"firmwareProvision"`
	// Enable/disable one-time automatic provisioning of the latest firmware version. Valid values: `disable`, `once`.
	FirmwareProvisionLatest pulumi.StringOutput `pulumi:"firmwareProvisionLatest"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Enable/disable WTP image download. Valid values: `enable`, `disable`.
	ImageDownload pulumi.StringOutput `pulumi:"imageDownload"`
	// Index (0 - 4294967295).
	Index pulumi.IntOutput `pulumi:"index"`
	// Method by which IP fragmentation is prevented for CAPWAP tunneled control and data packets (default = tcp-mss-adjust). Valid values: `tcp-mss-adjust`, `icmp-unreachable`.
	IpFragmentPreventing pulumi.StringOutput `pulumi:"ipFragmentPreventing"`
	// WTP LAN port mapping. The structure of `lan` block is documented below.
	Lan WtpLanOutput `pulumi:"lan"`
	// Enable to allow the FortiAPs LEDs to light. Disable to keep the LEDs off. You may want to keep the LEDs off so they are not distracting in low light areas etc. Valid values: `enable`, `disable`.
	LedState pulumi.StringOutput `pulumi:"ledState"`
	// Field for describing the physical location of the WTP, AP or FortiAP.
	Location pulumi.StringOutput `pulumi:"location"`
	// Set the managed WTP, FortiAP, or AP's administrator password.
	LoginPasswd pulumi.StringPtrOutput `pulumi:"loginPasswd"`
	// Change or reset the administrator password of a managed WTP, FortiAP or AP (yes, default, or no, default = no). Valid values: `yes`, `default`, `no`.
	LoginPasswdChange pulumi.StringOutput `pulumi:"loginPasswdChange"`
	// Enable/disable mesh Ethernet bridge when WTP is configured as a mesh branch/leaf AP. Valid values: `default`, `enable`, `disable`.
	MeshBridgeEnable pulumi.StringOutput `pulumi:"meshBridgeEnable"`
	// WTP, AP or FortiAP configuration name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Enable to override the WTP profile management access configuration. Valid values: `enable`, `disable`.
	OverrideAllowaccess pulumi.StringOutput `pulumi:"overrideAllowaccess"`
	// Enable/disable overriding the WTP profile IP fragment prevention setting. Valid values: `enable`, `disable`.
	OverrideIpFragment pulumi.StringOutput `pulumi:"overrideIpFragment"`
	// Enable to override the WTP profile LAN port setting. Valid values: `enable`, `disable`.
	OverrideLan pulumi.StringOutput `pulumi:"overrideLan"`
	// Enable to override the profile LED state setting for this FortiAP. You must enable this option to use the led-state command to turn off the FortiAP's LEDs. Valid values: `enable`, `disable`.
	OverrideLedState pulumi.StringOutput `pulumi:"overrideLedState"`
	// Enable to override the WTP profile login-password (administrator password) setting. Valid values: `enable`, `disable`.
	OverrideLoginPasswdChange pulumi.StringOutput `pulumi:"overrideLoginPasswdChange"`
	// Enable/disable overriding the WTP profile split tunneling setting. Valid values: `enable`, `disable`.
	OverrideSplitTunnel pulumi.StringOutput `pulumi:"overrideSplitTunnel"`
	// Enable/disable overriding the wan-port-mode in the WTP profile. Valid values: `enable`, `disable`.
	OverrideWanPortMode pulumi.StringOutput `pulumi:"overrideWanPortMode"`
	// Purdue Level of this WTP. Valid values: `1`, `1.5`, `2`, `2.5`, `3`, `3.5`, `4`, `5`, `5.5`.
	PurdueLevel pulumi.StringOutput `pulumi:"purdueLevel"`
	// Configuration options for radio 1. The structure of `radio1` block is documented below.
	Radio1 WtpRadio1Output `pulumi:"radio1"`
	// Configuration options for radio 2. The structure of `radio2` block is documented below.
	Radio2 WtpRadio2Output `pulumi:"radio2"`
	// Configuration options for radio 3. The structure of `radio3` block is documented below.
	Radio3 WtpRadio3Output `pulumi:"radio3"`
	// Configuration options for radio 4. The structure of `radio4` block is documented below.
	Radio4 WtpRadio4Output `pulumi:"radio4"`
	// Region name WTP is associated with.
	Region pulumi.StringOutput `pulumi:"region"`
	// Relative horizontal region coordinate (between 0 and 1).
	RegionX pulumi.StringOutput `pulumi:"regionX"`
	// Relative vertical region coordinate (between 0 and 1).
	RegionY pulumi.StringOutput `pulumi:"regionY"`
	// Enable/disable automatically adding local subnetwork of FortiAP to split-tunneling ACL (default = disable). Valid values: `enable`, `disable`.
	SplitTunnelingAclLocalApSubnet pulumi.StringOutput `pulumi:"splitTunnelingAclLocalApSubnet"`
	// Split tunneling ACL path is local/tunnel. Valid values: `tunnel`, `local`.
	SplitTunnelingAclPath pulumi.StringOutput `pulumi:"splitTunnelingAclPath"`
	// Split tunneling ACL filter list. The structure of `splitTunnelingAcl` block is documented below.
	SplitTunnelingAcls WtpSplitTunnelingAclArrayOutput `pulumi:"splitTunnelingAcls"`
	// Downlink tunnel MTU in octets. Set the value to either 0 (by default), 576, or 1500.
	TunMtuDownlink pulumi.IntOutput `pulumi:"tunMtuDownlink"`
	// Uplink tunnel maximum transmission unit (MTU) in octets (eight-bit bytes). Set the value to either 0 (by default), 576, or 1500.
	TunMtuUplink pulumi.IntOutput `pulumi:"tunMtuUplink"`
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid pulumi.StringOutput `pulumi:"uuid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Enable/disable using the FortiAP WAN port as a LAN port. Valid values: `wan-lan`, `wan-only`.
	WanPortMode pulumi.StringOutput `pulumi:"wanPortMode"`
	// WTP ID.
	WtpId pulumi.StringOutput `pulumi:"wtpId"`
	// WTP, AP, or FortiAP operating mode; normal (by default) or remote. A tunnel mode SSID can be assigned to an AP in normal mode but not remote mode, while a local-bridge mode SSID can be assigned to an AP in either normal mode or remote mode. Valid values: `normal`, `remote`.
	WtpMode pulumi.StringOutput `pulumi:"wtpMode"`
	// WTP profile name to apply to this WTP, AP or FortiAP.
	WtpProfile pulumi.StringOutput `pulumi:"wtpProfile"`
}

// NewWtp registers a new resource with the given unique name, arguments, and options.
func NewWtp(ctx *pulumi.Context,
	name string, args *WtpArgs, opts ...pulumi.ResourceOption) (*Wtp, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.WtpProfile == nil {
		return nil, errors.New("invalid value for required argument 'WtpProfile'")
	}
	if args.LoginPasswd != nil {
		args.LoginPasswd = pulumi.ToSecret(args.LoginPasswd).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"loginPasswd",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Wtp
	err := ctx.RegisterResource("fortios:wirelesscontroller/wtp:Wtp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWtp gets an existing Wtp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWtp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WtpState, opts ...pulumi.ResourceOption) (*Wtp, error) {
	var resource Wtp
	err := ctx.ReadResource("fortios:wirelesscontroller/wtp:Wtp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Wtp resources.
type wtpState struct {
	// Configure how the FortiGate operating as a wireless controller discovers and manages this WTP, AP or FortiAP. Valid values: `discovered`, `disable`, `enable`.
	Admin *string `pulumi:"admin"`
	// Control management access to the managed WTP, FortiAP, or AP. Separate entries with a space.
	Allowaccess *string `pulumi:"allowaccess"`
	// AP local configuration profile name.
	ApcfgProfile *string `pulumi:"apcfgProfile"`
	// Override BLE Major ID.
	BleMajorId *int `pulumi:"bleMajorId"`
	// Override BLE Minor ID.
	BleMinorId *int `pulumi:"bleMinorId"`
	// Bonjour profile name.
	BonjourProfile *string `pulumi:"bonjourProfile"`
	// WTP latitude coordinate.
	CoordinateLatitude *string `pulumi:"coordinateLatitude"`
	// WTP longitude coordinate.
	CoordinateLongitude *string `pulumi:"coordinateLongitude"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Firmware version to provision to this FortiAP on bootup (major.minor.build, i.e. 6.2.1234).
	FirmwareProvision *string `pulumi:"firmwareProvision"`
	// Enable/disable one-time automatic provisioning of the latest firmware version. Valid values: `disable`, `once`.
	FirmwareProvisionLatest *string `pulumi:"firmwareProvisionLatest"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Enable/disable WTP image download. Valid values: `enable`, `disable`.
	ImageDownload *string `pulumi:"imageDownload"`
	// Index (0 - 4294967295).
	Index *int `pulumi:"index"`
	// Method by which IP fragmentation is prevented for CAPWAP tunneled control and data packets (default = tcp-mss-adjust). Valid values: `tcp-mss-adjust`, `icmp-unreachable`.
	IpFragmentPreventing *string `pulumi:"ipFragmentPreventing"`
	// WTP LAN port mapping. The structure of `lan` block is documented below.
	Lan *WtpLan `pulumi:"lan"`
	// Enable to allow the FortiAPs LEDs to light. Disable to keep the LEDs off. You may want to keep the LEDs off so they are not distracting in low light areas etc. Valid values: `enable`, `disable`.
	LedState *string `pulumi:"ledState"`
	// Field for describing the physical location of the WTP, AP or FortiAP.
	Location *string `pulumi:"location"`
	// Set the managed WTP, FortiAP, or AP's administrator password.
	LoginPasswd *string `pulumi:"loginPasswd"`
	// Change or reset the administrator password of a managed WTP, FortiAP or AP (yes, default, or no, default = no). Valid values: `yes`, `default`, `no`.
	LoginPasswdChange *string `pulumi:"loginPasswdChange"`
	// Enable/disable mesh Ethernet bridge when WTP is configured as a mesh branch/leaf AP. Valid values: `default`, `enable`, `disable`.
	MeshBridgeEnable *string `pulumi:"meshBridgeEnable"`
	// WTP, AP or FortiAP configuration name.
	Name *string `pulumi:"name"`
	// Enable to override the WTP profile management access configuration. Valid values: `enable`, `disable`.
	OverrideAllowaccess *string `pulumi:"overrideAllowaccess"`
	// Enable/disable overriding the WTP profile IP fragment prevention setting. Valid values: `enable`, `disable`.
	OverrideIpFragment *string `pulumi:"overrideIpFragment"`
	// Enable to override the WTP profile LAN port setting. Valid values: `enable`, `disable`.
	OverrideLan *string `pulumi:"overrideLan"`
	// Enable to override the profile LED state setting for this FortiAP. You must enable this option to use the led-state command to turn off the FortiAP's LEDs. Valid values: `enable`, `disable`.
	OverrideLedState *string `pulumi:"overrideLedState"`
	// Enable to override the WTP profile login-password (administrator password) setting. Valid values: `enable`, `disable`.
	OverrideLoginPasswdChange *string `pulumi:"overrideLoginPasswdChange"`
	// Enable/disable overriding the WTP profile split tunneling setting. Valid values: `enable`, `disable`.
	OverrideSplitTunnel *string `pulumi:"overrideSplitTunnel"`
	// Enable/disable overriding the wan-port-mode in the WTP profile. Valid values: `enable`, `disable`.
	OverrideWanPortMode *string `pulumi:"overrideWanPortMode"`
	// Purdue Level of this WTP. Valid values: `1`, `1.5`, `2`, `2.5`, `3`, `3.5`, `4`, `5`, `5.5`.
	PurdueLevel *string `pulumi:"purdueLevel"`
	// Configuration options for radio 1. The structure of `radio1` block is documented below.
	Radio1 *WtpRadio1 `pulumi:"radio1"`
	// Configuration options for radio 2. The structure of `radio2` block is documented below.
	Radio2 *WtpRadio2 `pulumi:"radio2"`
	// Configuration options for radio 3. The structure of `radio3` block is documented below.
	Radio3 *WtpRadio3 `pulumi:"radio3"`
	// Configuration options for radio 4. The structure of `radio4` block is documented below.
	Radio4 *WtpRadio4 `pulumi:"radio4"`
	// Region name WTP is associated with.
	Region *string `pulumi:"region"`
	// Relative horizontal region coordinate (between 0 and 1).
	RegionX *string `pulumi:"regionX"`
	// Relative vertical region coordinate (between 0 and 1).
	RegionY *string `pulumi:"regionY"`
	// Enable/disable automatically adding local subnetwork of FortiAP to split-tunneling ACL (default = disable). Valid values: `enable`, `disable`.
	SplitTunnelingAclLocalApSubnet *string `pulumi:"splitTunnelingAclLocalApSubnet"`
	// Split tunneling ACL path is local/tunnel. Valid values: `tunnel`, `local`.
	SplitTunnelingAclPath *string `pulumi:"splitTunnelingAclPath"`
	// Split tunneling ACL filter list. The structure of `splitTunnelingAcl` block is documented below.
	SplitTunnelingAcls []WtpSplitTunnelingAcl `pulumi:"splitTunnelingAcls"`
	// Downlink tunnel MTU in octets. Set the value to either 0 (by default), 576, or 1500.
	TunMtuDownlink *int `pulumi:"tunMtuDownlink"`
	// Uplink tunnel maximum transmission unit (MTU) in octets (eight-bit bytes). Set the value to either 0 (by default), 576, or 1500.
	TunMtuUplink *int `pulumi:"tunMtuUplink"`
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid *string `pulumi:"uuid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable using the FortiAP WAN port as a LAN port. Valid values: `wan-lan`, `wan-only`.
	WanPortMode *string `pulumi:"wanPortMode"`
	// WTP ID.
	WtpId *string `pulumi:"wtpId"`
	// WTP, AP, or FortiAP operating mode; normal (by default) or remote. A tunnel mode SSID can be assigned to an AP in normal mode but not remote mode, while a local-bridge mode SSID can be assigned to an AP in either normal mode or remote mode. Valid values: `normal`, `remote`.
	WtpMode *string `pulumi:"wtpMode"`
	// WTP profile name to apply to this WTP, AP or FortiAP.
	WtpProfile *string `pulumi:"wtpProfile"`
}

type WtpState struct {
	// Configure how the FortiGate operating as a wireless controller discovers and manages this WTP, AP or FortiAP. Valid values: `discovered`, `disable`, `enable`.
	Admin pulumi.StringPtrInput
	// Control management access to the managed WTP, FortiAP, or AP. Separate entries with a space.
	Allowaccess pulumi.StringPtrInput
	// AP local configuration profile name.
	ApcfgProfile pulumi.StringPtrInput
	// Override BLE Major ID.
	BleMajorId pulumi.IntPtrInput
	// Override BLE Minor ID.
	BleMinorId pulumi.IntPtrInput
	// Bonjour profile name.
	BonjourProfile pulumi.StringPtrInput
	// WTP latitude coordinate.
	CoordinateLatitude pulumi.StringPtrInput
	// WTP longitude coordinate.
	CoordinateLongitude pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Firmware version to provision to this FortiAP on bootup (major.minor.build, i.e. 6.2.1234).
	FirmwareProvision pulumi.StringPtrInput
	// Enable/disable one-time automatic provisioning of the latest firmware version. Valid values: `disable`, `once`.
	FirmwareProvisionLatest pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Enable/disable WTP image download. Valid values: `enable`, `disable`.
	ImageDownload pulumi.StringPtrInput
	// Index (0 - 4294967295).
	Index pulumi.IntPtrInput
	// Method by which IP fragmentation is prevented for CAPWAP tunneled control and data packets (default = tcp-mss-adjust). Valid values: `tcp-mss-adjust`, `icmp-unreachable`.
	IpFragmentPreventing pulumi.StringPtrInput
	// WTP LAN port mapping. The structure of `lan` block is documented below.
	Lan WtpLanPtrInput
	// Enable to allow the FortiAPs LEDs to light. Disable to keep the LEDs off. You may want to keep the LEDs off so they are not distracting in low light areas etc. Valid values: `enable`, `disable`.
	LedState pulumi.StringPtrInput
	// Field for describing the physical location of the WTP, AP or FortiAP.
	Location pulumi.StringPtrInput
	// Set the managed WTP, FortiAP, or AP's administrator password.
	LoginPasswd pulumi.StringPtrInput
	// Change or reset the administrator password of a managed WTP, FortiAP or AP (yes, default, or no, default = no). Valid values: `yes`, `default`, `no`.
	LoginPasswdChange pulumi.StringPtrInput
	// Enable/disable mesh Ethernet bridge when WTP is configured as a mesh branch/leaf AP. Valid values: `default`, `enable`, `disable`.
	MeshBridgeEnable pulumi.StringPtrInput
	// WTP, AP or FortiAP configuration name.
	Name pulumi.StringPtrInput
	// Enable to override the WTP profile management access configuration. Valid values: `enable`, `disable`.
	OverrideAllowaccess pulumi.StringPtrInput
	// Enable/disable overriding the WTP profile IP fragment prevention setting. Valid values: `enable`, `disable`.
	OverrideIpFragment pulumi.StringPtrInput
	// Enable to override the WTP profile LAN port setting. Valid values: `enable`, `disable`.
	OverrideLan pulumi.StringPtrInput
	// Enable to override the profile LED state setting for this FortiAP. You must enable this option to use the led-state command to turn off the FortiAP's LEDs. Valid values: `enable`, `disable`.
	OverrideLedState pulumi.StringPtrInput
	// Enable to override the WTP profile login-password (administrator password) setting. Valid values: `enable`, `disable`.
	OverrideLoginPasswdChange pulumi.StringPtrInput
	// Enable/disable overriding the WTP profile split tunneling setting. Valid values: `enable`, `disable`.
	OverrideSplitTunnel pulumi.StringPtrInput
	// Enable/disable overriding the wan-port-mode in the WTP profile. Valid values: `enable`, `disable`.
	OverrideWanPortMode pulumi.StringPtrInput
	// Purdue Level of this WTP. Valid values: `1`, `1.5`, `2`, `2.5`, `3`, `3.5`, `4`, `5`, `5.5`.
	PurdueLevel pulumi.StringPtrInput
	// Configuration options for radio 1. The structure of `radio1` block is documented below.
	Radio1 WtpRadio1PtrInput
	// Configuration options for radio 2. The structure of `radio2` block is documented below.
	Radio2 WtpRadio2PtrInput
	// Configuration options for radio 3. The structure of `radio3` block is documented below.
	Radio3 WtpRadio3PtrInput
	// Configuration options for radio 4. The structure of `radio4` block is documented below.
	Radio4 WtpRadio4PtrInput
	// Region name WTP is associated with.
	Region pulumi.StringPtrInput
	// Relative horizontal region coordinate (between 0 and 1).
	RegionX pulumi.StringPtrInput
	// Relative vertical region coordinate (between 0 and 1).
	RegionY pulumi.StringPtrInput
	// Enable/disable automatically adding local subnetwork of FortiAP to split-tunneling ACL (default = disable). Valid values: `enable`, `disable`.
	SplitTunnelingAclLocalApSubnet pulumi.StringPtrInput
	// Split tunneling ACL path is local/tunnel. Valid values: `tunnel`, `local`.
	SplitTunnelingAclPath pulumi.StringPtrInput
	// Split tunneling ACL filter list. The structure of `splitTunnelingAcl` block is documented below.
	SplitTunnelingAcls WtpSplitTunnelingAclArrayInput
	// Downlink tunnel MTU in octets. Set the value to either 0 (by default), 576, or 1500.
	TunMtuDownlink pulumi.IntPtrInput
	// Uplink tunnel maximum transmission unit (MTU) in octets (eight-bit bytes). Set the value to either 0 (by default), 576, or 1500.
	TunMtuUplink pulumi.IntPtrInput
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Enable/disable using the FortiAP WAN port as a LAN port. Valid values: `wan-lan`, `wan-only`.
	WanPortMode pulumi.StringPtrInput
	// WTP ID.
	WtpId pulumi.StringPtrInput
	// WTP, AP, or FortiAP operating mode; normal (by default) or remote. A tunnel mode SSID can be assigned to an AP in normal mode but not remote mode, while a local-bridge mode SSID can be assigned to an AP in either normal mode or remote mode. Valid values: `normal`, `remote`.
	WtpMode pulumi.StringPtrInput
	// WTP profile name to apply to this WTP, AP or FortiAP.
	WtpProfile pulumi.StringPtrInput
}

func (WtpState) ElementType() reflect.Type {
	return reflect.TypeOf((*wtpState)(nil)).Elem()
}

type wtpArgs struct {
	// Configure how the FortiGate operating as a wireless controller discovers and manages this WTP, AP or FortiAP. Valid values: `discovered`, `disable`, `enable`.
	Admin *string `pulumi:"admin"`
	// Control management access to the managed WTP, FortiAP, or AP. Separate entries with a space.
	Allowaccess *string `pulumi:"allowaccess"`
	// AP local configuration profile name.
	ApcfgProfile *string `pulumi:"apcfgProfile"`
	// Override BLE Major ID.
	BleMajorId *int `pulumi:"bleMajorId"`
	// Override BLE Minor ID.
	BleMinorId *int `pulumi:"bleMinorId"`
	// Bonjour profile name.
	BonjourProfile *string `pulumi:"bonjourProfile"`
	// WTP latitude coordinate.
	CoordinateLatitude *string `pulumi:"coordinateLatitude"`
	// WTP longitude coordinate.
	CoordinateLongitude *string `pulumi:"coordinateLongitude"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Firmware version to provision to this FortiAP on bootup (major.minor.build, i.e. 6.2.1234).
	FirmwareProvision *string `pulumi:"firmwareProvision"`
	// Enable/disable one-time automatic provisioning of the latest firmware version. Valid values: `disable`, `once`.
	FirmwareProvisionLatest *string `pulumi:"firmwareProvisionLatest"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Enable/disable WTP image download. Valid values: `enable`, `disable`.
	ImageDownload *string `pulumi:"imageDownload"`
	// Index (0 - 4294967295).
	Index *int `pulumi:"index"`
	// Method by which IP fragmentation is prevented for CAPWAP tunneled control and data packets (default = tcp-mss-adjust). Valid values: `tcp-mss-adjust`, `icmp-unreachable`.
	IpFragmentPreventing *string `pulumi:"ipFragmentPreventing"`
	// WTP LAN port mapping. The structure of `lan` block is documented below.
	Lan *WtpLan `pulumi:"lan"`
	// Enable to allow the FortiAPs LEDs to light. Disable to keep the LEDs off. You may want to keep the LEDs off so they are not distracting in low light areas etc. Valid values: `enable`, `disable`.
	LedState *string `pulumi:"ledState"`
	// Field for describing the physical location of the WTP, AP or FortiAP.
	Location *string `pulumi:"location"`
	// Set the managed WTP, FortiAP, or AP's administrator password.
	LoginPasswd *string `pulumi:"loginPasswd"`
	// Change or reset the administrator password of a managed WTP, FortiAP or AP (yes, default, or no, default = no). Valid values: `yes`, `default`, `no`.
	LoginPasswdChange *string `pulumi:"loginPasswdChange"`
	// Enable/disable mesh Ethernet bridge when WTP is configured as a mesh branch/leaf AP. Valid values: `default`, `enable`, `disable`.
	MeshBridgeEnable *string `pulumi:"meshBridgeEnable"`
	// WTP, AP or FortiAP configuration name.
	Name *string `pulumi:"name"`
	// Enable to override the WTP profile management access configuration. Valid values: `enable`, `disable`.
	OverrideAllowaccess *string `pulumi:"overrideAllowaccess"`
	// Enable/disable overriding the WTP profile IP fragment prevention setting. Valid values: `enable`, `disable`.
	OverrideIpFragment *string `pulumi:"overrideIpFragment"`
	// Enable to override the WTP profile LAN port setting. Valid values: `enable`, `disable`.
	OverrideLan *string `pulumi:"overrideLan"`
	// Enable to override the profile LED state setting for this FortiAP. You must enable this option to use the led-state command to turn off the FortiAP's LEDs. Valid values: `enable`, `disable`.
	OverrideLedState *string `pulumi:"overrideLedState"`
	// Enable to override the WTP profile login-password (administrator password) setting. Valid values: `enable`, `disable`.
	OverrideLoginPasswdChange *string `pulumi:"overrideLoginPasswdChange"`
	// Enable/disable overriding the WTP profile split tunneling setting. Valid values: `enable`, `disable`.
	OverrideSplitTunnel *string `pulumi:"overrideSplitTunnel"`
	// Enable/disable overriding the wan-port-mode in the WTP profile. Valid values: `enable`, `disable`.
	OverrideWanPortMode *string `pulumi:"overrideWanPortMode"`
	// Purdue Level of this WTP. Valid values: `1`, `1.5`, `2`, `2.5`, `3`, `3.5`, `4`, `5`, `5.5`.
	PurdueLevel *string `pulumi:"purdueLevel"`
	// Configuration options for radio 1. The structure of `radio1` block is documented below.
	Radio1 *WtpRadio1 `pulumi:"radio1"`
	// Configuration options for radio 2. The structure of `radio2` block is documented below.
	Radio2 *WtpRadio2 `pulumi:"radio2"`
	// Configuration options for radio 3. The structure of `radio3` block is documented below.
	Radio3 *WtpRadio3 `pulumi:"radio3"`
	// Configuration options for radio 4. The structure of `radio4` block is documented below.
	Radio4 *WtpRadio4 `pulumi:"radio4"`
	// Region name WTP is associated with.
	Region *string `pulumi:"region"`
	// Relative horizontal region coordinate (between 0 and 1).
	RegionX *string `pulumi:"regionX"`
	// Relative vertical region coordinate (between 0 and 1).
	RegionY *string `pulumi:"regionY"`
	// Enable/disable automatically adding local subnetwork of FortiAP to split-tunneling ACL (default = disable). Valid values: `enable`, `disable`.
	SplitTunnelingAclLocalApSubnet *string `pulumi:"splitTunnelingAclLocalApSubnet"`
	// Split tunneling ACL path is local/tunnel. Valid values: `tunnel`, `local`.
	SplitTunnelingAclPath *string `pulumi:"splitTunnelingAclPath"`
	// Split tunneling ACL filter list. The structure of `splitTunnelingAcl` block is documented below.
	SplitTunnelingAcls []WtpSplitTunnelingAcl `pulumi:"splitTunnelingAcls"`
	// Downlink tunnel MTU in octets. Set the value to either 0 (by default), 576, or 1500.
	TunMtuDownlink *int `pulumi:"tunMtuDownlink"`
	// Uplink tunnel maximum transmission unit (MTU) in octets (eight-bit bytes). Set the value to either 0 (by default), 576, or 1500.
	TunMtuUplink *int `pulumi:"tunMtuUplink"`
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid *string `pulumi:"uuid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable using the FortiAP WAN port as a LAN port. Valid values: `wan-lan`, `wan-only`.
	WanPortMode *string `pulumi:"wanPortMode"`
	// WTP ID.
	WtpId *string `pulumi:"wtpId"`
	// WTP, AP, or FortiAP operating mode; normal (by default) or remote. A tunnel mode SSID can be assigned to an AP in normal mode but not remote mode, while a local-bridge mode SSID can be assigned to an AP in either normal mode or remote mode. Valid values: `normal`, `remote`.
	WtpMode *string `pulumi:"wtpMode"`
	// WTP profile name to apply to this WTP, AP or FortiAP.
	WtpProfile string `pulumi:"wtpProfile"`
}

// The set of arguments for constructing a Wtp resource.
type WtpArgs struct {
	// Configure how the FortiGate operating as a wireless controller discovers and manages this WTP, AP or FortiAP. Valid values: `discovered`, `disable`, `enable`.
	Admin pulumi.StringPtrInput
	// Control management access to the managed WTP, FortiAP, or AP. Separate entries with a space.
	Allowaccess pulumi.StringPtrInput
	// AP local configuration profile name.
	ApcfgProfile pulumi.StringPtrInput
	// Override BLE Major ID.
	BleMajorId pulumi.IntPtrInput
	// Override BLE Minor ID.
	BleMinorId pulumi.IntPtrInput
	// Bonjour profile name.
	BonjourProfile pulumi.StringPtrInput
	// WTP latitude coordinate.
	CoordinateLatitude pulumi.StringPtrInput
	// WTP longitude coordinate.
	CoordinateLongitude pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Firmware version to provision to this FortiAP on bootup (major.minor.build, i.e. 6.2.1234).
	FirmwareProvision pulumi.StringPtrInput
	// Enable/disable one-time automatic provisioning of the latest firmware version. Valid values: `disable`, `once`.
	FirmwareProvisionLatest pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Enable/disable WTP image download. Valid values: `enable`, `disable`.
	ImageDownload pulumi.StringPtrInput
	// Index (0 - 4294967295).
	Index pulumi.IntPtrInput
	// Method by which IP fragmentation is prevented for CAPWAP tunneled control and data packets (default = tcp-mss-adjust). Valid values: `tcp-mss-adjust`, `icmp-unreachable`.
	IpFragmentPreventing pulumi.StringPtrInput
	// WTP LAN port mapping. The structure of `lan` block is documented below.
	Lan WtpLanPtrInput
	// Enable to allow the FortiAPs LEDs to light. Disable to keep the LEDs off. You may want to keep the LEDs off so they are not distracting in low light areas etc. Valid values: `enable`, `disable`.
	LedState pulumi.StringPtrInput
	// Field for describing the physical location of the WTP, AP or FortiAP.
	Location pulumi.StringPtrInput
	// Set the managed WTP, FortiAP, or AP's administrator password.
	LoginPasswd pulumi.StringPtrInput
	// Change or reset the administrator password of a managed WTP, FortiAP or AP (yes, default, or no, default = no). Valid values: `yes`, `default`, `no`.
	LoginPasswdChange pulumi.StringPtrInput
	// Enable/disable mesh Ethernet bridge when WTP is configured as a mesh branch/leaf AP. Valid values: `default`, `enable`, `disable`.
	MeshBridgeEnable pulumi.StringPtrInput
	// WTP, AP or FortiAP configuration name.
	Name pulumi.StringPtrInput
	// Enable to override the WTP profile management access configuration. Valid values: `enable`, `disable`.
	OverrideAllowaccess pulumi.StringPtrInput
	// Enable/disable overriding the WTP profile IP fragment prevention setting. Valid values: `enable`, `disable`.
	OverrideIpFragment pulumi.StringPtrInput
	// Enable to override the WTP profile LAN port setting. Valid values: `enable`, `disable`.
	OverrideLan pulumi.StringPtrInput
	// Enable to override the profile LED state setting for this FortiAP. You must enable this option to use the led-state command to turn off the FortiAP's LEDs. Valid values: `enable`, `disable`.
	OverrideLedState pulumi.StringPtrInput
	// Enable to override the WTP profile login-password (administrator password) setting. Valid values: `enable`, `disable`.
	OverrideLoginPasswdChange pulumi.StringPtrInput
	// Enable/disable overriding the WTP profile split tunneling setting. Valid values: `enable`, `disable`.
	OverrideSplitTunnel pulumi.StringPtrInput
	// Enable/disable overriding the wan-port-mode in the WTP profile. Valid values: `enable`, `disable`.
	OverrideWanPortMode pulumi.StringPtrInput
	// Purdue Level of this WTP. Valid values: `1`, `1.5`, `2`, `2.5`, `3`, `3.5`, `4`, `5`, `5.5`.
	PurdueLevel pulumi.StringPtrInput
	// Configuration options for radio 1. The structure of `radio1` block is documented below.
	Radio1 WtpRadio1PtrInput
	// Configuration options for radio 2. The structure of `radio2` block is documented below.
	Radio2 WtpRadio2PtrInput
	// Configuration options for radio 3. The structure of `radio3` block is documented below.
	Radio3 WtpRadio3PtrInput
	// Configuration options for radio 4. The structure of `radio4` block is documented below.
	Radio4 WtpRadio4PtrInput
	// Region name WTP is associated with.
	Region pulumi.StringPtrInput
	// Relative horizontal region coordinate (between 0 and 1).
	RegionX pulumi.StringPtrInput
	// Relative vertical region coordinate (between 0 and 1).
	RegionY pulumi.StringPtrInput
	// Enable/disable automatically adding local subnetwork of FortiAP to split-tunneling ACL (default = disable). Valid values: `enable`, `disable`.
	SplitTunnelingAclLocalApSubnet pulumi.StringPtrInput
	// Split tunneling ACL path is local/tunnel. Valid values: `tunnel`, `local`.
	SplitTunnelingAclPath pulumi.StringPtrInput
	// Split tunneling ACL filter list. The structure of `splitTunnelingAcl` block is documented below.
	SplitTunnelingAcls WtpSplitTunnelingAclArrayInput
	// Downlink tunnel MTU in octets. Set the value to either 0 (by default), 576, or 1500.
	TunMtuDownlink pulumi.IntPtrInput
	// Uplink tunnel maximum transmission unit (MTU) in octets (eight-bit bytes). Set the value to either 0 (by default), 576, or 1500.
	TunMtuUplink pulumi.IntPtrInput
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Enable/disable using the FortiAP WAN port as a LAN port. Valid values: `wan-lan`, `wan-only`.
	WanPortMode pulumi.StringPtrInput
	// WTP ID.
	WtpId pulumi.StringPtrInput
	// WTP, AP, or FortiAP operating mode; normal (by default) or remote. A tunnel mode SSID can be assigned to an AP in normal mode but not remote mode, while a local-bridge mode SSID can be assigned to an AP in either normal mode or remote mode. Valid values: `normal`, `remote`.
	WtpMode pulumi.StringPtrInput
	// WTP profile name to apply to this WTP, AP or FortiAP.
	WtpProfile pulumi.StringInput
}

func (WtpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*wtpArgs)(nil)).Elem()
}

type WtpInput interface {
	pulumi.Input

	ToWtpOutput() WtpOutput
	ToWtpOutputWithContext(ctx context.Context) WtpOutput
}

func (*Wtp) ElementType() reflect.Type {
	return reflect.TypeOf((**Wtp)(nil)).Elem()
}

func (i *Wtp) ToWtpOutput() WtpOutput {
	return i.ToWtpOutputWithContext(context.Background())
}

func (i *Wtp) ToWtpOutputWithContext(ctx context.Context) WtpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WtpOutput)
}

// WtpArrayInput is an input type that accepts WtpArray and WtpArrayOutput values.
// You can construct a concrete instance of `WtpArrayInput` via:
//
//	WtpArray{ WtpArgs{...} }
type WtpArrayInput interface {
	pulumi.Input

	ToWtpArrayOutput() WtpArrayOutput
	ToWtpArrayOutputWithContext(context.Context) WtpArrayOutput
}

type WtpArray []WtpInput

func (WtpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Wtp)(nil)).Elem()
}

func (i WtpArray) ToWtpArrayOutput() WtpArrayOutput {
	return i.ToWtpArrayOutputWithContext(context.Background())
}

func (i WtpArray) ToWtpArrayOutputWithContext(ctx context.Context) WtpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WtpArrayOutput)
}

// WtpMapInput is an input type that accepts WtpMap and WtpMapOutput values.
// You can construct a concrete instance of `WtpMapInput` via:
//
//	WtpMap{ "key": WtpArgs{...} }
type WtpMapInput interface {
	pulumi.Input

	ToWtpMapOutput() WtpMapOutput
	ToWtpMapOutputWithContext(context.Context) WtpMapOutput
}

type WtpMap map[string]WtpInput

func (WtpMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Wtp)(nil)).Elem()
}

func (i WtpMap) ToWtpMapOutput() WtpMapOutput {
	return i.ToWtpMapOutputWithContext(context.Background())
}

func (i WtpMap) ToWtpMapOutputWithContext(ctx context.Context) WtpMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WtpMapOutput)
}

type WtpOutput struct{ *pulumi.OutputState }

func (WtpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Wtp)(nil)).Elem()
}

func (o WtpOutput) ToWtpOutput() WtpOutput {
	return o
}

func (o WtpOutput) ToWtpOutputWithContext(ctx context.Context) WtpOutput {
	return o
}

// Configure how the FortiGate operating as a wireless controller discovers and manages this WTP, AP or FortiAP. Valid values: `discovered`, `disable`, `enable`.
func (o WtpOutput) Admin() pulumi.StringOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringOutput { return v.Admin }).(pulumi.StringOutput)
}

// Control management access to the managed WTP, FortiAP, or AP. Separate entries with a space.
func (o WtpOutput) Allowaccess() pulumi.StringOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringOutput { return v.Allowaccess }).(pulumi.StringOutput)
}

// AP local configuration profile name.
func (o WtpOutput) ApcfgProfile() pulumi.StringOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringOutput { return v.ApcfgProfile }).(pulumi.StringOutput)
}

// Override BLE Major ID.
func (o WtpOutput) BleMajorId() pulumi.IntOutput {
	return o.ApplyT(func(v *Wtp) pulumi.IntOutput { return v.BleMajorId }).(pulumi.IntOutput)
}

// Override BLE Minor ID.
func (o WtpOutput) BleMinorId() pulumi.IntOutput {
	return o.ApplyT(func(v *Wtp) pulumi.IntOutput { return v.BleMinorId }).(pulumi.IntOutput)
}

// Bonjour profile name.
func (o WtpOutput) BonjourProfile() pulumi.StringOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringOutput { return v.BonjourProfile }).(pulumi.StringOutput)
}

// WTP latitude coordinate.
func (o WtpOutput) CoordinateLatitude() pulumi.StringOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringOutput { return v.CoordinateLatitude }).(pulumi.StringOutput)
}

// WTP longitude coordinate.
func (o WtpOutput) CoordinateLongitude() pulumi.StringOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringOutput { return v.CoordinateLongitude }).(pulumi.StringOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o WtpOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Firmware version to provision to this FortiAP on bootup (major.minor.build, i.e. 6.2.1234).
func (o WtpOutput) FirmwareProvision() pulumi.StringOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringOutput { return v.FirmwareProvision }).(pulumi.StringOutput)
}

// Enable/disable one-time automatic provisioning of the latest firmware version. Valid values: `disable`, `once`.
func (o WtpOutput) FirmwareProvisionLatest() pulumi.StringOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringOutput { return v.FirmwareProvisionLatest }).(pulumi.StringOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o WtpOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Enable/disable WTP image download. Valid values: `enable`, `disable`.
func (o WtpOutput) ImageDownload() pulumi.StringOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringOutput { return v.ImageDownload }).(pulumi.StringOutput)
}

// Index (0 - 4294967295).
func (o WtpOutput) Index() pulumi.IntOutput {
	return o.ApplyT(func(v *Wtp) pulumi.IntOutput { return v.Index }).(pulumi.IntOutput)
}

// Method by which IP fragmentation is prevented for CAPWAP tunneled control and data packets (default = tcp-mss-adjust). Valid values: `tcp-mss-adjust`, `icmp-unreachable`.
func (o WtpOutput) IpFragmentPreventing() pulumi.StringOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringOutput { return v.IpFragmentPreventing }).(pulumi.StringOutput)
}

// WTP LAN port mapping. The structure of `lan` block is documented below.
func (o WtpOutput) Lan() WtpLanOutput {
	return o.ApplyT(func(v *Wtp) WtpLanOutput { return v.Lan }).(WtpLanOutput)
}

// Enable to allow the FortiAPs LEDs to light. Disable to keep the LEDs off. You may want to keep the LEDs off so they are not distracting in low light areas etc. Valid values: `enable`, `disable`.
func (o WtpOutput) LedState() pulumi.StringOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringOutput { return v.LedState }).(pulumi.StringOutput)
}

// Field for describing the physical location of the WTP, AP or FortiAP.
func (o WtpOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Set the managed WTP, FortiAP, or AP's administrator password.
func (o WtpOutput) LoginPasswd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringPtrOutput { return v.LoginPasswd }).(pulumi.StringPtrOutput)
}

// Change or reset the administrator password of a managed WTP, FortiAP or AP (yes, default, or no, default = no). Valid values: `yes`, `default`, `no`.
func (o WtpOutput) LoginPasswdChange() pulumi.StringOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringOutput { return v.LoginPasswdChange }).(pulumi.StringOutput)
}

// Enable/disable mesh Ethernet bridge when WTP is configured as a mesh branch/leaf AP. Valid values: `default`, `enable`, `disable`.
func (o WtpOutput) MeshBridgeEnable() pulumi.StringOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringOutput { return v.MeshBridgeEnable }).(pulumi.StringOutput)
}

// WTP, AP or FortiAP configuration name.
func (o WtpOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Enable to override the WTP profile management access configuration. Valid values: `enable`, `disable`.
func (o WtpOutput) OverrideAllowaccess() pulumi.StringOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringOutput { return v.OverrideAllowaccess }).(pulumi.StringOutput)
}

// Enable/disable overriding the WTP profile IP fragment prevention setting. Valid values: `enable`, `disable`.
func (o WtpOutput) OverrideIpFragment() pulumi.StringOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringOutput { return v.OverrideIpFragment }).(pulumi.StringOutput)
}

// Enable to override the WTP profile LAN port setting. Valid values: `enable`, `disable`.
func (o WtpOutput) OverrideLan() pulumi.StringOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringOutput { return v.OverrideLan }).(pulumi.StringOutput)
}

// Enable to override the profile LED state setting for this FortiAP. You must enable this option to use the led-state command to turn off the FortiAP's LEDs. Valid values: `enable`, `disable`.
func (o WtpOutput) OverrideLedState() pulumi.StringOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringOutput { return v.OverrideLedState }).(pulumi.StringOutput)
}

// Enable to override the WTP profile login-password (administrator password) setting. Valid values: `enable`, `disable`.
func (o WtpOutput) OverrideLoginPasswdChange() pulumi.StringOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringOutput { return v.OverrideLoginPasswdChange }).(pulumi.StringOutput)
}

// Enable/disable overriding the WTP profile split tunneling setting. Valid values: `enable`, `disable`.
func (o WtpOutput) OverrideSplitTunnel() pulumi.StringOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringOutput { return v.OverrideSplitTunnel }).(pulumi.StringOutput)
}

// Enable/disable overriding the wan-port-mode in the WTP profile. Valid values: `enable`, `disable`.
func (o WtpOutput) OverrideWanPortMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringOutput { return v.OverrideWanPortMode }).(pulumi.StringOutput)
}

// Purdue Level of this WTP. Valid values: `1`, `1.5`, `2`, `2.5`, `3`, `3.5`, `4`, `5`, `5.5`.
func (o WtpOutput) PurdueLevel() pulumi.StringOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringOutput { return v.PurdueLevel }).(pulumi.StringOutput)
}

// Configuration options for radio 1. The structure of `radio1` block is documented below.
func (o WtpOutput) Radio1() WtpRadio1Output {
	return o.ApplyT(func(v *Wtp) WtpRadio1Output { return v.Radio1 }).(WtpRadio1Output)
}

// Configuration options for radio 2. The structure of `radio2` block is documented below.
func (o WtpOutput) Radio2() WtpRadio2Output {
	return o.ApplyT(func(v *Wtp) WtpRadio2Output { return v.Radio2 }).(WtpRadio2Output)
}

// Configuration options for radio 3. The structure of `radio3` block is documented below.
func (o WtpOutput) Radio3() WtpRadio3Output {
	return o.ApplyT(func(v *Wtp) WtpRadio3Output { return v.Radio3 }).(WtpRadio3Output)
}

// Configuration options for radio 4. The structure of `radio4` block is documented below.
func (o WtpOutput) Radio4() WtpRadio4Output {
	return o.ApplyT(func(v *Wtp) WtpRadio4Output { return v.Radio4 }).(WtpRadio4Output)
}

// Region name WTP is associated with.
func (o WtpOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Relative horizontal region coordinate (between 0 and 1).
func (o WtpOutput) RegionX() pulumi.StringOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringOutput { return v.RegionX }).(pulumi.StringOutput)
}

// Relative vertical region coordinate (between 0 and 1).
func (o WtpOutput) RegionY() pulumi.StringOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringOutput { return v.RegionY }).(pulumi.StringOutput)
}

// Enable/disable automatically adding local subnetwork of FortiAP to split-tunneling ACL (default = disable). Valid values: `enable`, `disable`.
func (o WtpOutput) SplitTunnelingAclLocalApSubnet() pulumi.StringOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringOutput { return v.SplitTunnelingAclLocalApSubnet }).(pulumi.StringOutput)
}

// Split tunneling ACL path is local/tunnel. Valid values: `tunnel`, `local`.
func (o WtpOutput) SplitTunnelingAclPath() pulumi.StringOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringOutput { return v.SplitTunnelingAclPath }).(pulumi.StringOutput)
}

// Split tunneling ACL filter list. The structure of `splitTunnelingAcl` block is documented below.
func (o WtpOutput) SplitTunnelingAcls() WtpSplitTunnelingAclArrayOutput {
	return o.ApplyT(func(v *Wtp) WtpSplitTunnelingAclArrayOutput { return v.SplitTunnelingAcls }).(WtpSplitTunnelingAclArrayOutput)
}

// Downlink tunnel MTU in octets. Set the value to either 0 (by default), 576, or 1500.
func (o WtpOutput) TunMtuDownlink() pulumi.IntOutput {
	return o.ApplyT(func(v *Wtp) pulumi.IntOutput { return v.TunMtuDownlink }).(pulumi.IntOutput)
}

// Uplink tunnel maximum transmission unit (MTU) in octets (eight-bit bytes). Set the value to either 0 (by default), 576, or 1500.
func (o WtpOutput) TunMtuUplink() pulumi.IntOutput {
	return o.ApplyT(func(v *Wtp) pulumi.IntOutput { return v.TunMtuUplink }).(pulumi.IntOutput)
}

// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
func (o WtpOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringOutput { return v.Uuid }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o WtpOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// Enable/disable using the FortiAP WAN port as a LAN port. Valid values: `wan-lan`, `wan-only`.
func (o WtpOutput) WanPortMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringOutput { return v.WanPortMode }).(pulumi.StringOutput)
}

// WTP ID.
func (o WtpOutput) WtpId() pulumi.StringOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringOutput { return v.WtpId }).(pulumi.StringOutput)
}

// WTP, AP, or FortiAP operating mode; normal (by default) or remote. A tunnel mode SSID can be assigned to an AP in normal mode but not remote mode, while a local-bridge mode SSID can be assigned to an AP in either normal mode or remote mode. Valid values: `normal`, `remote`.
func (o WtpOutput) WtpMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringOutput { return v.WtpMode }).(pulumi.StringOutput)
}

// WTP profile name to apply to this WTP, AP or FortiAP.
func (o WtpOutput) WtpProfile() pulumi.StringOutput {
	return o.ApplyT(func(v *Wtp) pulumi.StringOutput { return v.WtpProfile }).(pulumi.StringOutput)
}

type WtpArrayOutput struct{ *pulumi.OutputState }

func (WtpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Wtp)(nil)).Elem()
}

func (o WtpArrayOutput) ToWtpArrayOutput() WtpArrayOutput {
	return o
}

func (o WtpArrayOutput) ToWtpArrayOutputWithContext(ctx context.Context) WtpArrayOutput {
	return o
}

func (o WtpArrayOutput) Index(i pulumi.IntInput) WtpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Wtp {
		return vs[0].([]*Wtp)[vs[1].(int)]
	}).(WtpOutput)
}

type WtpMapOutput struct{ *pulumi.OutputState }

func (WtpMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Wtp)(nil)).Elem()
}

func (o WtpMapOutput) ToWtpMapOutput() WtpMapOutput {
	return o
}

func (o WtpMapOutput) ToWtpMapOutputWithContext(ctx context.Context) WtpMapOutput {
	return o
}

func (o WtpMapOutput) MapIndex(k pulumi.StringInput) WtpOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Wtp {
		return vs[0].(map[string]*Wtp)[vs[1].(string)]
	}).(WtpOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WtpInput)(nil)).Elem(), &Wtp{})
	pulumi.RegisterInputType(reflect.TypeOf((*WtpArrayInput)(nil)).Elem(), WtpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WtpMapInput)(nil)).Elem(), WtpMap{})
	pulumi.RegisterOutputType(WtpOutput{})
	pulumi.RegisterOutputType(WtpArrayOutput{})
	pulumi.RegisterOutputType(WtpMapOutput{})
}
