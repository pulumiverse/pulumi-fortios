// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wirelesscontroller

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure SNMP. Applies to FortiOS Version `>= 6.2.4`.
//
// ## Import
//
// WirelessController Snmp can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:wirelesscontroller/snmp:Snmp labelname WirelessControllerSnmp
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:wirelesscontroller/snmp:Snmp labelname WirelessControllerSnmp
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Snmp struct {
	pulumi.CustomResourceState

	// SNMP Community Configuration. The structure of `community` block is documented below.
	Communities SnmpCommunityArrayOutput `pulumi:"communities"`
	// Contact Information.
	ContactInfo pulumi.StringOutput `pulumi:"contactInfo"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// AC SNMP engineId string (maximum 24 characters).
	EngineId pulumi.StringOutput `pulumi:"engineId"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// CPU usage when trap is sent.
	TrapHighCpuThreshold pulumi.IntOutput `pulumi:"trapHighCpuThreshold"`
	// Memory usage when trap is sent.
	TrapHighMemThreshold pulumi.IntOutput `pulumi:"trapHighMemThreshold"`
	// SNMP User Configuration. The structure of `user` block is documented below.
	Users SnmpUserArrayOutput `pulumi:"users"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSnmp registers a new resource with the given unique name, arguments, and options.
func NewSnmp(ctx *pulumi.Context,
	name string, args *SnmpArgs, opts ...pulumi.ResourceOption) (*Snmp, error) {
	if args == nil {
		args = &SnmpArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Snmp
	err := ctx.RegisterResource("fortios:wirelesscontroller/snmp:Snmp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSnmp gets an existing Snmp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSnmp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SnmpState, opts ...pulumi.ResourceOption) (*Snmp, error) {
	var resource Snmp
	err := ctx.ReadResource("fortios:wirelesscontroller/snmp:Snmp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Snmp resources.
type snmpState struct {
	// SNMP Community Configuration. The structure of `community` block is documented below.
	Communities []SnmpCommunity `pulumi:"communities"`
	// Contact Information.
	ContactInfo *string `pulumi:"contactInfo"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// AC SNMP engineId string (maximum 24 characters).
	EngineId *string `pulumi:"engineId"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// CPU usage when trap is sent.
	TrapHighCpuThreshold *int `pulumi:"trapHighCpuThreshold"`
	// Memory usage when trap is sent.
	TrapHighMemThreshold *int `pulumi:"trapHighMemThreshold"`
	// SNMP User Configuration. The structure of `user` block is documented below.
	Users []SnmpUser `pulumi:"users"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SnmpState struct {
	// SNMP Community Configuration. The structure of `community` block is documented below.
	Communities SnmpCommunityArrayInput
	// Contact Information.
	ContactInfo pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// AC SNMP engineId string (maximum 24 characters).
	EngineId pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// CPU usage when trap is sent.
	TrapHighCpuThreshold pulumi.IntPtrInput
	// Memory usage when trap is sent.
	TrapHighMemThreshold pulumi.IntPtrInput
	// SNMP User Configuration. The structure of `user` block is documented below.
	Users SnmpUserArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SnmpState) ElementType() reflect.Type {
	return reflect.TypeOf((*snmpState)(nil)).Elem()
}

type snmpArgs struct {
	// SNMP Community Configuration. The structure of `community` block is documented below.
	Communities []SnmpCommunity `pulumi:"communities"`
	// Contact Information.
	ContactInfo *string `pulumi:"contactInfo"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// AC SNMP engineId string (maximum 24 characters).
	EngineId *string `pulumi:"engineId"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// CPU usage when trap is sent.
	TrapHighCpuThreshold *int `pulumi:"trapHighCpuThreshold"`
	// Memory usage when trap is sent.
	TrapHighMemThreshold *int `pulumi:"trapHighMemThreshold"`
	// SNMP User Configuration. The structure of `user` block is documented below.
	Users []SnmpUser `pulumi:"users"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Snmp resource.
type SnmpArgs struct {
	// SNMP Community Configuration. The structure of `community` block is documented below.
	Communities SnmpCommunityArrayInput
	// Contact Information.
	ContactInfo pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// AC SNMP engineId string (maximum 24 characters).
	EngineId pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// CPU usage when trap is sent.
	TrapHighCpuThreshold pulumi.IntPtrInput
	// Memory usage when trap is sent.
	TrapHighMemThreshold pulumi.IntPtrInput
	// SNMP User Configuration. The structure of `user` block is documented below.
	Users SnmpUserArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SnmpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*snmpArgs)(nil)).Elem()
}

type SnmpInput interface {
	pulumi.Input

	ToSnmpOutput() SnmpOutput
	ToSnmpOutputWithContext(ctx context.Context) SnmpOutput
}

func (*Snmp) ElementType() reflect.Type {
	return reflect.TypeOf((**Snmp)(nil)).Elem()
}

func (i *Snmp) ToSnmpOutput() SnmpOutput {
	return i.ToSnmpOutputWithContext(context.Background())
}

func (i *Snmp) ToSnmpOutputWithContext(ctx context.Context) SnmpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnmpOutput)
}

// SnmpArrayInput is an input type that accepts SnmpArray and SnmpArrayOutput values.
// You can construct a concrete instance of `SnmpArrayInput` via:
//
//	SnmpArray{ SnmpArgs{...} }
type SnmpArrayInput interface {
	pulumi.Input

	ToSnmpArrayOutput() SnmpArrayOutput
	ToSnmpArrayOutputWithContext(context.Context) SnmpArrayOutput
}

type SnmpArray []SnmpInput

func (SnmpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Snmp)(nil)).Elem()
}

func (i SnmpArray) ToSnmpArrayOutput() SnmpArrayOutput {
	return i.ToSnmpArrayOutputWithContext(context.Background())
}

func (i SnmpArray) ToSnmpArrayOutputWithContext(ctx context.Context) SnmpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnmpArrayOutput)
}

// SnmpMapInput is an input type that accepts SnmpMap and SnmpMapOutput values.
// You can construct a concrete instance of `SnmpMapInput` via:
//
//	SnmpMap{ "key": SnmpArgs{...} }
type SnmpMapInput interface {
	pulumi.Input

	ToSnmpMapOutput() SnmpMapOutput
	ToSnmpMapOutputWithContext(context.Context) SnmpMapOutput
}

type SnmpMap map[string]SnmpInput

func (SnmpMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Snmp)(nil)).Elem()
}

func (i SnmpMap) ToSnmpMapOutput() SnmpMapOutput {
	return i.ToSnmpMapOutputWithContext(context.Background())
}

func (i SnmpMap) ToSnmpMapOutputWithContext(ctx context.Context) SnmpMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnmpMapOutput)
}

type SnmpOutput struct{ *pulumi.OutputState }

func (SnmpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Snmp)(nil)).Elem()
}

func (o SnmpOutput) ToSnmpOutput() SnmpOutput {
	return o
}

func (o SnmpOutput) ToSnmpOutputWithContext(ctx context.Context) SnmpOutput {
	return o
}

// SNMP Community Configuration. The structure of `community` block is documented below.
func (o SnmpOutput) Communities() SnmpCommunityArrayOutput {
	return o.ApplyT(func(v *Snmp) SnmpCommunityArrayOutput { return v.Communities }).(SnmpCommunityArrayOutput)
}

// Contact Information.
func (o SnmpOutput) ContactInfo() pulumi.StringOutput {
	return o.ApplyT(func(v *Snmp) pulumi.StringOutput { return v.ContactInfo }).(pulumi.StringOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o SnmpOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Snmp) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// AC SNMP engineId string (maximum 24 characters).
func (o SnmpOutput) EngineId() pulumi.StringOutput {
	return o.ApplyT(func(v *Snmp) pulumi.StringOutput { return v.EngineId }).(pulumi.StringOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o SnmpOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Snmp) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// CPU usage when trap is sent.
func (o SnmpOutput) TrapHighCpuThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v *Snmp) pulumi.IntOutput { return v.TrapHighCpuThreshold }).(pulumi.IntOutput)
}

// Memory usage when trap is sent.
func (o SnmpOutput) TrapHighMemThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v *Snmp) pulumi.IntOutput { return v.TrapHighMemThreshold }).(pulumi.IntOutput)
}

// SNMP User Configuration. The structure of `user` block is documented below.
func (o SnmpOutput) Users() SnmpUserArrayOutput {
	return o.ApplyT(func(v *Snmp) SnmpUserArrayOutput { return v.Users }).(SnmpUserArrayOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SnmpOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Snmp) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SnmpArrayOutput struct{ *pulumi.OutputState }

func (SnmpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Snmp)(nil)).Elem()
}

func (o SnmpArrayOutput) ToSnmpArrayOutput() SnmpArrayOutput {
	return o
}

func (o SnmpArrayOutput) ToSnmpArrayOutputWithContext(ctx context.Context) SnmpArrayOutput {
	return o
}

func (o SnmpArrayOutput) Index(i pulumi.IntInput) SnmpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Snmp {
		return vs[0].([]*Snmp)[vs[1].(int)]
	}).(SnmpOutput)
}

type SnmpMapOutput struct{ *pulumi.OutputState }

func (SnmpMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Snmp)(nil)).Elem()
}

func (o SnmpMapOutput) ToSnmpMapOutput() SnmpMapOutput {
	return o
}

func (o SnmpMapOutput) ToSnmpMapOutputWithContext(ctx context.Context) SnmpMapOutput {
	return o
}

func (o SnmpMapOutput) MapIndex(k pulumi.StringInput) SnmpOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Snmp {
		return vs[0].(map[string]*Snmp)[vs[1].(string)]
	}).(SnmpOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SnmpInput)(nil)).Elem(), &Snmp{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnmpArrayInput)(nil)).Elem(), SnmpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnmpMapInput)(nil)).Elem(), SnmpMap{})
	pulumi.RegisterOutputType(SnmpOutput{})
	pulumi.RegisterOutputType(SnmpArrayOutput{})
	pulumi.RegisterOutputType(SnmpMapOutput{})
}
