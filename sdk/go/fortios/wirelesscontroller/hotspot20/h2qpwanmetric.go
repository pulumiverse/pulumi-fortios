// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hotspot20

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure WAN metrics.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/wirelesscontroller"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := wirelesscontroller.NewH2qpwanmetric(ctx, "trname", &wirelesscontroller.H2qpwanmetricArgs{
//				DownlinkLoad:            pulumi.Int(0),
//				DownlinkSpeed:           pulumi.Int(2400),
//				LinkAtCapacity:          pulumi.String("disable"),
//				LinkStatus:              pulumi.String("up"),
//				LoadMeasurementDuration: pulumi.Int(0),
//				SymmetricWanLink:        pulumi.String("symmetric"),
//				UplinkLoad:              pulumi.Int(0),
//				UplinkSpeed:             pulumi.Int(2400),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// WirelessControllerHotspot20 H2QpWanMetric can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:wirelesscontroller/hotspot20/h2qpwanmetric:H2qpwanmetric labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:wirelesscontroller/hotspot20/h2qpwanmetric:H2qpwanmetric labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type H2qpwanmetric struct {
	pulumi.CustomResourceState

	// Downlink load.
	DownlinkLoad pulumi.IntOutput `pulumi:"downlinkLoad"`
	// Downlink speed (in kilobits/s).
	DownlinkSpeed pulumi.IntOutput `pulumi:"downlinkSpeed"`
	// Link at capacity. Valid values: `enable`, `disable`.
	LinkAtCapacity pulumi.StringOutput `pulumi:"linkAtCapacity"`
	// Link status. Valid values: `up`, `down`, `in-test`.
	LinkStatus pulumi.StringOutput `pulumi:"linkStatus"`
	// Load measurement duration (in tenths of a second).
	LoadMeasurementDuration pulumi.IntOutput `pulumi:"loadMeasurementDuration"`
	// WAN metric name.
	Name pulumi.StringOutput `pulumi:"name"`
	// WAN link symmetry. Valid values: `symmetric`, `asymmetric`.
	SymmetricWanLink pulumi.StringOutput `pulumi:"symmetricWanLink"`
	// Uplink load.
	UplinkLoad pulumi.IntOutput `pulumi:"uplinkLoad"`
	// Uplink speed (in kilobits/s).
	UplinkSpeed pulumi.IntOutput `pulumi:"uplinkSpeed"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewH2qpwanmetric registers a new resource with the given unique name, arguments, and options.
func NewH2qpwanmetric(ctx *pulumi.Context,
	name string, args *H2qpwanmetricArgs, opts ...pulumi.ResourceOption) (*H2qpwanmetric, error) {
	if args == nil {
		args = &H2qpwanmetricArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource H2qpwanmetric
	err := ctx.RegisterResource("fortios:wirelesscontroller/hotspot20/h2qpwanmetric:H2qpwanmetric", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetH2qpwanmetric gets an existing H2qpwanmetric resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetH2qpwanmetric(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *H2qpwanmetricState, opts ...pulumi.ResourceOption) (*H2qpwanmetric, error) {
	var resource H2qpwanmetric
	err := ctx.ReadResource("fortios:wirelesscontroller/hotspot20/h2qpwanmetric:H2qpwanmetric", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering H2qpwanmetric resources.
type h2qpwanmetricState struct {
	// Downlink load.
	DownlinkLoad *int `pulumi:"downlinkLoad"`
	// Downlink speed (in kilobits/s).
	DownlinkSpeed *int `pulumi:"downlinkSpeed"`
	// Link at capacity. Valid values: `enable`, `disable`.
	LinkAtCapacity *string `pulumi:"linkAtCapacity"`
	// Link status. Valid values: `up`, `down`, `in-test`.
	LinkStatus *string `pulumi:"linkStatus"`
	// Load measurement duration (in tenths of a second).
	LoadMeasurementDuration *int `pulumi:"loadMeasurementDuration"`
	// WAN metric name.
	Name *string `pulumi:"name"`
	// WAN link symmetry. Valid values: `symmetric`, `asymmetric`.
	SymmetricWanLink *string `pulumi:"symmetricWanLink"`
	// Uplink load.
	UplinkLoad *int `pulumi:"uplinkLoad"`
	// Uplink speed (in kilobits/s).
	UplinkSpeed *int `pulumi:"uplinkSpeed"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type H2qpwanmetricState struct {
	// Downlink load.
	DownlinkLoad pulumi.IntPtrInput
	// Downlink speed (in kilobits/s).
	DownlinkSpeed pulumi.IntPtrInput
	// Link at capacity. Valid values: `enable`, `disable`.
	LinkAtCapacity pulumi.StringPtrInput
	// Link status. Valid values: `up`, `down`, `in-test`.
	LinkStatus pulumi.StringPtrInput
	// Load measurement duration (in tenths of a second).
	LoadMeasurementDuration pulumi.IntPtrInput
	// WAN metric name.
	Name pulumi.StringPtrInput
	// WAN link symmetry. Valid values: `symmetric`, `asymmetric`.
	SymmetricWanLink pulumi.StringPtrInput
	// Uplink load.
	UplinkLoad pulumi.IntPtrInput
	// Uplink speed (in kilobits/s).
	UplinkSpeed pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (H2qpwanmetricState) ElementType() reflect.Type {
	return reflect.TypeOf((*h2qpwanmetricState)(nil)).Elem()
}

type h2qpwanmetricArgs struct {
	// Downlink load.
	DownlinkLoad *int `pulumi:"downlinkLoad"`
	// Downlink speed (in kilobits/s).
	DownlinkSpeed *int `pulumi:"downlinkSpeed"`
	// Link at capacity. Valid values: `enable`, `disable`.
	LinkAtCapacity *string `pulumi:"linkAtCapacity"`
	// Link status. Valid values: `up`, `down`, `in-test`.
	LinkStatus *string `pulumi:"linkStatus"`
	// Load measurement duration (in tenths of a second).
	LoadMeasurementDuration *int `pulumi:"loadMeasurementDuration"`
	// WAN metric name.
	Name *string `pulumi:"name"`
	// WAN link symmetry. Valid values: `symmetric`, `asymmetric`.
	SymmetricWanLink *string `pulumi:"symmetricWanLink"`
	// Uplink load.
	UplinkLoad *int `pulumi:"uplinkLoad"`
	// Uplink speed (in kilobits/s).
	UplinkSpeed *int `pulumi:"uplinkSpeed"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a H2qpwanmetric resource.
type H2qpwanmetricArgs struct {
	// Downlink load.
	DownlinkLoad pulumi.IntPtrInput
	// Downlink speed (in kilobits/s).
	DownlinkSpeed pulumi.IntPtrInput
	// Link at capacity. Valid values: `enable`, `disable`.
	LinkAtCapacity pulumi.StringPtrInput
	// Link status. Valid values: `up`, `down`, `in-test`.
	LinkStatus pulumi.StringPtrInput
	// Load measurement duration (in tenths of a second).
	LoadMeasurementDuration pulumi.IntPtrInput
	// WAN metric name.
	Name pulumi.StringPtrInput
	// WAN link symmetry. Valid values: `symmetric`, `asymmetric`.
	SymmetricWanLink pulumi.StringPtrInput
	// Uplink load.
	UplinkLoad pulumi.IntPtrInput
	// Uplink speed (in kilobits/s).
	UplinkSpeed pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (H2qpwanmetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*h2qpwanmetricArgs)(nil)).Elem()
}

type H2qpwanmetricInput interface {
	pulumi.Input

	ToH2qpwanmetricOutput() H2qpwanmetricOutput
	ToH2qpwanmetricOutputWithContext(ctx context.Context) H2qpwanmetricOutput
}

func (*H2qpwanmetric) ElementType() reflect.Type {
	return reflect.TypeOf((**H2qpwanmetric)(nil)).Elem()
}

func (i *H2qpwanmetric) ToH2qpwanmetricOutput() H2qpwanmetricOutput {
	return i.ToH2qpwanmetricOutputWithContext(context.Background())
}

func (i *H2qpwanmetric) ToH2qpwanmetricOutputWithContext(ctx context.Context) H2qpwanmetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(H2qpwanmetricOutput)
}

// H2qpwanmetricArrayInput is an input type that accepts H2qpwanmetricArray and H2qpwanmetricArrayOutput values.
// You can construct a concrete instance of `H2qpwanmetricArrayInput` via:
//
//	H2qpwanmetricArray{ H2qpwanmetricArgs{...} }
type H2qpwanmetricArrayInput interface {
	pulumi.Input

	ToH2qpwanmetricArrayOutput() H2qpwanmetricArrayOutput
	ToH2qpwanmetricArrayOutputWithContext(context.Context) H2qpwanmetricArrayOutput
}

type H2qpwanmetricArray []H2qpwanmetricInput

func (H2qpwanmetricArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*H2qpwanmetric)(nil)).Elem()
}

func (i H2qpwanmetricArray) ToH2qpwanmetricArrayOutput() H2qpwanmetricArrayOutput {
	return i.ToH2qpwanmetricArrayOutputWithContext(context.Background())
}

func (i H2qpwanmetricArray) ToH2qpwanmetricArrayOutputWithContext(ctx context.Context) H2qpwanmetricArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(H2qpwanmetricArrayOutput)
}

// H2qpwanmetricMapInput is an input type that accepts H2qpwanmetricMap and H2qpwanmetricMapOutput values.
// You can construct a concrete instance of `H2qpwanmetricMapInput` via:
//
//	H2qpwanmetricMap{ "key": H2qpwanmetricArgs{...} }
type H2qpwanmetricMapInput interface {
	pulumi.Input

	ToH2qpwanmetricMapOutput() H2qpwanmetricMapOutput
	ToH2qpwanmetricMapOutputWithContext(context.Context) H2qpwanmetricMapOutput
}

type H2qpwanmetricMap map[string]H2qpwanmetricInput

func (H2qpwanmetricMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*H2qpwanmetric)(nil)).Elem()
}

func (i H2qpwanmetricMap) ToH2qpwanmetricMapOutput() H2qpwanmetricMapOutput {
	return i.ToH2qpwanmetricMapOutputWithContext(context.Background())
}

func (i H2qpwanmetricMap) ToH2qpwanmetricMapOutputWithContext(ctx context.Context) H2qpwanmetricMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(H2qpwanmetricMapOutput)
}

type H2qpwanmetricOutput struct{ *pulumi.OutputState }

func (H2qpwanmetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**H2qpwanmetric)(nil)).Elem()
}

func (o H2qpwanmetricOutput) ToH2qpwanmetricOutput() H2qpwanmetricOutput {
	return o
}

func (o H2qpwanmetricOutput) ToH2qpwanmetricOutputWithContext(ctx context.Context) H2qpwanmetricOutput {
	return o
}

// Downlink load.
func (o H2qpwanmetricOutput) DownlinkLoad() pulumi.IntOutput {
	return o.ApplyT(func(v *H2qpwanmetric) pulumi.IntOutput { return v.DownlinkLoad }).(pulumi.IntOutput)
}

// Downlink speed (in kilobits/s).
func (o H2qpwanmetricOutput) DownlinkSpeed() pulumi.IntOutput {
	return o.ApplyT(func(v *H2qpwanmetric) pulumi.IntOutput { return v.DownlinkSpeed }).(pulumi.IntOutput)
}

// Link at capacity. Valid values: `enable`, `disable`.
func (o H2qpwanmetricOutput) LinkAtCapacity() pulumi.StringOutput {
	return o.ApplyT(func(v *H2qpwanmetric) pulumi.StringOutput { return v.LinkAtCapacity }).(pulumi.StringOutput)
}

// Link status. Valid values: `up`, `down`, `in-test`.
func (o H2qpwanmetricOutput) LinkStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *H2qpwanmetric) pulumi.StringOutput { return v.LinkStatus }).(pulumi.StringOutput)
}

// Load measurement duration (in tenths of a second).
func (o H2qpwanmetricOutput) LoadMeasurementDuration() pulumi.IntOutput {
	return o.ApplyT(func(v *H2qpwanmetric) pulumi.IntOutput { return v.LoadMeasurementDuration }).(pulumi.IntOutput)
}

// WAN metric name.
func (o H2qpwanmetricOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *H2qpwanmetric) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// WAN link symmetry. Valid values: `symmetric`, `asymmetric`.
func (o H2qpwanmetricOutput) SymmetricWanLink() pulumi.StringOutput {
	return o.ApplyT(func(v *H2qpwanmetric) pulumi.StringOutput { return v.SymmetricWanLink }).(pulumi.StringOutput)
}

// Uplink load.
func (o H2qpwanmetricOutput) UplinkLoad() pulumi.IntOutput {
	return o.ApplyT(func(v *H2qpwanmetric) pulumi.IntOutput { return v.UplinkLoad }).(pulumi.IntOutput)
}

// Uplink speed (in kilobits/s).
func (o H2qpwanmetricOutput) UplinkSpeed() pulumi.IntOutput {
	return o.ApplyT(func(v *H2qpwanmetric) pulumi.IntOutput { return v.UplinkSpeed }).(pulumi.IntOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o H2qpwanmetricOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *H2qpwanmetric) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type H2qpwanmetricArrayOutput struct{ *pulumi.OutputState }

func (H2qpwanmetricArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*H2qpwanmetric)(nil)).Elem()
}

func (o H2qpwanmetricArrayOutput) ToH2qpwanmetricArrayOutput() H2qpwanmetricArrayOutput {
	return o
}

func (o H2qpwanmetricArrayOutput) ToH2qpwanmetricArrayOutputWithContext(ctx context.Context) H2qpwanmetricArrayOutput {
	return o
}

func (o H2qpwanmetricArrayOutput) Index(i pulumi.IntInput) H2qpwanmetricOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *H2qpwanmetric {
		return vs[0].([]*H2qpwanmetric)[vs[1].(int)]
	}).(H2qpwanmetricOutput)
}

type H2qpwanmetricMapOutput struct{ *pulumi.OutputState }

func (H2qpwanmetricMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*H2qpwanmetric)(nil)).Elem()
}

func (o H2qpwanmetricMapOutput) ToH2qpwanmetricMapOutput() H2qpwanmetricMapOutput {
	return o
}

func (o H2qpwanmetricMapOutput) ToH2qpwanmetricMapOutputWithContext(ctx context.Context) H2qpwanmetricMapOutput {
	return o
}

func (o H2qpwanmetricMapOutput) MapIndex(k pulumi.StringInput) H2qpwanmetricOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *H2qpwanmetric {
		return vs[0].(map[string]*H2qpwanmetric)[vs[1].(string)]
	}).(H2qpwanmetricOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*H2qpwanmetricInput)(nil)).Elem(), &H2qpwanmetric{})
	pulumi.RegisterInputType(reflect.TypeOf((*H2qpwanmetricArrayInput)(nil)).Elem(), H2qpwanmetricArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*H2qpwanmetricMapInput)(nil)).Elem(), H2qpwanmetricMap{})
	pulumi.RegisterOutputType(H2qpwanmetricOutput{})
	pulumi.RegisterOutputType(H2qpwanmetricArrayOutput{})
	pulumi.RegisterOutputType(H2qpwanmetricMapOutput{})
}
