// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hotspot20

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure venue URL. Applies to FortiOS Version `>= 7.0.2`.
//
// ## Import
//
// WirelessControllerHotspot20 AnqpVenueUrl can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:wirelesscontroller/hotspot20/anqpvenueurl:Anqpvenueurl labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:wirelesscontroller/hotspot20/anqpvenueurl:Anqpvenueurl labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Anqpvenueurl struct {
	pulumi.CustomResourceState

	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Name of venue url.
	Name pulumi.StringOutput `pulumi:"name"`
	// URL list. The structure of `valueList` block is documented below.
	ValueLists AnqpvenueurlValueListArrayOutput `pulumi:"valueLists"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewAnqpvenueurl registers a new resource with the given unique name, arguments, and options.
func NewAnqpvenueurl(ctx *pulumi.Context,
	name string, args *AnqpvenueurlArgs, opts ...pulumi.ResourceOption) (*Anqpvenueurl, error) {
	if args == nil {
		args = &AnqpvenueurlArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Anqpvenueurl
	err := ctx.RegisterResource("fortios:wirelesscontroller/hotspot20/anqpvenueurl:Anqpvenueurl", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAnqpvenueurl gets an existing Anqpvenueurl resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAnqpvenueurl(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AnqpvenueurlState, opts ...pulumi.ResourceOption) (*Anqpvenueurl, error) {
	var resource Anqpvenueurl
	err := ctx.ReadResource("fortios:wirelesscontroller/hotspot20/anqpvenueurl:Anqpvenueurl", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Anqpvenueurl resources.
type anqpvenueurlState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Name of venue url.
	Name *string `pulumi:"name"`
	// URL list. The structure of `valueList` block is documented below.
	ValueLists []AnqpvenueurlValueList `pulumi:"valueLists"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type AnqpvenueurlState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Name of venue url.
	Name pulumi.StringPtrInput
	// URL list. The structure of `valueList` block is documented below.
	ValueLists AnqpvenueurlValueListArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (AnqpvenueurlState) ElementType() reflect.Type {
	return reflect.TypeOf((*anqpvenueurlState)(nil)).Elem()
}

type anqpvenueurlArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Name of venue url.
	Name *string `pulumi:"name"`
	// URL list. The structure of `valueList` block is documented below.
	ValueLists []AnqpvenueurlValueList `pulumi:"valueLists"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Anqpvenueurl resource.
type AnqpvenueurlArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Name of venue url.
	Name pulumi.StringPtrInput
	// URL list. The structure of `valueList` block is documented below.
	ValueLists AnqpvenueurlValueListArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (AnqpvenueurlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*anqpvenueurlArgs)(nil)).Elem()
}

type AnqpvenueurlInput interface {
	pulumi.Input

	ToAnqpvenueurlOutput() AnqpvenueurlOutput
	ToAnqpvenueurlOutputWithContext(ctx context.Context) AnqpvenueurlOutput
}

func (*Anqpvenueurl) ElementType() reflect.Type {
	return reflect.TypeOf((**Anqpvenueurl)(nil)).Elem()
}

func (i *Anqpvenueurl) ToAnqpvenueurlOutput() AnqpvenueurlOutput {
	return i.ToAnqpvenueurlOutputWithContext(context.Background())
}

func (i *Anqpvenueurl) ToAnqpvenueurlOutputWithContext(ctx context.Context) AnqpvenueurlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnqpvenueurlOutput)
}

// AnqpvenueurlArrayInput is an input type that accepts AnqpvenueurlArray and AnqpvenueurlArrayOutput values.
// You can construct a concrete instance of `AnqpvenueurlArrayInput` via:
//
//	AnqpvenueurlArray{ AnqpvenueurlArgs{...} }
type AnqpvenueurlArrayInput interface {
	pulumi.Input

	ToAnqpvenueurlArrayOutput() AnqpvenueurlArrayOutput
	ToAnqpvenueurlArrayOutputWithContext(context.Context) AnqpvenueurlArrayOutput
}

type AnqpvenueurlArray []AnqpvenueurlInput

func (AnqpvenueurlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Anqpvenueurl)(nil)).Elem()
}

func (i AnqpvenueurlArray) ToAnqpvenueurlArrayOutput() AnqpvenueurlArrayOutput {
	return i.ToAnqpvenueurlArrayOutputWithContext(context.Background())
}

func (i AnqpvenueurlArray) ToAnqpvenueurlArrayOutputWithContext(ctx context.Context) AnqpvenueurlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnqpvenueurlArrayOutput)
}

// AnqpvenueurlMapInput is an input type that accepts AnqpvenueurlMap and AnqpvenueurlMapOutput values.
// You can construct a concrete instance of `AnqpvenueurlMapInput` via:
//
//	AnqpvenueurlMap{ "key": AnqpvenueurlArgs{...} }
type AnqpvenueurlMapInput interface {
	pulumi.Input

	ToAnqpvenueurlMapOutput() AnqpvenueurlMapOutput
	ToAnqpvenueurlMapOutputWithContext(context.Context) AnqpvenueurlMapOutput
}

type AnqpvenueurlMap map[string]AnqpvenueurlInput

func (AnqpvenueurlMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Anqpvenueurl)(nil)).Elem()
}

func (i AnqpvenueurlMap) ToAnqpvenueurlMapOutput() AnqpvenueurlMapOutput {
	return i.ToAnqpvenueurlMapOutputWithContext(context.Background())
}

func (i AnqpvenueurlMap) ToAnqpvenueurlMapOutputWithContext(ctx context.Context) AnqpvenueurlMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnqpvenueurlMapOutput)
}

type AnqpvenueurlOutput struct{ *pulumi.OutputState }

func (AnqpvenueurlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Anqpvenueurl)(nil)).Elem()
}

func (o AnqpvenueurlOutput) ToAnqpvenueurlOutput() AnqpvenueurlOutput {
	return o
}

func (o AnqpvenueurlOutput) ToAnqpvenueurlOutputWithContext(ctx context.Context) AnqpvenueurlOutput {
	return o
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o AnqpvenueurlOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Anqpvenueurl) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o AnqpvenueurlOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Anqpvenueurl) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Name of venue url.
func (o AnqpvenueurlOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Anqpvenueurl) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// URL list. The structure of `valueList` block is documented below.
func (o AnqpvenueurlOutput) ValueLists() AnqpvenueurlValueListArrayOutput {
	return o.ApplyT(func(v *Anqpvenueurl) AnqpvenueurlValueListArrayOutput { return v.ValueLists }).(AnqpvenueurlValueListArrayOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o AnqpvenueurlOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Anqpvenueurl) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type AnqpvenueurlArrayOutput struct{ *pulumi.OutputState }

func (AnqpvenueurlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Anqpvenueurl)(nil)).Elem()
}

func (o AnqpvenueurlArrayOutput) ToAnqpvenueurlArrayOutput() AnqpvenueurlArrayOutput {
	return o
}

func (o AnqpvenueurlArrayOutput) ToAnqpvenueurlArrayOutputWithContext(ctx context.Context) AnqpvenueurlArrayOutput {
	return o
}

func (o AnqpvenueurlArrayOutput) Index(i pulumi.IntInput) AnqpvenueurlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Anqpvenueurl {
		return vs[0].([]*Anqpvenueurl)[vs[1].(int)]
	}).(AnqpvenueurlOutput)
}

type AnqpvenueurlMapOutput struct{ *pulumi.OutputState }

func (AnqpvenueurlMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Anqpvenueurl)(nil)).Elem()
}

func (o AnqpvenueurlMapOutput) ToAnqpvenueurlMapOutput() AnqpvenueurlMapOutput {
	return o
}

func (o AnqpvenueurlMapOutput) ToAnqpvenueurlMapOutputWithContext(ctx context.Context) AnqpvenueurlMapOutput {
	return o
}

func (o AnqpvenueurlMapOutput) MapIndex(k pulumi.StringInput) AnqpvenueurlOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Anqpvenueurl {
		return vs[0].(map[string]*Anqpvenueurl)[vs[1].(string)]
	}).(AnqpvenueurlOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AnqpvenueurlInput)(nil)).Elem(), &Anqpvenueurl{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnqpvenueurlArrayInput)(nil)).Elem(), AnqpvenueurlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnqpvenueurlMapInput)(nil)).Elem(), AnqpvenueurlMap{})
	pulumi.RegisterOutputType(AnqpvenueurlOutput{})
	pulumi.RegisterOutputType(AnqpvenueurlArrayOutput{})
	pulumi.RegisterOutputType(AnqpvenueurlMapOutput{})
}
