// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hotspot20

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure terms and conditions. Applies to FortiOS Version `>= 7.0.2`.
//
// ## Import
//
// WirelessControllerHotspot20 H2QpTermsAndConditions can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:wirelesscontroller/hotspot20/h2qptermsandconditions:H2qptermsandconditions labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:wirelesscontroller/hotspot20/h2qptermsandconditions:H2qptermsandconditions labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type H2qptermsandconditions struct {
	pulumi.CustomResourceState

	// Filename.
	Filename pulumi.StringOutput `pulumi:"filename"`
	// Terms and Conditions ID.
	Name pulumi.StringOutput `pulumi:"name"`
	// Timestamp.
	Timestamp pulumi.IntOutput `pulumi:"timestamp"`
	// URL.
	Url pulumi.StringOutput `pulumi:"url"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringOutput `pulumi:"vdomparam"`
}

// NewH2qptermsandconditions registers a new resource with the given unique name, arguments, and options.
func NewH2qptermsandconditions(ctx *pulumi.Context,
	name string, args *H2qptermsandconditionsArgs, opts ...pulumi.ResourceOption) (*H2qptermsandconditions, error) {
	if args == nil {
		args = &H2qptermsandconditionsArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource H2qptermsandconditions
	err := ctx.RegisterResource("fortios:wirelesscontroller/hotspot20/h2qptermsandconditions:H2qptermsandconditions", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetH2qptermsandconditions gets an existing H2qptermsandconditions resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetH2qptermsandconditions(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *H2qptermsandconditionsState, opts ...pulumi.ResourceOption) (*H2qptermsandconditions, error) {
	var resource H2qptermsandconditions
	err := ctx.ReadResource("fortios:wirelesscontroller/hotspot20/h2qptermsandconditions:H2qptermsandconditions", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering H2qptermsandconditions resources.
type h2qptermsandconditionsState struct {
	// Filename.
	Filename *string `pulumi:"filename"`
	// Terms and Conditions ID.
	Name *string `pulumi:"name"`
	// Timestamp.
	Timestamp *int `pulumi:"timestamp"`
	// URL.
	Url *string `pulumi:"url"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type H2qptermsandconditionsState struct {
	// Filename.
	Filename pulumi.StringPtrInput
	// Terms and Conditions ID.
	Name pulumi.StringPtrInput
	// Timestamp.
	Timestamp pulumi.IntPtrInput
	// URL.
	Url pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (H2qptermsandconditionsState) ElementType() reflect.Type {
	return reflect.TypeOf((*h2qptermsandconditionsState)(nil)).Elem()
}

type h2qptermsandconditionsArgs struct {
	// Filename.
	Filename *string `pulumi:"filename"`
	// Terms and Conditions ID.
	Name *string `pulumi:"name"`
	// Timestamp.
	Timestamp *int `pulumi:"timestamp"`
	// URL.
	Url *string `pulumi:"url"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a H2qptermsandconditions resource.
type H2qptermsandconditionsArgs struct {
	// Filename.
	Filename pulumi.StringPtrInput
	// Terms and Conditions ID.
	Name pulumi.StringPtrInput
	// Timestamp.
	Timestamp pulumi.IntPtrInput
	// URL.
	Url pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (H2qptermsandconditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*h2qptermsandconditionsArgs)(nil)).Elem()
}

type H2qptermsandconditionsInput interface {
	pulumi.Input

	ToH2qptermsandconditionsOutput() H2qptermsandconditionsOutput
	ToH2qptermsandconditionsOutputWithContext(ctx context.Context) H2qptermsandconditionsOutput
}

func (*H2qptermsandconditions) ElementType() reflect.Type {
	return reflect.TypeOf((**H2qptermsandconditions)(nil)).Elem()
}

func (i *H2qptermsandconditions) ToH2qptermsandconditionsOutput() H2qptermsandconditionsOutput {
	return i.ToH2qptermsandconditionsOutputWithContext(context.Background())
}

func (i *H2qptermsandconditions) ToH2qptermsandconditionsOutputWithContext(ctx context.Context) H2qptermsandconditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(H2qptermsandconditionsOutput)
}

// H2qptermsandconditionsArrayInput is an input type that accepts H2qptermsandconditionsArray and H2qptermsandconditionsArrayOutput values.
// You can construct a concrete instance of `H2qptermsandconditionsArrayInput` via:
//
//	H2qptermsandconditionsArray{ H2qptermsandconditionsArgs{...} }
type H2qptermsandconditionsArrayInput interface {
	pulumi.Input

	ToH2qptermsandconditionsArrayOutput() H2qptermsandconditionsArrayOutput
	ToH2qptermsandconditionsArrayOutputWithContext(context.Context) H2qptermsandconditionsArrayOutput
}

type H2qptermsandconditionsArray []H2qptermsandconditionsInput

func (H2qptermsandconditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*H2qptermsandconditions)(nil)).Elem()
}

func (i H2qptermsandconditionsArray) ToH2qptermsandconditionsArrayOutput() H2qptermsandconditionsArrayOutput {
	return i.ToH2qptermsandconditionsArrayOutputWithContext(context.Background())
}

func (i H2qptermsandconditionsArray) ToH2qptermsandconditionsArrayOutputWithContext(ctx context.Context) H2qptermsandconditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(H2qptermsandconditionsArrayOutput)
}

// H2qptermsandconditionsMapInput is an input type that accepts H2qptermsandconditionsMap and H2qptermsandconditionsMapOutput values.
// You can construct a concrete instance of `H2qptermsandconditionsMapInput` via:
//
//	H2qptermsandconditionsMap{ "key": H2qptermsandconditionsArgs{...} }
type H2qptermsandconditionsMapInput interface {
	pulumi.Input

	ToH2qptermsandconditionsMapOutput() H2qptermsandconditionsMapOutput
	ToH2qptermsandconditionsMapOutputWithContext(context.Context) H2qptermsandconditionsMapOutput
}

type H2qptermsandconditionsMap map[string]H2qptermsandconditionsInput

func (H2qptermsandconditionsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*H2qptermsandconditions)(nil)).Elem()
}

func (i H2qptermsandconditionsMap) ToH2qptermsandconditionsMapOutput() H2qptermsandconditionsMapOutput {
	return i.ToH2qptermsandconditionsMapOutputWithContext(context.Background())
}

func (i H2qptermsandconditionsMap) ToH2qptermsandconditionsMapOutputWithContext(ctx context.Context) H2qptermsandconditionsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(H2qptermsandconditionsMapOutput)
}

type H2qptermsandconditionsOutput struct{ *pulumi.OutputState }

func (H2qptermsandconditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**H2qptermsandconditions)(nil)).Elem()
}

func (o H2qptermsandconditionsOutput) ToH2qptermsandconditionsOutput() H2qptermsandconditionsOutput {
	return o
}

func (o H2qptermsandconditionsOutput) ToH2qptermsandconditionsOutputWithContext(ctx context.Context) H2qptermsandconditionsOutput {
	return o
}

// Filename.
func (o H2qptermsandconditionsOutput) Filename() pulumi.StringOutput {
	return o.ApplyT(func(v *H2qptermsandconditions) pulumi.StringOutput { return v.Filename }).(pulumi.StringOutput)
}

// Terms and Conditions ID.
func (o H2qptermsandconditionsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *H2qptermsandconditions) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Timestamp.
func (o H2qptermsandconditionsOutput) Timestamp() pulumi.IntOutput {
	return o.ApplyT(func(v *H2qptermsandconditions) pulumi.IntOutput { return v.Timestamp }).(pulumi.IntOutput)
}

// URL.
func (o H2qptermsandconditionsOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *H2qptermsandconditions) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o H2qptermsandconditionsOutput) Vdomparam() pulumi.StringOutput {
	return o.ApplyT(func(v *H2qptermsandconditions) pulumi.StringOutput { return v.Vdomparam }).(pulumi.StringOutput)
}

type H2qptermsandconditionsArrayOutput struct{ *pulumi.OutputState }

func (H2qptermsandconditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*H2qptermsandconditions)(nil)).Elem()
}

func (o H2qptermsandconditionsArrayOutput) ToH2qptermsandconditionsArrayOutput() H2qptermsandconditionsArrayOutput {
	return o
}

func (o H2qptermsandconditionsArrayOutput) ToH2qptermsandconditionsArrayOutputWithContext(ctx context.Context) H2qptermsandconditionsArrayOutput {
	return o
}

func (o H2qptermsandconditionsArrayOutput) Index(i pulumi.IntInput) H2qptermsandconditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *H2qptermsandconditions {
		return vs[0].([]*H2qptermsandconditions)[vs[1].(int)]
	}).(H2qptermsandconditionsOutput)
}

type H2qptermsandconditionsMapOutput struct{ *pulumi.OutputState }

func (H2qptermsandconditionsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*H2qptermsandconditions)(nil)).Elem()
}

func (o H2qptermsandconditionsMapOutput) ToH2qptermsandconditionsMapOutput() H2qptermsandconditionsMapOutput {
	return o
}

func (o H2qptermsandconditionsMapOutput) ToH2qptermsandconditionsMapOutputWithContext(ctx context.Context) H2qptermsandconditionsMapOutput {
	return o
}

func (o H2qptermsandconditionsMapOutput) MapIndex(k pulumi.StringInput) H2qptermsandconditionsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *H2qptermsandconditions {
		return vs[0].(map[string]*H2qptermsandconditions)[vs[1].(string)]
	}).(H2qptermsandconditionsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*H2qptermsandconditionsInput)(nil)).Elem(), &H2qptermsandconditions{})
	pulumi.RegisterInputType(reflect.TypeOf((*H2qptermsandconditionsArrayInput)(nil)).Elem(), H2qptermsandconditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*H2qptermsandconditionsMapInput)(nil)).Elem(), H2qptermsandconditionsMap{})
	pulumi.RegisterOutputType(H2qptermsandconditionsOutput{})
	pulumi.RegisterOutputType(H2qptermsandconditionsArrayOutput{})
	pulumi.RegisterOutputType(H2qptermsandconditionsMapOutput{})
}
