// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hotspot20

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure 3GPP public land mobile network (PLMN).
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/wirelesscontroller"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := wirelesscontroller.NewAnqp3gppcellular(ctx, "trname", nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// WirelessControllerHotspot20 Anqp3GppCellular can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:wirelesscontroller/hotspot20/anqp3gppcellular:Anqp3gppcellular labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:wirelesscontroller/hotspot20/anqp3gppcellular:Anqp3gppcellular labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Anqp3gppcellular struct {
	pulumi.CustomResourceState

	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Mobile Country Code and Mobile Network Code configuration. The structure of `mccMncList` block is documented below.
	MccMncLists Anqp3gppcellularMccMncListArrayOutput `pulumi:"mccMncLists"`
	// 3GPP PLMN name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewAnqp3gppcellular registers a new resource with the given unique name, arguments, and options.
func NewAnqp3gppcellular(ctx *pulumi.Context,
	name string, args *Anqp3gppcellularArgs, opts ...pulumi.ResourceOption) (*Anqp3gppcellular, error) {
	if args == nil {
		args = &Anqp3gppcellularArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Anqp3gppcellular
	err := ctx.RegisterResource("fortios:wirelesscontroller/hotspot20/anqp3gppcellular:Anqp3gppcellular", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAnqp3gppcellular gets an existing Anqp3gppcellular resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAnqp3gppcellular(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Anqp3gppcellularState, opts ...pulumi.ResourceOption) (*Anqp3gppcellular, error) {
	var resource Anqp3gppcellular
	err := ctx.ReadResource("fortios:wirelesscontroller/hotspot20/anqp3gppcellular:Anqp3gppcellular", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Anqp3gppcellular resources.
type anqp3gppcellularState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Mobile Country Code and Mobile Network Code configuration. The structure of `mccMncList` block is documented below.
	MccMncLists []Anqp3gppcellularMccMncList `pulumi:"mccMncLists"`
	// 3GPP PLMN name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type Anqp3gppcellularState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Mobile Country Code and Mobile Network Code configuration. The structure of `mccMncList` block is documented below.
	MccMncLists Anqp3gppcellularMccMncListArrayInput
	// 3GPP PLMN name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (Anqp3gppcellularState) ElementType() reflect.Type {
	return reflect.TypeOf((*anqp3gppcellularState)(nil)).Elem()
}

type anqp3gppcellularArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Mobile Country Code and Mobile Network Code configuration. The structure of `mccMncList` block is documented below.
	MccMncLists []Anqp3gppcellularMccMncList `pulumi:"mccMncLists"`
	// 3GPP PLMN name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Anqp3gppcellular resource.
type Anqp3gppcellularArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Mobile Country Code and Mobile Network Code configuration. The structure of `mccMncList` block is documented below.
	MccMncLists Anqp3gppcellularMccMncListArrayInput
	// 3GPP PLMN name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (Anqp3gppcellularArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*anqp3gppcellularArgs)(nil)).Elem()
}

type Anqp3gppcellularInput interface {
	pulumi.Input

	ToAnqp3gppcellularOutput() Anqp3gppcellularOutput
	ToAnqp3gppcellularOutputWithContext(ctx context.Context) Anqp3gppcellularOutput
}

func (*Anqp3gppcellular) ElementType() reflect.Type {
	return reflect.TypeOf((**Anqp3gppcellular)(nil)).Elem()
}

func (i *Anqp3gppcellular) ToAnqp3gppcellularOutput() Anqp3gppcellularOutput {
	return i.ToAnqp3gppcellularOutputWithContext(context.Background())
}

func (i *Anqp3gppcellular) ToAnqp3gppcellularOutputWithContext(ctx context.Context) Anqp3gppcellularOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Anqp3gppcellularOutput)
}

// Anqp3gppcellularArrayInput is an input type that accepts Anqp3gppcellularArray and Anqp3gppcellularArrayOutput values.
// You can construct a concrete instance of `Anqp3gppcellularArrayInput` via:
//
//	Anqp3gppcellularArray{ Anqp3gppcellularArgs{...} }
type Anqp3gppcellularArrayInput interface {
	pulumi.Input

	ToAnqp3gppcellularArrayOutput() Anqp3gppcellularArrayOutput
	ToAnqp3gppcellularArrayOutputWithContext(context.Context) Anqp3gppcellularArrayOutput
}

type Anqp3gppcellularArray []Anqp3gppcellularInput

func (Anqp3gppcellularArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Anqp3gppcellular)(nil)).Elem()
}

func (i Anqp3gppcellularArray) ToAnqp3gppcellularArrayOutput() Anqp3gppcellularArrayOutput {
	return i.ToAnqp3gppcellularArrayOutputWithContext(context.Background())
}

func (i Anqp3gppcellularArray) ToAnqp3gppcellularArrayOutputWithContext(ctx context.Context) Anqp3gppcellularArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Anqp3gppcellularArrayOutput)
}

// Anqp3gppcellularMapInput is an input type that accepts Anqp3gppcellularMap and Anqp3gppcellularMapOutput values.
// You can construct a concrete instance of `Anqp3gppcellularMapInput` via:
//
//	Anqp3gppcellularMap{ "key": Anqp3gppcellularArgs{...} }
type Anqp3gppcellularMapInput interface {
	pulumi.Input

	ToAnqp3gppcellularMapOutput() Anqp3gppcellularMapOutput
	ToAnqp3gppcellularMapOutputWithContext(context.Context) Anqp3gppcellularMapOutput
}

type Anqp3gppcellularMap map[string]Anqp3gppcellularInput

func (Anqp3gppcellularMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Anqp3gppcellular)(nil)).Elem()
}

func (i Anqp3gppcellularMap) ToAnqp3gppcellularMapOutput() Anqp3gppcellularMapOutput {
	return i.ToAnqp3gppcellularMapOutputWithContext(context.Background())
}

func (i Anqp3gppcellularMap) ToAnqp3gppcellularMapOutputWithContext(ctx context.Context) Anqp3gppcellularMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Anqp3gppcellularMapOutput)
}

type Anqp3gppcellularOutput struct{ *pulumi.OutputState }

func (Anqp3gppcellularOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Anqp3gppcellular)(nil)).Elem()
}

func (o Anqp3gppcellularOutput) ToAnqp3gppcellularOutput() Anqp3gppcellularOutput {
	return o
}

func (o Anqp3gppcellularOutput) ToAnqp3gppcellularOutputWithContext(ctx context.Context) Anqp3gppcellularOutput {
	return o
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o Anqp3gppcellularOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Anqp3gppcellular) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o Anqp3gppcellularOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Anqp3gppcellular) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Mobile Country Code and Mobile Network Code configuration. The structure of `mccMncList` block is documented below.
func (o Anqp3gppcellularOutput) MccMncLists() Anqp3gppcellularMccMncListArrayOutput {
	return o.ApplyT(func(v *Anqp3gppcellular) Anqp3gppcellularMccMncListArrayOutput { return v.MccMncLists }).(Anqp3gppcellularMccMncListArrayOutput)
}

// 3GPP PLMN name.
func (o Anqp3gppcellularOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Anqp3gppcellular) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o Anqp3gppcellularOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Anqp3gppcellular) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type Anqp3gppcellularArrayOutput struct{ *pulumi.OutputState }

func (Anqp3gppcellularArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Anqp3gppcellular)(nil)).Elem()
}

func (o Anqp3gppcellularArrayOutput) ToAnqp3gppcellularArrayOutput() Anqp3gppcellularArrayOutput {
	return o
}

func (o Anqp3gppcellularArrayOutput) ToAnqp3gppcellularArrayOutputWithContext(ctx context.Context) Anqp3gppcellularArrayOutput {
	return o
}

func (o Anqp3gppcellularArrayOutput) Index(i pulumi.IntInput) Anqp3gppcellularOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Anqp3gppcellular {
		return vs[0].([]*Anqp3gppcellular)[vs[1].(int)]
	}).(Anqp3gppcellularOutput)
}

type Anqp3gppcellularMapOutput struct{ *pulumi.OutputState }

func (Anqp3gppcellularMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Anqp3gppcellular)(nil)).Elem()
}

func (o Anqp3gppcellularMapOutput) ToAnqp3gppcellularMapOutput() Anqp3gppcellularMapOutput {
	return o
}

func (o Anqp3gppcellularMapOutput) ToAnqp3gppcellularMapOutputWithContext(ctx context.Context) Anqp3gppcellularMapOutput {
	return o
}

func (o Anqp3gppcellularMapOutput) MapIndex(k pulumi.StringInput) Anqp3gppcellularOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Anqp3gppcellular {
		return vs[0].(map[string]*Anqp3gppcellular)[vs[1].(string)]
	}).(Anqp3gppcellularOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Anqp3gppcellularInput)(nil)).Elem(), &Anqp3gppcellular{})
	pulumi.RegisterInputType(reflect.TypeOf((*Anqp3gppcellularArrayInput)(nil)).Elem(), Anqp3gppcellularArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Anqp3gppcellularMapInput)(nil)).Elem(), Anqp3gppcellularMap{})
	pulumi.RegisterOutputType(Anqp3gppcellularOutput{})
	pulumi.RegisterOutputType(Anqp3gppcellularArrayOutput{})
	pulumi.RegisterOutputType(Anqp3gppcellularMapOutput{})
}
