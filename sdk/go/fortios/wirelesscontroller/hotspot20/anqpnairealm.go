// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hotspot20

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure network access identifier (NAI) realm.
//
// ## Import
//
// WirelessControllerHotspot20 AnqpNaiRealm can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:wirelesscontroller/hotspot20/anqpnairealm:Anqpnairealm labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:wirelesscontroller/hotspot20/anqpnairealm:Anqpnairealm labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Anqpnairealm struct {
	pulumi.CustomResourceState

	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// NAI list. The structure of `naiList` block is documented below.
	NaiLists AnqpnairealmNaiListArrayOutput `pulumi:"naiLists"`
	// NAI realm list name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewAnqpnairealm registers a new resource with the given unique name, arguments, and options.
func NewAnqpnairealm(ctx *pulumi.Context,
	name string, args *AnqpnairealmArgs, opts ...pulumi.ResourceOption) (*Anqpnairealm, error) {
	if args == nil {
		args = &AnqpnairealmArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Anqpnairealm
	err := ctx.RegisterResource("fortios:wirelesscontroller/hotspot20/anqpnairealm:Anqpnairealm", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAnqpnairealm gets an existing Anqpnairealm resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAnqpnairealm(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AnqpnairealmState, opts ...pulumi.ResourceOption) (*Anqpnairealm, error) {
	var resource Anqpnairealm
	err := ctx.ReadResource("fortios:wirelesscontroller/hotspot20/anqpnairealm:Anqpnairealm", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Anqpnairealm resources.
type anqpnairealmState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// NAI list. The structure of `naiList` block is documented below.
	NaiLists []AnqpnairealmNaiList `pulumi:"naiLists"`
	// NAI realm list name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type AnqpnairealmState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// NAI list. The structure of `naiList` block is documented below.
	NaiLists AnqpnairealmNaiListArrayInput
	// NAI realm list name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (AnqpnairealmState) ElementType() reflect.Type {
	return reflect.TypeOf((*anqpnairealmState)(nil)).Elem()
}

type anqpnairealmArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// NAI list. The structure of `naiList` block is documented below.
	NaiLists []AnqpnairealmNaiList `pulumi:"naiLists"`
	// NAI realm list name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Anqpnairealm resource.
type AnqpnairealmArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// NAI list. The structure of `naiList` block is documented below.
	NaiLists AnqpnairealmNaiListArrayInput
	// NAI realm list name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (AnqpnairealmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*anqpnairealmArgs)(nil)).Elem()
}

type AnqpnairealmInput interface {
	pulumi.Input

	ToAnqpnairealmOutput() AnqpnairealmOutput
	ToAnqpnairealmOutputWithContext(ctx context.Context) AnqpnairealmOutput
}

func (*Anqpnairealm) ElementType() reflect.Type {
	return reflect.TypeOf((**Anqpnairealm)(nil)).Elem()
}

func (i *Anqpnairealm) ToAnqpnairealmOutput() AnqpnairealmOutput {
	return i.ToAnqpnairealmOutputWithContext(context.Background())
}

func (i *Anqpnairealm) ToAnqpnairealmOutputWithContext(ctx context.Context) AnqpnairealmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnqpnairealmOutput)
}

// AnqpnairealmArrayInput is an input type that accepts AnqpnairealmArray and AnqpnairealmArrayOutput values.
// You can construct a concrete instance of `AnqpnairealmArrayInput` via:
//
//	AnqpnairealmArray{ AnqpnairealmArgs{...} }
type AnqpnairealmArrayInput interface {
	pulumi.Input

	ToAnqpnairealmArrayOutput() AnqpnairealmArrayOutput
	ToAnqpnairealmArrayOutputWithContext(context.Context) AnqpnairealmArrayOutput
}

type AnqpnairealmArray []AnqpnairealmInput

func (AnqpnairealmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Anqpnairealm)(nil)).Elem()
}

func (i AnqpnairealmArray) ToAnqpnairealmArrayOutput() AnqpnairealmArrayOutput {
	return i.ToAnqpnairealmArrayOutputWithContext(context.Background())
}

func (i AnqpnairealmArray) ToAnqpnairealmArrayOutputWithContext(ctx context.Context) AnqpnairealmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnqpnairealmArrayOutput)
}

// AnqpnairealmMapInput is an input type that accepts AnqpnairealmMap and AnqpnairealmMapOutput values.
// You can construct a concrete instance of `AnqpnairealmMapInput` via:
//
//	AnqpnairealmMap{ "key": AnqpnairealmArgs{...} }
type AnqpnairealmMapInput interface {
	pulumi.Input

	ToAnqpnairealmMapOutput() AnqpnairealmMapOutput
	ToAnqpnairealmMapOutputWithContext(context.Context) AnqpnairealmMapOutput
}

type AnqpnairealmMap map[string]AnqpnairealmInput

func (AnqpnairealmMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Anqpnairealm)(nil)).Elem()
}

func (i AnqpnairealmMap) ToAnqpnairealmMapOutput() AnqpnairealmMapOutput {
	return i.ToAnqpnairealmMapOutputWithContext(context.Background())
}

func (i AnqpnairealmMap) ToAnqpnairealmMapOutputWithContext(ctx context.Context) AnqpnairealmMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnqpnairealmMapOutput)
}

type AnqpnairealmOutput struct{ *pulumi.OutputState }

func (AnqpnairealmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Anqpnairealm)(nil)).Elem()
}

func (o AnqpnairealmOutput) ToAnqpnairealmOutput() AnqpnairealmOutput {
	return o
}

func (o AnqpnairealmOutput) ToAnqpnairealmOutputWithContext(ctx context.Context) AnqpnairealmOutput {
	return o
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o AnqpnairealmOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Anqpnairealm) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o AnqpnairealmOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Anqpnairealm) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// NAI list. The structure of `naiList` block is documented below.
func (o AnqpnairealmOutput) NaiLists() AnqpnairealmNaiListArrayOutput {
	return o.ApplyT(func(v *Anqpnairealm) AnqpnairealmNaiListArrayOutput { return v.NaiLists }).(AnqpnairealmNaiListArrayOutput)
}

// NAI realm list name.
func (o AnqpnairealmOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Anqpnairealm) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o AnqpnairealmOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Anqpnairealm) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type AnqpnairealmArrayOutput struct{ *pulumi.OutputState }

func (AnqpnairealmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Anqpnairealm)(nil)).Elem()
}

func (o AnqpnairealmArrayOutput) ToAnqpnairealmArrayOutput() AnqpnairealmArrayOutput {
	return o
}

func (o AnqpnairealmArrayOutput) ToAnqpnairealmArrayOutputWithContext(ctx context.Context) AnqpnairealmArrayOutput {
	return o
}

func (o AnqpnairealmArrayOutput) Index(i pulumi.IntInput) AnqpnairealmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Anqpnairealm {
		return vs[0].([]*Anqpnairealm)[vs[1].(int)]
	}).(AnqpnairealmOutput)
}

type AnqpnairealmMapOutput struct{ *pulumi.OutputState }

func (AnqpnairealmMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Anqpnairealm)(nil)).Elem()
}

func (o AnqpnairealmMapOutput) ToAnqpnairealmMapOutput() AnqpnairealmMapOutput {
	return o
}

func (o AnqpnairealmMapOutput) ToAnqpnairealmMapOutputWithContext(ctx context.Context) AnqpnairealmMapOutput {
	return o
}

func (o AnqpnairealmMapOutput) MapIndex(k pulumi.StringInput) AnqpnairealmOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Anqpnairealm {
		return vs[0].(map[string]*Anqpnairealm)[vs[1].(string)]
	}).(AnqpnairealmOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AnqpnairealmInput)(nil)).Elem(), &Anqpnairealm{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnqpnairealmArrayInput)(nil)).Elem(), AnqpnairealmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnqpnairealmMapInput)(nil)).Elem(), AnqpnairealmMap{})
	pulumi.RegisterOutputType(AnqpnairealmOutput{})
	pulumi.RegisterOutputType(AnqpnairealmArrayOutput{})
	pulumi.RegisterOutputType(AnqpnairealmMapOutput{})
}
