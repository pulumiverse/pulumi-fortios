// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hotspot20

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure operator friendly name.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/wirelesscontroller"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := wirelesscontroller.NewH2qpoperatorname(ctx, "trname", nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// WirelessControllerHotspot20 H2QpOperatorName can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:wirelesscontroller/hotspot20/h2qpoperatorname:H2qpoperatorname labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:wirelesscontroller/hotspot20/h2qpoperatorname:H2qpoperatorname labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type H2qpoperatorname struct {
	pulumi.CustomResourceState

	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Friendly name ID.
	Name pulumi.StringOutput `pulumi:"name"`
	// Name list. The structure of `valueList` block is documented below.
	ValueLists H2qpoperatornameValueListArrayOutput `pulumi:"valueLists"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewH2qpoperatorname registers a new resource with the given unique name, arguments, and options.
func NewH2qpoperatorname(ctx *pulumi.Context,
	name string, args *H2qpoperatornameArgs, opts ...pulumi.ResourceOption) (*H2qpoperatorname, error) {
	if args == nil {
		args = &H2qpoperatornameArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource H2qpoperatorname
	err := ctx.RegisterResource("fortios:wirelesscontroller/hotspot20/h2qpoperatorname:H2qpoperatorname", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetH2qpoperatorname gets an existing H2qpoperatorname resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetH2qpoperatorname(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *H2qpoperatornameState, opts ...pulumi.ResourceOption) (*H2qpoperatorname, error) {
	var resource H2qpoperatorname
	err := ctx.ReadResource("fortios:wirelesscontroller/hotspot20/h2qpoperatorname:H2qpoperatorname", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering H2qpoperatorname resources.
type h2qpoperatornameState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Friendly name ID.
	Name *string `pulumi:"name"`
	// Name list. The structure of `valueList` block is documented below.
	ValueLists []H2qpoperatornameValueList `pulumi:"valueLists"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type H2qpoperatornameState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Friendly name ID.
	Name pulumi.StringPtrInput
	// Name list. The structure of `valueList` block is documented below.
	ValueLists H2qpoperatornameValueListArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (H2qpoperatornameState) ElementType() reflect.Type {
	return reflect.TypeOf((*h2qpoperatornameState)(nil)).Elem()
}

type h2qpoperatornameArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Friendly name ID.
	Name *string `pulumi:"name"`
	// Name list. The structure of `valueList` block is documented below.
	ValueLists []H2qpoperatornameValueList `pulumi:"valueLists"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a H2qpoperatorname resource.
type H2qpoperatornameArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Friendly name ID.
	Name pulumi.StringPtrInput
	// Name list. The structure of `valueList` block is documented below.
	ValueLists H2qpoperatornameValueListArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (H2qpoperatornameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*h2qpoperatornameArgs)(nil)).Elem()
}

type H2qpoperatornameInput interface {
	pulumi.Input

	ToH2qpoperatornameOutput() H2qpoperatornameOutput
	ToH2qpoperatornameOutputWithContext(ctx context.Context) H2qpoperatornameOutput
}

func (*H2qpoperatorname) ElementType() reflect.Type {
	return reflect.TypeOf((**H2qpoperatorname)(nil)).Elem()
}

func (i *H2qpoperatorname) ToH2qpoperatornameOutput() H2qpoperatornameOutput {
	return i.ToH2qpoperatornameOutputWithContext(context.Background())
}

func (i *H2qpoperatorname) ToH2qpoperatornameOutputWithContext(ctx context.Context) H2qpoperatornameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(H2qpoperatornameOutput)
}

// H2qpoperatornameArrayInput is an input type that accepts H2qpoperatornameArray and H2qpoperatornameArrayOutput values.
// You can construct a concrete instance of `H2qpoperatornameArrayInput` via:
//
//	H2qpoperatornameArray{ H2qpoperatornameArgs{...} }
type H2qpoperatornameArrayInput interface {
	pulumi.Input

	ToH2qpoperatornameArrayOutput() H2qpoperatornameArrayOutput
	ToH2qpoperatornameArrayOutputWithContext(context.Context) H2qpoperatornameArrayOutput
}

type H2qpoperatornameArray []H2qpoperatornameInput

func (H2qpoperatornameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*H2qpoperatorname)(nil)).Elem()
}

func (i H2qpoperatornameArray) ToH2qpoperatornameArrayOutput() H2qpoperatornameArrayOutput {
	return i.ToH2qpoperatornameArrayOutputWithContext(context.Background())
}

func (i H2qpoperatornameArray) ToH2qpoperatornameArrayOutputWithContext(ctx context.Context) H2qpoperatornameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(H2qpoperatornameArrayOutput)
}

// H2qpoperatornameMapInput is an input type that accepts H2qpoperatornameMap and H2qpoperatornameMapOutput values.
// You can construct a concrete instance of `H2qpoperatornameMapInput` via:
//
//	H2qpoperatornameMap{ "key": H2qpoperatornameArgs{...} }
type H2qpoperatornameMapInput interface {
	pulumi.Input

	ToH2qpoperatornameMapOutput() H2qpoperatornameMapOutput
	ToH2qpoperatornameMapOutputWithContext(context.Context) H2qpoperatornameMapOutput
}

type H2qpoperatornameMap map[string]H2qpoperatornameInput

func (H2qpoperatornameMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*H2qpoperatorname)(nil)).Elem()
}

func (i H2qpoperatornameMap) ToH2qpoperatornameMapOutput() H2qpoperatornameMapOutput {
	return i.ToH2qpoperatornameMapOutputWithContext(context.Background())
}

func (i H2qpoperatornameMap) ToH2qpoperatornameMapOutputWithContext(ctx context.Context) H2qpoperatornameMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(H2qpoperatornameMapOutput)
}

type H2qpoperatornameOutput struct{ *pulumi.OutputState }

func (H2qpoperatornameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**H2qpoperatorname)(nil)).Elem()
}

func (o H2qpoperatornameOutput) ToH2qpoperatornameOutput() H2qpoperatornameOutput {
	return o
}

func (o H2qpoperatornameOutput) ToH2qpoperatornameOutputWithContext(ctx context.Context) H2qpoperatornameOutput {
	return o
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o H2qpoperatornameOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *H2qpoperatorname) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o H2qpoperatornameOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *H2qpoperatorname) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Friendly name ID.
func (o H2qpoperatornameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *H2qpoperatorname) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Name list. The structure of `valueList` block is documented below.
func (o H2qpoperatornameOutput) ValueLists() H2qpoperatornameValueListArrayOutput {
	return o.ApplyT(func(v *H2qpoperatorname) H2qpoperatornameValueListArrayOutput { return v.ValueLists }).(H2qpoperatornameValueListArrayOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o H2qpoperatornameOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *H2qpoperatorname) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type H2qpoperatornameArrayOutput struct{ *pulumi.OutputState }

func (H2qpoperatornameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*H2qpoperatorname)(nil)).Elem()
}

func (o H2qpoperatornameArrayOutput) ToH2qpoperatornameArrayOutput() H2qpoperatornameArrayOutput {
	return o
}

func (o H2qpoperatornameArrayOutput) ToH2qpoperatornameArrayOutputWithContext(ctx context.Context) H2qpoperatornameArrayOutput {
	return o
}

func (o H2qpoperatornameArrayOutput) Index(i pulumi.IntInput) H2qpoperatornameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *H2qpoperatorname {
		return vs[0].([]*H2qpoperatorname)[vs[1].(int)]
	}).(H2qpoperatornameOutput)
}

type H2qpoperatornameMapOutput struct{ *pulumi.OutputState }

func (H2qpoperatornameMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*H2qpoperatorname)(nil)).Elem()
}

func (o H2qpoperatornameMapOutput) ToH2qpoperatornameMapOutput() H2qpoperatornameMapOutput {
	return o
}

func (o H2qpoperatornameMapOutput) ToH2qpoperatornameMapOutputWithContext(ctx context.Context) H2qpoperatornameMapOutput {
	return o
}

func (o H2qpoperatornameMapOutput) MapIndex(k pulumi.StringInput) H2qpoperatornameOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *H2qpoperatorname {
		return vs[0].(map[string]*H2qpoperatorname)[vs[1].(string)]
	}).(H2qpoperatornameOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*H2qpoperatornameInput)(nil)).Elem(), &H2qpoperatorname{})
	pulumi.RegisterInputType(reflect.TypeOf((*H2qpoperatornameArrayInput)(nil)).Elem(), H2qpoperatornameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*H2qpoperatornameMapInput)(nil)).Elem(), H2qpoperatornameMap{})
	pulumi.RegisterOutputType(H2qpoperatornameOutput{})
	pulumi.RegisterOutputType(H2qpoperatornameArrayOutput{})
	pulumi.RegisterOutputType(H2qpoperatornameMapOutput{})
}
