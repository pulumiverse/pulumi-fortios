// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hotspot20

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure hotspot profile.
//
// ## Import
//
// WirelessControllerHotspot20 HsProfile can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:wirelesscontroller/hotspot20/hsprofile:Hsprofile labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:wirelesscontroller/hotspot20/hsprofile:Hsprofile labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Hsprofile struct {
	pulumi.CustomResourceState

	// Enable/disable additional step required for access (ASRA). Valid values: `enable`, `disable`.
	AccessNetworkAsra pulumi.StringOutput `pulumi:"accessNetworkAsra"`
	// Enable/disable emergency services reachable (ESR). Valid values: `enable`, `disable`.
	AccessNetworkEsr pulumi.StringOutput `pulumi:"accessNetworkEsr"`
	// Enable/disable connectivity to the Internet. Valid values: `enable`, `disable`.
	AccessNetworkInternet pulumi.StringOutput `pulumi:"accessNetworkInternet"`
	// Access network type. Valid values: `private-network`, `private-network-with-guest-access`, `chargeable-public-network`, `free-public-network`, `personal-device-network`, `emergency-services-only-network`, `test-or-experimental`, `wildcard`.
	AccessNetworkType pulumi.StringOutput `pulumi:"accessNetworkType"`
	// Enable/disable unauthenticated emergency service accessible (UESA). Valid values: `enable`, `disable`.
	AccessNetworkUesa pulumi.StringOutput `pulumi:"accessNetworkUesa"`
	// Advice of charge.
	AdviceOfCharge pulumi.StringOutput `pulumi:"adviceOfCharge"`
	// ANQP Domain ID (0-65535).
	AnqpDomainId pulumi.IntOutput `pulumi:"anqpDomainId"`
	// Enable/disable basic service set (BSS) transition Support. Valid values: `enable`, `disable`.
	BssTransition pulumi.StringOutput `pulumi:"bssTransition"`
	// Connection capability name.
	ConnCap pulumi.StringOutput `pulumi:"connCap"`
	// Deauthentication request timeout (in seconds).
	DeauthRequestTimeout pulumi.IntOutput `pulumi:"deauthRequestTimeout"`
	// Enable/disable downstream group-addressed forwarding (DGAF). Valid values: `enable`, `disable`.
	Dgaf pulumi.StringOutput `pulumi:"dgaf"`
	// Domain name.
	DomainName pulumi.StringOutput `pulumi:"domainName"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// GAS comeback delay (0 or 100 - 4000 milliseconds, default = 500).
	GasComebackDelay pulumi.IntOutput `pulumi:"gasComebackDelay"`
	// GAS fragmentation limit (512 - 4096, default = 1024).
	GasFragmentationLimit pulumi.IntOutput `pulumi:"gasFragmentationLimit"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Homogeneous extended service set identifier (HESSID).
	Hessid pulumi.StringOutput `pulumi:"hessid"`
	// IP address type name.
	IpAddrType pulumi.StringOutput `pulumi:"ipAddrType"`
	// Enable/disable Layer 2 traffic inspection and filtering. Valid values: `enable`, `disable`.
	L2tif pulumi.StringOutput `pulumi:"l2tif"`
	// 3GPP PLMN name.
	N3gppPlmn pulumi.StringOutput `pulumi:"n3gppPlmn"`
	// NAI realm list name.
	NaiRealm pulumi.StringOutput `pulumi:"naiRealm"`
	// Hotspot profile name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Network authentication name.
	NetworkAuth pulumi.StringOutput `pulumi:"networkAuth"`
	// Operator friendly name.
	OperFriendlyName pulumi.StringOutput `pulumi:"operFriendlyName"`
	// Operator icon.
	OperIcon pulumi.StringOutput `pulumi:"operIcon"`
	// OSU Provider NAI.
	OsuProviderNai pulumi.StringOutput `pulumi:"osuProviderNai"`
	// Manually selected list of OSU provider(s). The structure of `osuProvider` block is documented below.
	OsuProviders HsprofileOsuProviderArrayOutput `pulumi:"osuProviders"`
	// Online sign up (OSU) SSID.
	OsuSsid pulumi.StringOutput `pulumi:"osuSsid"`
	// Enable/disable Pre-Association Message Exchange BSSID Independent (PAME-BI). Valid values: `disable`, `enable`.
	PameBi pulumi.StringOutput `pulumi:"pameBi"`
	// Enable/disable Proxy ARP. Valid values: `enable`, `disable`.
	ProxyArp pulumi.StringOutput `pulumi:"proxyArp"`
	// QoS MAP set ID.
	QosMap pulumi.StringOutput `pulumi:"qosMap"`
	// Hotspot 2.0 Release number (1, 2, 3, default = 2).
	Release pulumi.IntOutput `pulumi:"release"`
	// Roaming consortium list name.
	RoamingConsortium pulumi.StringOutput `pulumi:"roamingConsortium"`
	// Terms and conditions.
	TermsAndConditions pulumi.StringOutput `pulumi:"termsAndConditions"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Venue group. Valid values: `unspecified`, `assembly`, `business`, `educational`, `factory`, `institutional`, `mercantile`, `residential`, `storage`, `utility`, `vehicular`, `outdoor`.
	VenueGroup pulumi.StringOutput `pulumi:"venueGroup"`
	// Venue name.
	VenueName pulumi.StringOutput `pulumi:"venueName"`
	// Venue type. Valid values: `unspecified`, `arena`, `stadium`, `passenger-terminal`, `amphitheater`, `amusement-park`, `place-of-worship`, `convention-center`, `library`, `museum`, `restaurant`, `theater`, `bar`, `coffee-shop`, `zoo-or-aquarium`, `emergency-center`, `doctor-office`, `bank`, `fire-station`, `police-station`, `post-office`, `professional-office`, `research-facility`, `attorney-office`, `primary-school`, `secondary-school`, `university-or-college`, `factory`, `hospital`, `long-term-care-facility`, `rehab-center`, `group-home`, `prison-or-jail`, `retail-store`, `grocery-market`, `auto-service-station`, `shopping-mall`, `gas-station`, `private`, `hotel-or-motel`, `dormitory`, `boarding-house`, `automobile`, `airplane`, `bus`, `ferry`, `ship-or-boat`, `train`, `motor-bike`, `muni-mesh-network`, `city-park`, `rest-area`, `traffic-control`, `bus-stop`, `kiosk`.
	VenueType pulumi.StringOutput `pulumi:"venueType"`
	// Venue name.
	VenueUrl pulumi.StringOutput `pulumi:"venueUrl"`
	// WAN metric name.
	WanMetrics pulumi.StringOutput `pulumi:"wanMetrics"`
	// Enable/disable wireless network management (WNM) sleep mode. Valid values: `enable`, `disable`.
	WnmSleepMode pulumi.StringOutput `pulumi:"wnmSleepMode"`
}

// NewHsprofile registers a new resource with the given unique name, arguments, and options.
func NewHsprofile(ctx *pulumi.Context,
	name string, args *HsprofileArgs, opts ...pulumi.ResourceOption) (*Hsprofile, error) {
	if args == nil {
		args = &HsprofileArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Hsprofile
	err := ctx.RegisterResource("fortios:wirelesscontroller/hotspot20/hsprofile:Hsprofile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHsprofile gets an existing Hsprofile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHsprofile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HsprofileState, opts ...pulumi.ResourceOption) (*Hsprofile, error) {
	var resource Hsprofile
	err := ctx.ReadResource("fortios:wirelesscontroller/hotspot20/hsprofile:Hsprofile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Hsprofile resources.
type hsprofileState struct {
	// Enable/disable additional step required for access (ASRA). Valid values: `enable`, `disable`.
	AccessNetworkAsra *string `pulumi:"accessNetworkAsra"`
	// Enable/disable emergency services reachable (ESR). Valid values: `enable`, `disable`.
	AccessNetworkEsr *string `pulumi:"accessNetworkEsr"`
	// Enable/disable connectivity to the Internet. Valid values: `enable`, `disable`.
	AccessNetworkInternet *string `pulumi:"accessNetworkInternet"`
	// Access network type. Valid values: `private-network`, `private-network-with-guest-access`, `chargeable-public-network`, `free-public-network`, `personal-device-network`, `emergency-services-only-network`, `test-or-experimental`, `wildcard`.
	AccessNetworkType *string `pulumi:"accessNetworkType"`
	// Enable/disable unauthenticated emergency service accessible (UESA). Valid values: `enable`, `disable`.
	AccessNetworkUesa *string `pulumi:"accessNetworkUesa"`
	// Advice of charge.
	AdviceOfCharge *string `pulumi:"adviceOfCharge"`
	// ANQP Domain ID (0-65535).
	AnqpDomainId *int `pulumi:"anqpDomainId"`
	// Enable/disable basic service set (BSS) transition Support. Valid values: `enable`, `disable`.
	BssTransition *string `pulumi:"bssTransition"`
	// Connection capability name.
	ConnCap *string `pulumi:"connCap"`
	// Deauthentication request timeout (in seconds).
	DeauthRequestTimeout *int `pulumi:"deauthRequestTimeout"`
	// Enable/disable downstream group-addressed forwarding (DGAF). Valid values: `enable`, `disable`.
	Dgaf *string `pulumi:"dgaf"`
	// Domain name.
	DomainName *string `pulumi:"domainName"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// GAS comeback delay (0 or 100 - 4000 milliseconds, default = 500).
	GasComebackDelay *int `pulumi:"gasComebackDelay"`
	// GAS fragmentation limit (512 - 4096, default = 1024).
	GasFragmentationLimit *int `pulumi:"gasFragmentationLimit"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Homogeneous extended service set identifier (HESSID).
	Hessid *string `pulumi:"hessid"`
	// IP address type name.
	IpAddrType *string `pulumi:"ipAddrType"`
	// Enable/disable Layer 2 traffic inspection and filtering. Valid values: `enable`, `disable`.
	L2tif *string `pulumi:"l2tif"`
	// 3GPP PLMN name.
	N3gppPlmn *string `pulumi:"n3gppPlmn"`
	// NAI realm list name.
	NaiRealm *string `pulumi:"naiRealm"`
	// Hotspot profile name.
	Name *string `pulumi:"name"`
	// Network authentication name.
	NetworkAuth *string `pulumi:"networkAuth"`
	// Operator friendly name.
	OperFriendlyName *string `pulumi:"operFriendlyName"`
	// Operator icon.
	OperIcon *string `pulumi:"operIcon"`
	// OSU Provider NAI.
	OsuProviderNai *string `pulumi:"osuProviderNai"`
	// Manually selected list of OSU provider(s). The structure of `osuProvider` block is documented below.
	OsuProviders []HsprofileOsuProvider `pulumi:"osuProviders"`
	// Online sign up (OSU) SSID.
	OsuSsid *string `pulumi:"osuSsid"`
	// Enable/disable Pre-Association Message Exchange BSSID Independent (PAME-BI). Valid values: `disable`, `enable`.
	PameBi *string `pulumi:"pameBi"`
	// Enable/disable Proxy ARP. Valid values: `enable`, `disable`.
	ProxyArp *string `pulumi:"proxyArp"`
	// QoS MAP set ID.
	QosMap *string `pulumi:"qosMap"`
	// Hotspot 2.0 Release number (1, 2, 3, default = 2).
	Release *int `pulumi:"release"`
	// Roaming consortium list name.
	RoamingConsortium *string `pulumi:"roamingConsortium"`
	// Terms and conditions.
	TermsAndConditions *string `pulumi:"termsAndConditions"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Venue group. Valid values: `unspecified`, `assembly`, `business`, `educational`, `factory`, `institutional`, `mercantile`, `residential`, `storage`, `utility`, `vehicular`, `outdoor`.
	VenueGroup *string `pulumi:"venueGroup"`
	// Venue name.
	VenueName *string `pulumi:"venueName"`
	// Venue type. Valid values: `unspecified`, `arena`, `stadium`, `passenger-terminal`, `amphitheater`, `amusement-park`, `place-of-worship`, `convention-center`, `library`, `museum`, `restaurant`, `theater`, `bar`, `coffee-shop`, `zoo-or-aquarium`, `emergency-center`, `doctor-office`, `bank`, `fire-station`, `police-station`, `post-office`, `professional-office`, `research-facility`, `attorney-office`, `primary-school`, `secondary-school`, `university-or-college`, `factory`, `hospital`, `long-term-care-facility`, `rehab-center`, `group-home`, `prison-or-jail`, `retail-store`, `grocery-market`, `auto-service-station`, `shopping-mall`, `gas-station`, `private`, `hotel-or-motel`, `dormitory`, `boarding-house`, `automobile`, `airplane`, `bus`, `ferry`, `ship-or-boat`, `train`, `motor-bike`, `muni-mesh-network`, `city-park`, `rest-area`, `traffic-control`, `bus-stop`, `kiosk`.
	VenueType *string `pulumi:"venueType"`
	// Venue name.
	VenueUrl *string `pulumi:"venueUrl"`
	// WAN metric name.
	WanMetrics *string `pulumi:"wanMetrics"`
	// Enable/disable wireless network management (WNM) sleep mode. Valid values: `enable`, `disable`.
	WnmSleepMode *string `pulumi:"wnmSleepMode"`
}

type HsprofileState struct {
	// Enable/disable additional step required for access (ASRA). Valid values: `enable`, `disable`.
	AccessNetworkAsra pulumi.StringPtrInput
	// Enable/disable emergency services reachable (ESR). Valid values: `enable`, `disable`.
	AccessNetworkEsr pulumi.StringPtrInput
	// Enable/disable connectivity to the Internet. Valid values: `enable`, `disable`.
	AccessNetworkInternet pulumi.StringPtrInput
	// Access network type. Valid values: `private-network`, `private-network-with-guest-access`, `chargeable-public-network`, `free-public-network`, `personal-device-network`, `emergency-services-only-network`, `test-or-experimental`, `wildcard`.
	AccessNetworkType pulumi.StringPtrInput
	// Enable/disable unauthenticated emergency service accessible (UESA). Valid values: `enable`, `disable`.
	AccessNetworkUesa pulumi.StringPtrInput
	// Advice of charge.
	AdviceOfCharge pulumi.StringPtrInput
	// ANQP Domain ID (0-65535).
	AnqpDomainId pulumi.IntPtrInput
	// Enable/disable basic service set (BSS) transition Support. Valid values: `enable`, `disable`.
	BssTransition pulumi.StringPtrInput
	// Connection capability name.
	ConnCap pulumi.StringPtrInput
	// Deauthentication request timeout (in seconds).
	DeauthRequestTimeout pulumi.IntPtrInput
	// Enable/disable downstream group-addressed forwarding (DGAF). Valid values: `enable`, `disable`.
	Dgaf pulumi.StringPtrInput
	// Domain name.
	DomainName pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// GAS comeback delay (0 or 100 - 4000 milliseconds, default = 500).
	GasComebackDelay pulumi.IntPtrInput
	// GAS fragmentation limit (512 - 4096, default = 1024).
	GasFragmentationLimit pulumi.IntPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Homogeneous extended service set identifier (HESSID).
	Hessid pulumi.StringPtrInput
	// IP address type name.
	IpAddrType pulumi.StringPtrInput
	// Enable/disable Layer 2 traffic inspection and filtering. Valid values: `enable`, `disable`.
	L2tif pulumi.StringPtrInput
	// 3GPP PLMN name.
	N3gppPlmn pulumi.StringPtrInput
	// NAI realm list name.
	NaiRealm pulumi.StringPtrInput
	// Hotspot profile name.
	Name pulumi.StringPtrInput
	// Network authentication name.
	NetworkAuth pulumi.StringPtrInput
	// Operator friendly name.
	OperFriendlyName pulumi.StringPtrInput
	// Operator icon.
	OperIcon pulumi.StringPtrInput
	// OSU Provider NAI.
	OsuProviderNai pulumi.StringPtrInput
	// Manually selected list of OSU provider(s). The structure of `osuProvider` block is documented below.
	OsuProviders HsprofileOsuProviderArrayInput
	// Online sign up (OSU) SSID.
	OsuSsid pulumi.StringPtrInput
	// Enable/disable Pre-Association Message Exchange BSSID Independent (PAME-BI). Valid values: `disable`, `enable`.
	PameBi pulumi.StringPtrInput
	// Enable/disable Proxy ARP. Valid values: `enable`, `disable`.
	ProxyArp pulumi.StringPtrInput
	// QoS MAP set ID.
	QosMap pulumi.StringPtrInput
	// Hotspot 2.0 Release number (1, 2, 3, default = 2).
	Release pulumi.IntPtrInput
	// Roaming consortium list name.
	RoamingConsortium pulumi.StringPtrInput
	// Terms and conditions.
	TermsAndConditions pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Venue group. Valid values: `unspecified`, `assembly`, `business`, `educational`, `factory`, `institutional`, `mercantile`, `residential`, `storage`, `utility`, `vehicular`, `outdoor`.
	VenueGroup pulumi.StringPtrInput
	// Venue name.
	VenueName pulumi.StringPtrInput
	// Venue type. Valid values: `unspecified`, `arena`, `stadium`, `passenger-terminal`, `amphitheater`, `amusement-park`, `place-of-worship`, `convention-center`, `library`, `museum`, `restaurant`, `theater`, `bar`, `coffee-shop`, `zoo-or-aquarium`, `emergency-center`, `doctor-office`, `bank`, `fire-station`, `police-station`, `post-office`, `professional-office`, `research-facility`, `attorney-office`, `primary-school`, `secondary-school`, `university-or-college`, `factory`, `hospital`, `long-term-care-facility`, `rehab-center`, `group-home`, `prison-or-jail`, `retail-store`, `grocery-market`, `auto-service-station`, `shopping-mall`, `gas-station`, `private`, `hotel-or-motel`, `dormitory`, `boarding-house`, `automobile`, `airplane`, `bus`, `ferry`, `ship-or-boat`, `train`, `motor-bike`, `muni-mesh-network`, `city-park`, `rest-area`, `traffic-control`, `bus-stop`, `kiosk`.
	VenueType pulumi.StringPtrInput
	// Venue name.
	VenueUrl pulumi.StringPtrInput
	// WAN metric name.
	WanMetrics pulumi.StringPtrInput
	// Enable/disable wireless network management (WNM) sleep mode. Valid values: `enable`, `disable`.
	WnmSleepMode pulumi.StringPtrInput
}

func (HsprofileState) ElementType() reflect.Type {
	return reflect.TypeOf((*hsprofileState)(nil)).Elem()
}

type hsprofileArgs struct {
	// Enable/disable additional step required for access (ASRA). Valid values: `enable`, `disable`.
	AccessNetworkAsra *string `pulumi:"accessNetworkAsra"`
	// Enable/disable emergency services reachable (ESR). Valid values: `enable`, `disable`.
	AccessNetworkEsr *string `pulumi:"accessNetworkEsr"`
	// Enable/disable connectivity to the Internet. Valid values: `enable`, `disable`.
	AccessNetworkInternet *string `pulumi:"accessNetworkInternet"`
	// Access network type. Valid values: `private-network`, `private-network-with-guest-access`, `chargeable-public-network`, `free-public-network`, `personal-device-network`, `emergency-services-only-network`, `test-or-experimental`, `wildcard`.
	AccessNetworkType *string `pulumi:"accessNetworkType"`
	// Enable/disable unauthenticated emergency service accessible (UESA). Valid values: `enable`, `disable`.
	AccessNetworkUesa *string `pulumi:"accessNetworkUesa"`
	// Advice of charge.
	AdviceOfCharge *string `pulumi:"adviceOfCharge"`
	// ANQP Domain ID (0-65535).
	AnqpDomainId *int `pulumi:"anqpDomainId"`
	// Enable/disable basic service set (BSS) transition Support. Valid values: `enable`, `disable`.
	BssTransition *string `pulumi:"bssTransition"`
	// Connection capability name.
	ConnCap *string `pulumi:"connCap"`
	// Deauthentication request timeout (in seconds).
	DeauthRequestTimeout *int `pulumi:"deauthRequestTimeout"`
	// Enable/disable downstream group-addressed forwarding (DGAF). Valid values: `enable`, `disable`.
	Dgaf *string `pulumi:"dgaf"`
	// Domain name.
	DomainName *string `pulumi:"domainName"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// GAS comeback delay (0 or 100 - 4000 milliseconds, default = 500).
	GasComebackDelay *int `pulumi:"gasComebackDelay"`
	// GAS fragmentation limit (512 - 4096, default = 1024).
	GasFragmentationLimit *int `pulumi:"gasFragmentationLimit"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Homogeneous extended service set identifier (HESSID).
	Hessid *string `pulumi:"hessid"`
	// IP address type name.
	IpAddrType *string `pulumi:"ipAddrType"`
	// Enable/disable Layer 2 traffic inspection and filtering. Valid values: `enable`, `disable`.
	L2tif *string `pulumi:"l2tif"`
	// 3GPP PLMN name.
	N3gppPlmn *string `pulumi:"n3gppPlmn"`
	// NAI realm list name.
	NaiRealm *string `pulumi:"naiRealm"`
	// Hotspot profile name.
	Name *string `pulumi:"name"`
	// Network authentication name.
	NetworkAuth *string `pulumi:"networkAuth"`
	// Operator friendly name.
	OperFriendlyName *string `pulumi:"operFriendlyName"`
	// Operator icon.
	OperIcon *string `pulumi:"operIcon"`
	// OSU Provider NAI.
	OsuProviderNai *string `pulumi:"osuProviderNai"`
	// Manually selected list of OSU provider(s). The structure of `osuProvider` block is documented below.
	OsuProviders []HsprofileOsuProvider `pulumi:"osuProviders"`
	// Online sign up (OSU) SSID.
	OsuSsid *string `pulumi:"osuSsid"`
	// Enable/disable Pre-Association Message Exchange BSSID Independent (PAME-BI). Valid values: `disable`, `enable`.
	PameBi *string `pulumi:"pameBi"`
	// Enable/disable Proxy ARP. Valid values: `enable`, `disable`.
	ProxyArp *string `pulumi:"proxyArp"`
	// QoS MAP set ID.
	QosMap *string `pulumi:"qosMap"`
	// Hotspot 2.0 Release number (1, 2, 3, default = 2).
	Release *int `pulumi:"release"`
	// Roaming consortium list name.
	RoamingConsortium *string `pulumi:"roamingConsortium"`
	// Terms and conditions.
	TermsAndConditions *string `pulumi:"termsAndConditions"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Venue group. Valid values: `unspecified`, `assembly`, `business`, `educational`, `factory`, `institutional`, `mercantile`, `residential`, `storage`, `utility`, `vehicular`, `outdoor`.
	VenueGroup *string `pulumi:"venueGroup"`
	// Venue name.
	VenueName *string `pulumi:"venueName"`
	// Venue type. Valid values: `unspecified`, `arena`, `stadium`, `passenger-terminal`, `amphitheater`, `amusement-park`, `place-of-worship`, `convention-center`, `library`, `museum`, `restaurant`, `theater`, `bar`, `coffee-shop`, `zoo-or-aquarium`, `emergency-center`, `doctor-office`, `bank`, `fire-station`, `police-station`, `post-office`, `professional-office`, `research-facility`, `attorney-office`, `primary-school`, `secondary-school`, `university-or-college`, `factory`, `hospital`, `long-term-care-facility`, `rehab-center`, `group-home`, `prison-or-jail`, `retail-store`, `grocery-market`, `auto-service-station`, `shopping-mall`, `gas-station`, `private`, `hotel-or-motel`, `dormitory`, `boarding-house`, `automobile`, `airplane`, `bus`, `ferry`, `ship-or-boat`, `train`, `motor-bike`, `muni-mesh-network`, `city-park`, `rest-area`, `traffic-control`, `bus-stop`, `kiosk`.
	VenueType *string `pulumi:"venueType"`
	// Venue name.
	VenueUrl *string `pulumi:"venueUrl"`
	// WAN metric name.
	WanMetrics *string `pulumi:"wanMetrics"`
	// Enable/disable wireless network management (WNM) sleep mode. Valid values: `enable`, `disable`.
	WnmSleepMode *string `pulumi:"wnmSleepMode"`
}

// The set of arguments for constructing a Hsprofile resource.
type HsprofileArgs struct {
	// Enable/disable additional step required for access (ASRA). Valid values: `enable`, `disable`.
	AccessNetworkAsra pulumi.StringPtrInput
	// Enable/disable emergency services reachable (ESR). Valid values: `enable`, `disable`.
	AccessNetworkEsr pulumi.StringPtrInput
	// Enable/disable connectivity to the Internet. Valid values: `enable`, `disable`.
	AccessNetworkInternet pulumi.StringPtrInput
	// Access network type. Valid values: `private-network`, `private-network-with-guest-access`, `chargeable-public-network`, `free-public-network`, `personal-device-network`, `emergency-services-only-network`, `test-or-experimental`, `wildcard`.
	AccessNetworkType pulumi.StringPtrInput
	// Enable/disable unauthenticated emergency service accessible (UESA). Valid values: `enable`, `disable`.
	AccessNetworkUesa pulumi.StringPtrInput
	// Advice of charge.
	AdviceOfCharge pulumi.StringPtrInput
	// ANQP Domain ID (0-65535).
	AnqpDomainId pulumi.IntPtrInput
	// Enable/disable basic service set (BSS) transition Support. Valid values: `enable`, `disable`.
	BssTransition pulumi.StringPtrInput
	// Connection capability name.
	ConnCap pulumi.StringPtrInput
	// Deauthentication request timeout (in seconds).
	DeauthRequestTimeout pulumi.IntPtrInput
	// Enable/disable downstream group-addressed forwarding (DGAF). Valid values: `enable`, `disable`.
	Dgaf pulumi.StringPtrInput
	// Domain name.
	DomainName pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// GAS comeback delay (0 or 100 - 4000 milliseconds, default = 500).
	GasComebackDelay pulumi.IntPtrInput
	// GAS fragmentation limit (512 - 4096, default = 1024).
	GasFragmentationLimit pulumi.IntPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Homogeneous extended service set identifier (HESSID).
	Hessid pulumi.StringPtrInput
	// IP address type name.
	IpAddrType pulumi.StringPtrInput
	// Enable/disable Layer 2 traffic inspection and filtering. Valid values: `enable`, `disable`.
	L2tif pulumi.StringPtrInput
	// 3GPP PLMN name.
	N3gppPlmn pulumi.StringPtrInput
	// NAI realm list name.
	NaiRealm pulumi.StringPtrInput
	// Hotspot profile name.
	Name pulumi.StringPtrInput
	// Network authentication name.
	NetworkAuth pulumi.StringPtrInput
	// Operator friendly name.
	OperFriendlyName pulumi.StringPtrInput
	// Operator icon.
	OperIcon pulumi.StringPtrInput
	// OSU Provider NAI.
	OsuProviderNai pulumi.StringPtrInput
	// Manually selected list of OSU provider(s). The structure of `osuProvider` block is documented below.
	OsuProviders HsprofileOsuProviderArrayInput
	// Online sign up (OSU) SSID.
	OsuSsid pulumi.StringPtrInput
	// Enable/disable Pre-Association Message Exchange BSSID Independent (PAME-BI). Valid values: `disable`, `enable`.
	PameBi pulumi.StringPtrInput
	// Enable/disable Proxy ARP. Valid values: `enable`, `disable`.
	ProxyArp pulumi.StringPtrInput
	// QoS MAP set ID.
	QosMap pulumi.StringPtrInput
	// Hotspot 2.0 Release number (1, 2, 3, default = 2).
	Release pulumi.IntPtrInput
	// Roaming consortium list name.
	RoamingConsortium pulumi.StringPtrInput
	// Terms and conditions.
	TermsAndConditions pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Venue group. Valid values: `unspecified`, `assembly`, `business`, `educational`, `factory`, `institutional`, `mercantile`, `residential`, `storage`, `utility`, `vehicular`, `outdoor`.
	VenueGroup pulumi.StringPtrInput
	// Venue name.
	VenueName pulumi.StringPtrInput
	// Venue type. Valid values: `unspecified`, `arena`, `stadium`, `passenger-terminal`, `amphitheater`, `amusement-park`, `place-of-worship`, `convention-center`, `library`, `museum`, `restaurant`, `theater`, `bar`, `coffee-shop`, `zoo-or-aquarium`, `emergency-center`, `doctor-office`, `bank`, `fire-station`, `police-station`, `post-office`, `professional-office`, `research-facility`, `attorney-office`, `primary-school`, `secondary-school`, `university-or-college`, `factory`, `hospital`, `long-term-care-facility`, `rehab-center`, `group-home`, `prison-or-jail`, `retail-store`, `grocery-market`, `auto-service-station`, `shopping-mall`, `gas-station`, `private`, `hotel-or-motel`, `dormitory`, `boarding-house`, `automobile`, `airplane`, `bus`, `ferry`, `ship-or-boat`, `train`, `motor-bike`, `muni-mesh-network`, `city-park`, `rest-area`, `traffic-control`, `bus-stop`, `kiosk`.
	VenueType pulumi.StringPtrInput
	// Venue name.
	VenueUrl pulumi.StringPtrInput
	// WAN metric name.
	WanMetrics pulumi.StringPtrInput
	// Enable/disable wireless network management (WNM) sleep mode. Valid values: `enable`, `disable`.
	WnmSleepMode pulumi.StringPtrInput
}

func (HsprofileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hsprofileArgs)(nil)).Elem()
}

type HsprofileInput interface {
	pulumi.Input

	ToHsprofileOutput() HsprofileOutput
	ToHsprofileOutputWithContext(ctx context.Context) HsprofileOutput
}

func (*Hsprofile) ElementType() reflect.Type {
	return reflect.TypeOf((**Hsprofile)(nil)).Elem()
}

func (i *Hsprofile) ToHsprofileOutput() HsprofileOutput {
	return i.ToHsprofileOutputWithContext(context.Background())
}

func (i *Hsprofile) ToHsprofileOutputWithContext(ctx context.Context) HsprofileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HsprofileOutput)
}

// HsprofileArrayInput is an input type that accepts HsprofileArray and HsprofileArrayOutput values.
// You can construct a concrete instance of `HsprofileArrayInput` via:
//
//	HsprofileArray{ HsprofileArgs{...} }
type HsprofileArrayInput interface {
	pulumi.Input

	ToHsprofileArrayOutput() HsprofileArrayOutput
	ToHsprofileArrayOutputWithContext(context.Context) HsprofileArrayOutput
}

type HsprofileArray []HsprofileInput

func (HsprofileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Hsprofile)(nil)).Elem()
}

func (i HsprofileArray) ToHsprofileArrayOutput() HsprofileArrayOutput {
	return i.ToHsprofileArrayOutputWithContext(context.Background())
}

func (i HsprofileArray) ToHsprofileArrayOutputWithContext(ctx context.Context) HsprofileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HsprofileArrayOutput)
}

// HsprofileMapInput is an input type that accepts HsprofileMap and HsprofileMapOutput values.
// You can construct a concrete instance of `HsprofileMapInput` via:
//
//	HsprofileMap{ "key": HsprofileArgs{...} }
type HsprofileMapInput interface {
	pulumi.Input

	ToHsprofileMapOutput() HsprofileMapOutput
	ToHsprofileMapOutputWithContext(context.Context) HsprofileMapOutput
}

type HsprofileMap map[string]HsprofileInput

func (HsprofileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Hsprofile)(nil)).Elem()
}

func (i HsprofileMap) ToHsprofileMapOutput() HsprofileMapOutput {
	return i.ToHsprofileMapOutputWithContext(context.Background())
}

func (i HsprofileMap) ToHsprofileMapOutputWithContext(ctx context.Context) HsprofileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HsprofileMapOutput)
}

type HsprofileOutput struct{ *pulumi.OutputState }

func (HsprofileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Hsprofile)(nil)).Elem()
}

func (o HsprofileOutput) ToHsprofileOutput() HsprofileOutput {
	return o
}

func (o HsprofileOutput) ToHsprofileOutputWithContext(ctx context.Context) HsprofileOutput {
	return o
}

// Enable/disable additional step required for access (ASRA). Valid values: `enable`, `disable`.
func (o HsprofileOutput) AccessNetworkAsra() pulumi.StringOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringOutput { return v.AccessNetworkAsra }).(pulumi.StringOutput)
}

// Enable/disable emergency services reachable (ESR). Valid values: `enable`, `disable`.
func (o HsprofileOutput) AccessNetworkEsr() pulumi.StringOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringOutput { return v.AccessNetworkEsr }).(pulumi.StringOutput)
}

// Enable/disable connectivity to the Internet. Valid values: `enable`, `disable`.
func (o HsprofileOutput) AccessNetworkInternet() pulumi.StringOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringOutput { return v.AccessNetworkInternet }).(pulumi.StringOutput)
}

// Access network type. Valid values: `private-network`, `private-network-with-guest-access`, `chargeable-public-network`, `free-public-network`, `personal-device-network`, `emergency-services-only-network`, `test-or-experimental`, `wildcard`.
func (o HsprofileOutput) AccessNetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringOutput { return v.AccessNetworkType }).(pulumi.StringOutput)
}

// Enable/disable unauthenticated emergency service accessible (UESA). Valid values: `enable`, `disable`.
func (o HsprofileOutput) AccessNetworkUesa() pulumi.StringOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringOutput { return v.AccessNetworkUesa }).(pulumi.StringOutput)
}

// Advice of charge.
func (o HsprofileOutput) AdviceOfCharge() pulumi.StringOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringOutput { return v.AdviceOfCharge }).(pulumi.StringOutput)
}

// ANQP Domain ID (0-65535).
func (o HsprofileOutput) AnqpDomainId() pulumi.IntOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.IntOutput { return v.AnqpDomainId }).(pulumi.IntOutput)
}

// Enable/disable basic service set (BSS) transition Support. Valid values: `enable`, `disable`.
func (o HsprofileOutput) BssTransition() pulumi.StringOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringOutput { return v.BssTransition }).(pulumi.StringOutput)
}

// Connection capability name.
func (o HsprofileOutput) ConnCap() pulumi.StringOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringOutput { return v.ConnCap }).(pulumi.StringOutput)
}

// Deauthentication request timeout (in seconds).
func (o HsprofileOutput) DeauthRequestTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.IntOutput { return v.DeauthRequestTimeout }).(pulumi.IntOutput)
}

// Enable/disable downstream group-addressed forwarding (DGAF). Valid values: `enable`, `disable`.
func (o HsprofileOutput) Dgaf() pulumi.StringOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringOutput { return v.Dgaf }).(pulumi.StringOutput)
}

// Domain name.
func (o HsprofileOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringOutput { return v.DomainName }).(pulumi.StringOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o HsprofileOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// GAS comeback delay (0 or 100 - 4000 milliseconds, default = 500).
func (o HsprofileOutput) GasComebackDelay() pulumi.IntOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.IntOutput { return v.GasComebackDelay }).(pulumi.IntOutput)
}

// GAS fragmentation limit (512 - 4096, default = 1024).
func (o HsprofileOutput) GasFragmentationLimit() pulumi.IntOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.IntOutput { return v.GasFragmentationLimit }).(pulumi.IntOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o HsprofileOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Homogeneous extended service set identifier (HESSID).
func (o HsprofileOutput) Hessid() pulumi.StringOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringOutput { return v.Hessid }).(pulumi.StringOutput)
}

// IP address type name.
func (o HsprofileOutput) IpAddrType() pulumi.StringOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringOutput { return v.IpAddrType }).(pulumi.StringOutput)
}

// Enable/disable Layer 2 traffic inspection and filtering. Valid values: `enable`, `disable`.
func (o HsprofileOutput) L2tif() pulumi.StringOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringOutput { return v.L2tif }).(pulumi.StringOutput)
}

// 3GPP PLMN name.
func (o HsprofileOutput) N3gppPlmn() pulumi.StringOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringOutput { return v.N3gppPlmn }).(pulumi.StringOutput)
}

// NAI realm list name.
func (o HsprofileOutput) NaiRealm() pulumi.StringOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringOutput { return v.NaiRealm }).(pulumi.StringOutput)
}

// Hotspot profile name.
func (o HsprofileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Network authentication name.
func (o HsprofileOutput) NetworkAuth() pulumi.StringOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringOutput { return v.NetworkAuth }).(pulumi.StringOutput)
}

// Operator friendly name.
func (o HsprofileOutput) OperFriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringOutput { return v.OperFriendlyName }).(pulumi.StringOutput)
}

// Operator icon.
func (o HsprofileOutput) OperIcon() pulumi.StringOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringOutput { return v.OperIcon }).(pulumi.StringOutput)
}

// OSU Provider NAI.
func (o HsprofileOutput) OsuProviderNai() pulumi.StringOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringOutput { return v.OsuProviderNai }).(pulumi.StringOutput)
}

// Manually selected list of OSU provider(s). The structure of `osuProvider` block is documented below.
func (o HsprofileOutput) OsuProviders() HsprofileOsuProviderArrayOutput {
	return o.ApplyT(func(v *Hsprofile) HsprofileOsuProviderArrayOutput { return v.OsuProviders }).(HsprofileOsuProviderArrayOutput)
}

// Online sign up (OSU) SSID.
func (o HsprofileOutput) OsuSsid() pulumi.StringOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringOutput { return v.OsuSsid }).(pulumi.StringOutput)
}

// Enable/disable Pre-Association Message Exchange BSSID Independent (PAME-BI). Valid values: `disable`, `enable`.
func (o HsprofileOutput) PameBi() pulumi.StringOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringOutput { return v.PameBi }).(pulumi.StringOutput)
}

// Enable/disable Proxy ARP. Valid values: `enable`, `disable`.
func (o HsprofileOutput) ProxyArp() pulumi.StringOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringOutput { return v.ProxyArp }).(pulumi.StringOutput)
}

// QoS MAP set ID.
func (o HsprofileOutput) QosMap() pulumi.StringOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringOutput { return v.QosMap }).(pulumi.StringOutput)
}

// Hotspot 2.0 Release number (1, 2, 3, default = 2).
func (o HsprofileOutput) Release() pulumi.IntOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.IntOutput { return v.Release }).(pulumi.IntOutput)
}

// Roaming consortium list name.
func (o HsprofileOutput) RoamingConsortium() pulumi.StringOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringOutput { return v.RoamingConsortium }).(pulumi.StringOutput)
}

// Terms and conditions.
func (o HsprofileOutput) TermsAndConditions() pulumi.StringOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringOutput { return v.TermsAndConditions }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o HsprofileOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// Venue group. Valid values: `unspecified`, `assembly`, `business`, `educational`, `factory`, `institutional`, `mercantile`, `residential`, `storage`, `utility`, `vehicular`, `outdoor`.
func (o HsprofileOutput) VenueGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringOutput { return v.VenueGroup }).(pulumi.StringOutput)
}

// Venue name.
func (o HsprofileOutput) VenueName() pulumi.StringOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringOutput { return v.VenueName }).(pulumi.StringOutput)
}

// Venue type. Valid values: `unspecified`, `arena`, `stadium`, `passenger-terminal`, `amphitheater`, `amusement-park`, `place-of-worship`, `convention-center`, `library`, `museum`, `restaurant`, `theater`, `bar`, `coffee-shop`, `zoo-or-aquarium`, `emergency-center`, `doctor-office`, `bank`, `fire-station`, `police-station`, `post-office`, `professional-office`, `research-facility`, `attorney-office`, `primary-school`, `secondary-school`, `university-or-college`, `factory`, `hospital`, `long-term-care-facility`, `rehab-center`, `group-home`, `prison-or-jail`, `retail-store`, `grocery-market`, `auto-service-station`, `shopping-mall`, `gas-station`, `private`, `hotel-or-motel`, `dormitory`, `boarding-house`, `automobile`, `airplane`, `bus`, `ferry`, `ship-or-boat`, `train`, `motor-bike`, `muni-mesh-network`, `city-park`, `rest-area`, `traffic-control`, `bus-stop`, `kiosk`.
func (o HsprofileOutput) VenueType() pulumi.StringOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringOutput { return v.VenueType }).(pulumi.StringOutput)
}

// Venue name.
func (o HsprofileOutput) VenueUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringOutput { return v.VenueUrl }).(pulumi.StringOutput)
}

// WAN metric name.
func (o HsprofileOutput) WanMetrics() pulumi.StringOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringOutput { return v.WanMetrics }).(pulumi.StringOutput)
}

// Enable/disable wireless network management (WNM) sleep mode. Valid values: `enable`, `disable`.
func (o HsprofileOutput) WnmSleepMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Hsprofile) pulumi.StringOutput { return v.WnmSleepMode }).(pulumi.StringOutput)
}

type HsprofileArrayOutput struct{ *pulumi.OutputState }

func (HsprofileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Hsprofile)(nil)).Elem()
}

func (o HsprofileArrayOutput) ToHsprofileArrayOutput() HsprofileArrayOutput {
	return o
}

func (o HsprofileArrayOutput) ToHsprofileArrayOutputWithContext(ctx context.Context) HsprofileArrayOutput {
	return o
}

func (o HsprofileArrayOutput) Index(i pulumi.IntInput) HsprofileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Hsprofile {
		return vs[0].([]*Hsprofile)[vs[1].(int)]
	}).(HsprofileOutput)
}

type HsprofileMapOutput struct{ *pulumi.OutputState }

func (HsprofileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Hsprofile)(nil)).Elem()
}

func (o HsprofileMapOutput) ToHsprofileMapOutput() HsprofileMapOutput {
	return o
}

func (o HsprofileMapOutput) ToHsprofileMapOutputWithContext(ctx context.Context) HsprofileMapOutput {
	return o
}

func (o HsprofileMapOutput) MapIndex(k pulumi.StringInput) HsprofileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Hsprofile {
		return vs[0].(map[string]*Hsprofile)[vs[1].(string)]
	}).(HsprofileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HsprofileInput)(nil)).Elem(), &Hsprofile{})
	pulumi.RegisterInputType(reflect.TypeOf((*HsprofileArrayInput)(nil)).Elem(), HsprofileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HsprofileMapInput)(nil)).Elem(), HsprofileMap{})
	pulumi.RegisterOutputType(HsprofileOutput{})
	pulumi.RegisterOutputType(HsprofileArrayOutput{})
	pulumi.RegisterOutputType(HsprofileMapOutput{})
}
