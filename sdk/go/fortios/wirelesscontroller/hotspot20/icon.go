// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hotspot20

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure OSU provider icon.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/wirelesscontroller"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := wirelesscontroller.NewIcon(ctx, "trname", nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// WirelessControllerHotspot20 Icon can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:wirelesscontroller/hotspot20/icon:Icon labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:wirelesscontroller/hotspot20/icon:Icon labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Icon struct {
	pulumi.CustomResourceState

	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Icon list. The structure of `iconList` block is documented below.
	IconLists IconIconListArrayOutput `pulumi:"iconLists"`
	// Icon list ID.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewIcon registers a new resource with the given unique name, arguments, and options.
func NewIcon(ctx *pulumi.Context,
	name string, args *IconArgs, opts ...pulumi.ResourceOption) (*Icon, error) {
	if args == nil {
		args = &IconArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Icon
	err := ctx.RegisterResource("fortios:wirelesscontroller/hotspot20/icon:Icon", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIcon gets an existing Icon resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIcon(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IconState, opts ...pulumi.ResourceOption) (*Icon, error) {
	var resource Icon
	err := ctx.ReadResource("fortios:wirelesscontroller/hotspot20/icon:Icon", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Icon resources.
type iconState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Icon list. The structure of `iconList` block is documented below.
	IconLists []IconIconList `pulumi:"iconLists"`
	// Icon list ID.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type IconState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Icon list. The structure of `iconList` block is documented below.
	IconLists IconIconListArrayInput
	// Icon list ID.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (IconState) ElementType() reflect.Type {
	return reflect.TypeOf((*iconState)(nil)).Elem()
}

type iconArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Icon list. The structure of `iconList` block is documented below.
	IconLists []IconIconList `pulumi:"iconLists"`
	// Icon list ID.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Icon resource.
type IconArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Icon list. The structure of `iconList` block is documented below.
	IconLists IconIconListArrayInput
	// Icon list ID.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (IconArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iconArgs)(nil)).Elem()
}

type IconInput interface {
	pulumi.Input

	ToIconOutput() IconOutput
	ToIconOutputWithContext(ctx context.Context) IconOutput
}

func (*Icon) ElementType() reflect.Type {
	return reflect.TypeOf((**Icon)(nil)).Elem()
}

func (i *Icon) ToIconOutput() IconOutput {
	return i.ToIconOutputWithContext(context.Background())
}

func (i *Icon) ToIconOutputWithContext(ctx context.Context) IconOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IconOutput)
}

// IconArrayInput is an input type that accepts IconArray and IconArrayOutput values.
// You can construct a concrete instance of `IconArrayInput` via:
//
//	IconArray{ IconArgs{...} }
type IconArrayInput interface {
	pulumi.Input

	ToIconArrayOutput() IconArrayOutput
	ToIconArrayOutputWithContext(context.Context) IconArrayOutput
}

type IconArray []IconInput

func (IconArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Icon)(nil)).Elem()
}

func (i IconArray) ToIconArrayOutput() IconArrayOutput {
	return i.ToIconArrayOutputWithContext(context.Background())
}

func (i IconArray) ToIconArrayOutputWithContext(ctx context.Context) IconArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IconArrayOutput)
}

// IconMapInput is an input type that accepts IconMap and IconMapOutput values.
// You can construct a concrete instance of `IconMapInput` via:
//
//	IconMap{ "key": IconArgs{...} }
type IconMapInput interface {
	pulumi.Input

	ToIconMapOutput() IconMapOutput
	ToIconMapOutputWithContext(context.Context) IconMapOutput
}

type IconMap map[string]IconInput

func (IconMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Icon)(nil)).Elem()
}

func (i IconMap) ToIconMapOutput() IconMapOutput {
	return i.ToIconMapOutputWithContext(context.Background())
}

func (i IconMap) ToIconMapOutputWithContext(ctx context.Context) IconMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IconMapOutput)
}

type IconOutput struct{ *pulumi.OutputState }

func (IconOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Icon)(nil)).Elem()
}

func (o IconOutput) ToIconOutput() IconOutput {
	return o
}

func (o IconOutput) ToIconOutputWithContext(ctx context.Context) IconOutput {
	return o
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o IconOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Icon) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o IconOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Icon) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Icon list. The structure of `iconList` block is documented below.
func (o IconOutput) IconLists() IconIconListArrayOutput {
	return o.ApplyT(func(v *Icon) IconIconListArrayOutput { return v.IconLists }).(IconIconListArrayOutput)
}

// Icon list ID.
func (o IconOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Icon) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o IconOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Icon) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type IconArrayOutput struct{ *pulumi.OutputState }

func (IconArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Icon)(nil)).Elem()
}

func (o IconArrayOutput) ToIconArrayOutput() IconArrayOutput {
	return o
}

func (o IconArrayOutput) ToIconArrayOutputWithContext(ctx context.Context) IconArrayOutput {
	return o
}

func (o IconArrayOutput) Index(i pulumi.IntInput) IconOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Icon {
		return vs[0].([]*Icon)[vs[1].(int)]
	}).(IconOutput)
}

type IconMapOutput struct{ *pulumi.OutputState }

func (IconMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Icon)(nil)).Elem()
}

func (o IconMapOutput) ToIconMapOutput() IconMapOutput {
	return o
}

func (o IconMapOutput) ToIconMapOutputWithContext(ctx context.Context) IconMapOutput {
	return o
}

func (o IconMapOutput) MapIndex(k pulumi.StringInput) IconOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Icon {
		return vs[0].(map[string]*Icon)[vs[1].(string)]
	}).(IconOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IconInput)(nil)).Elem(), &Icon{})
	pulumi.RegisterInputType(reflect.TypeOf((*IconArrayInput)(nil)).Elem(), IconArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IconMapInput)(nil)).Elem(), IconMap{})
	pulumi.RegisterOutputType(IconOutput{})
	pulumi.RegisterOutputType(IconArrayOutput{})
	pulumi.RegisterOutputType(IconMapOutput{})
}
