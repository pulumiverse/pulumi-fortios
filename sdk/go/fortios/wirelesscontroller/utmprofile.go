// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wirelesscontroller

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure UTM (Unified Threat Management) profile.
//
// ## Import
//
// WirelessController UtmProfile can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:wirelesscontroller/utmprofile:Utmprofile labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:wirelesscontroller/utmprofile:Utmprofile labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Utmprofile struct {
	pulumi.CustomResourceState

	// AntiVirus profile name.
	AntivirusProfile pulumi.StringOutput `pulumi:"antivirusProfile"`
	// Application control list name.
	ApplicationList pulumi.StringOutput `pulumi:"applicationList"`
	// Comment.
	Comment pulumi.StringOutput `pulumi:"comment"`
	// IPS sensor name.
	IpsSensor pulumi.StringOutput `pulumi:"ipsSensor"`
	// UTM profile name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Block or monitor connections to Botnet servers or disable Botnet scanning. Valid values: `disable`, `block`, `monitor`.
	ScanBotnetConnections pulumi.StringOutput `pulumi:"scanBotnetConnections"`
	// Enable/disable UTM logging. Valid values: `enable`, `disable`.
	UtmLog pulumi.StringOutput `pulumi:"utmLog"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringOutput `pulumi:"vdomparam"`
	// WebFilter profile name.
	WebfilterProfile pulumi.StringOutput `pulumi:"webfilterProfile"`
}

// NewUtmprofile registers a new resource with the given unique name, arguments, and options.
func NewUtmprofile(ctx *pulumi.Context,
	name string, args *UtmprofileArgs, opts ...pulumi.ResourceOption) (*Utmprofile, error) {
	if args == nil {
		args = &UtmprofileArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Utmprofile
	err := ctx.RegisterResource("fortios:wirelesscontroller/utmprofile:Utmprofile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUtmprofile gets an existing Utmprofile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUtmprofile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UtmprofileState, opts ...pulumi.ResourceOption) (*Utmprofile, error) {
	var resource Utmprofile
	err := ctx.ReadResource("fortios:wirelesscontroller/utmprofile:Utmprofile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Utmprofile resources.
type utmprofileState struct {
	// AntiVirus profile name.
	AntivirusProfile *string `pulumi:"antivirusProfile"`
	// Application control list name.
	ApplicationList *string `pulumi:"applicationList"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// IPS sensor name.
	IpsSensor *string `pulumi:"ipsSensor"`
	// UTM profile name.
	Name *string `pulumi:"name"`
	// Block or monitor connections to Botnet servers or disable Botnet scanning. Valid values: `disable`, `block`, `monitor`.
	ScanBotnetConnections *string `pulumi:"scanBotnetConnections"`
	// Enable/disable UTM logging. Valid values: `enable`, `disable`.
	UtmLog *string `pulumi:"utmLog"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// WebFilter profile name.
	WebfilterProfile *string `pulumi:"webfilterProfile"`
}

type UtmprofileState struct {
	// AntiVirus profile name.
	AntivirusProfile pulumi.StringPtrInput
	// Application control list name.
	ApplicationList pulumi.StringPtrInput
	// Comment.
	Comment pulumi.StringPtrInput
	// IPS sensor name.
	IpsSensor pulumi.StringPtrInput
	// UTM profile name.
	Name pulumi.StringPtrInput
	// Block or monitor connections to Botnet servers or disable Botnet scanning. Valid values: `disable`, `block`, `monitor`.
	ScanBotnetConnections pulumi.StringPtrInput
	// Enable/disable UTM logging. Valid values: `enable`, `disable`.
	UtmLog pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// WebFilter profile name.
	WebfilterProfile pulumi.StringPtrInput
}

func (UtmprofileState) ElementType() reflect.Type {
	return reflect.TypeOf((*utmprofileState)(nil)).Elem()
}

type utmprofileArgs struct {
	// AntiVirus profile name.
	AntivirusProfile *string `pulumi:"antivirusProfile"`
	// Application control list name.
	ApplicationList *string `pulumi:"applicationList"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// IPS sensor name.
	IpsSensor *string `pulumi:"ipsSensor"`
	// UTM profile name.
	Name *string `pulumi:"name"`
	// Block or monitor connections to Botnet servers or disable Botnet scanning. Valid values: `disable`, `block`, `monitor`.
	ScanBotnetConnections *string `pulumi:"scanBotnetConnections"`
	// Enable/disable UTM logging. Valid values: `enable`, `disable`.
	UtmLog *string `pulumi:"utmLog"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// WebFilter profile name.
	WebfilterProfile *string `pulumi:"webfilterProfile"`
}

// The set of arguments for constructing a Utmprofile resource.
type UtmprofileArgs struct {
	// AntiVirus profile name.
	AntivirusProfile pulumi.StringPtrInput
	// Application control list name.
	ApplicationList pulumi.StringPtrInput
	// Comment.
	Comment pulumi.StringPtrInput
	// IPS sensor name.
	IpsSensor pulumi.StringPtrInput
	// UTM profile name.
	Name pulumi.StringPtrInput
	// Block or monitor connections to Botnet servers or disable Botnet scanning. Valid values: `disable`, `block`, `monitor`.
	ScanBotnetConnections pulumi.StringPtrInput
	// Enable/disable UTM logging. Valid values: `enable`, `disable`.
	UtmLog pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// WebFilter profile name.
	WebfilterProfile pulumi.StringPtrInput
}

func (UtmprofileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*utmprofileArgs)(nil)).Elem()
}

type UtmprofileInput interface {
	pulumi.Input

	ToUtmprofileOutput() UtmprofileOutput
	ToUtmprofileOutputWithContext(ctx context.Context) UtmprofileOutput
}

func (*Utmprofile) ElementType() reflect.Type {
	return reflect.TypeOf((**Utmprofile)(nil)).Elem()
}

func (i *Utmprofile) ToUtmprofileOutput() UtmprofileOutput {
	return i.ToUtmprofileOutputWithContext(context.Background())
}

func (i *Utmprofile) ToUtmprofileOutputWithContext(ctx context.Context) UtmprofileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UtmprofileOutput)
}

// UtmprofileArrayInput is an input type that accepts UtmprofileArray and UtmprofileArrayOutput values.
// You can construct a concrete instance of `UtmprofileArrayInput` via:
//
//	UtmprofileArray{ UtmprofileArgs{...} }
type UtmprofileArrayInput interface {
	pulumi.Input

	ToUtmprofileArrayOutput() UtmprofileArrayOutput
	ToUtmprofileArrayOutputWithContext(context.Context) UtmprofileArrayOutput
}

type UtmprofileArray []UtmprofileInput

func (UtmprofileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Utmprofile)(nil)).Elem()
}

func (i UtmprofileArray) ToUtmprofileArrayOutput() UtmprofileArrayOutput {
	return i.ToUtmprofileArrayOutputWithContext(context.Background())
}

func (i UtmprofileArray) ToUtmprofileArrayOutputWithContext(ctx context.Context) UtmprofileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UtmprofileArrayOutput)
}

// UtmprofileMapInput is an input type that accepts UtmprofileMap and UtmprofileMapOutput values.
// You can construct a concrete instance of `UtmprofileMapInput` via:
//
//	UtmprofileMap{ "key": UtmprofileArgs{...} }
type UtmprofileMapInput interface {
	pulumi.Input

	ToUtmprofileMapOutput() UtmprofileMapOutput
	ToUtmprofileMapOutputWithContext(context.Context) UtmprofileMapOutput
}

type UtmprofileMap map[string]UtmprofileInput

func (UtmprofileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Utmprofile)(nil)).Elem()
}

func (i UtmprofileMap) ToUtmprofileMapOutput() UtmprofileMapOutput {
	return i.ToUtmprofileMapOutputWithContext(context.Background())
}

func (i UtmprofileMap) ToUtmprofileMapOutputWithContext(ctx context.Context) UtmprofileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UtmprofileMapOutput)
}

type UtmprofileOutput struct{ *pulumi.OutputState }

func (UtmprofileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Utmprofile)(nil)).Elem()
}

func (o UtmprofileOutput) ToUtmprofileOutput() UtmprofileOutput {
	return o
}

func (o UtmprofileOutput) ToUtmprofileOutputWithContext(ctx context.Context) UtmprofileOutput {
	return o
}

// AntiVirus profile name.
func (o UtmprofileOutput) AntivirusProfile() pulumi.StringOutput {
	return o.ApplyT(func(v *Utmprofile) pulumi.StringOutput { return v.AntivirusProfile }).(pulumi.StringOutput)
}

// Application control list name.
func (o UtmprofileOutput) ApplicationList() pulumi.StringOutput {
	return o.ApplyT(func(v *Utmprofile) pulumi.StringOutput { return v.ApplicationList }).(pulumi.StringOutput)
}

// Comment.
func (o UtmprofileOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v *Utmprofile) pulumi.StringOutput { return v.Comment }).(pulumi.StringOutput)
}

// IPS sensor name.
func (o UtmprofileOutput) IpsSensor() pulumi.StringOutput {
	return o.ApplyT(func(v *Utmprofile) pulumi.StringOutput { return v.IpsSensor }).(pulumi.StringOutput)
}

// UTM profile name.
func (o UtmprofileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Utmprofile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Block or monitor connections to Botnet servers or disable Botnet scanning. Valid values: `disable`, `block`, `monitor`.
func (o UtmprofileOutput) ScanBotnetConnections() pulumi.StringOutput {
	return o.ApplyT(func(v *Utmprofile) pulumi.StringOutput { return v.ScanBotnetConnections }).(pulumi.StringOutput)
}

// Enable/disable UTM logging. Valid values: `enable`, `disable`.
func (o UtmprofileOutput) UtmLog() pulumi.StringOutput {
	return o.ApplyT(func(v *Utmprofile) pulumi.StringOutput { return v.UtmLog }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o UtmprofileOutput) Vdomparam() pulumi.StringOutput {
	return o.ApplyT(func(v *Utmprofile) pulumi.StringOutput { return v.Vdomparam }).(pulumi.StringOutput)
}

// WebFilter profile name.
func (o UtmprofileOutput) WebfilterProfile() pulumi.StringOutput {
	return o.ApplyT(func(v *Utmprofile) pulumi.StringOutput { return v.WebfilterProfile }).(pulumi.StringOutput)
}

type UtmprofileArrayOutput struct{ *pulumi.OutputState }

func (UtmprofileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Utmprofile)(nil)).Elem()
}

func (o UtmprofileArrayOutput) ToUtmprofileArrayOutput() UtmprofileArrayOutput {
	return o
}

func (o UtmprofileArrayOutput) ToUtmprofileArrayOutputWithContext(ctx context.Context) UtmprofileArrayOutput {
	return o
}

func (o UtmprofileArrayOutput) Index(i pulumi.IntInput) UtmprofileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Utmprofile {
		return vs[0].([]*Utmprofile)[vs[1].(int)]
	}).(UtmprofileOutput)
}

type UtmprofileMapOutput struct{ *pulumi.OutputState }

func (UtmprofileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Utmprofile)(nil)).Elem()
}

func (o UtmprofileMapOutput) ToUtmprofileMapOutput() UtmprofileMapOutput {
	return o
}

func (o UtmprofileMapOutput) ToUtmprofileMapOutputWithContext(ctx context.Context) UtmprofileMapOutput {
	return o
}

func (o UtmprofileMapOutput) MapIndex(k pulumi.StringInput) UtmprofileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Utmprofile {
		return vs[0].(map[string]*Utmprofile)[vs[1].(string)]
	}).(UtmprofileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UtmprofileInput)(nil)).Elem(), &Utmprofile{})
	pulumi.RegisterInputType(reflect.TypeOf((*UtmprofileArrayInput)(nil)).Elem(), UtmprofileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UtmprofileMapInput)(nil)).Elem(), UtmprofileMap{})
	pulumi.RegisterOutputType(UtmprofileOutput{})
	pulumi.RegisterOutputType(UtmprofileArrayOutput{})
	pulumi.RegisterOutputType(UtmprofileMapOutput{})
}
