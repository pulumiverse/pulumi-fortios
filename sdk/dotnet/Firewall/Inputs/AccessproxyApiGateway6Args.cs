// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Firewall.Inputs
{

    public sealed class AccessproxyApiGateway6Args : global::Pulumi.ResourceArgs
    {
        [Input("applications")]
        private InputList<Inputs.AccessproxyApiGateway6ApplicationArgs>? _applications;
        public InputList<Inputs.AccessproxyApiGateway6ApplicationArgs> Applications
        {
            get => _applications ?? (_applications = new InputList<Inputs.AccessproxyApiGateway6ApplicationArgs>());
            set => _applications = value;
        }

        [Input("h2Support")]
        public Input<string>? H2Support { get; set; }

        [Input("h3Support")]
        public Input<string>? H3Support { get; set; }

        [Input("httpCookieAge")]
        public Input<int>? HttpCookieAge { get; set; }

        [Input("httpCookieDomain")]
        public Input<string>? HttpCookieDomain { get; set; }

        [Input("httpCookieDomainFromHost")]
        public Input<string>? HttpCookieDomainFromHost { get; set; }

        [Input("httpCookieGeneration")]
        public Input<int>? HttpCookieGeneration { get; set; }

        [Input("httpCookiePath")]
        public Input<string>? HttpCookiePath { get; set; }

        [Input("httpCookieShare")]
        public Input<string>? HttpCookieShare { get; set; }

        [Input("httpsCookieSecure")]
        public Input<string>? HttpsCookieSecure { get; set; }

        /// <summary>
        /// an identifier for the resource with format {{name}}.
        /// </summary>
        [Input("id")]
        public Input<int>? Id { get; set; }

        [Input("ldbMethod")]
        public Input<string>? LdbMethod { get; set; }

        [Input("persistence")]
        public Input<string>? Persistence { get; set; }

        [Input("quic")]
        public Input<Inputs.AccessproxyApiGateway6QuicArgs>? Quic { get; set; }

        [Input("realservers")]
        private InputList<Inputs.AccessproxyApiGateway6RealserverArgs>? _realservers;
        public InputList<Inputs.AccessproxyApiGateway6RealserverArgs> Realservers
        {
            get => _realservers ?? (_realservers = new InputList<Inputs.AccessproxyApiGateway6RealserverArgs>());
            set => _realservers = value;
        }

        [Input("samlRedirect")]
        public Input<string>? SamlRedirect { get; set; }

        [Input("samlServer")]
        public Input<string>? SamlServer { get; set; }

        [Input("service")]
        public Input<string>? Service { get; set; }

        [Input("sslAlgorithm")]
        public Input<string>? SslAlgorithm { get; set; }

        [Input("sslCipherSuites")]
        private InputList<Inputs.AccessproxyApiGateway6SslCipherSuiteArgs>? _sslCipherSuites;
        public InputList<Inputs.AccessproxyApiGateway6SslCipherSuiteArgs> SslCipherSuites
        {
            get => _sslCipherSuites ?? (_sslCipherSuites = new InputList<Inputs.AccessproxyApiGateway6SslCipherSuiteArgs>());
            set => _sslCipherSuites = value;
        }

        [Input("sslDhBits")]
        public Input<string>? SslDhBits { get; set; }

        [Input("sslMaxVersion")]
        public Input<string>? SslMaxVersion { get; set; }

        [Input("sslMinVersion")]
        public Input<string>? SslMinVersion { get; set; }

        [Input("sslRenegotiation")]
        public Input<string>? SslRenegotiation { get; set; }

        [Input("sslVpnWebPortal")]
        public Input<string>? SslVpnWebPortal { get; set; }

        [Input("urlMap")]
        public Input<string>? UrlMap { get; set; }

        [Input("urlMapType")]
        public Input<string>? UrlMapType { get; set; }

        [Input("virtualHost")]
        public Input<string>? VirtualHost { get; set; }

        public AccessproxyApiGateway6Args()
        {
        }
        public static new AccessproxyApiGateway6Args Empty => new AccessproxyApiGateway6Args();
    }
}
