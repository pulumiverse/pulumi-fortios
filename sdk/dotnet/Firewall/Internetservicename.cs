// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Firewall
{
    /// <summary>
    /// Define internet service names. Applies to FortiOS Version `&gt;= 6.4.0`.
    /// 
    /// ## Import
    /// 
    /// Firewall InternetServiceName can be imported using any of these accepted formats:
    /// 
    /// ```sh
    /// $ pulumi import fortios:firewall/internetservicename:Internetservicename labelname {{name}}
    /// ```
    /// 
    /// If you do not want to import arguments of block:
    /// 
    /// $ export "FORTIOS_IMPORT_TABLE"="false"
    /// 
    /// ```sh
    /// $ pulumi import fortios:firewall/internetservicename:Internetservicename labelname {{name}}
    /// ```
    /// 
    /// $ unset "FORTIOS_IMPORT_TABLE"
    /// </summary>
    [FortiosResourceType("fortios:firewall/internetservicename:Internetservicename")]
    public partial class Internetservicename : global::Pulumi.CustomResource
    {
        /// <summary>
        /// City ID.
        /// </summary>
        [Output("cityId")]
        public Output<int> CityId { get; private set; } = null!;

        /// <summary>
        /// Country or Area ID.
        /// </summary>
        [Output("countryId")]
        public Output<int> CountryId { get; private set; } = null!;

        /// <summary>
        /// Internet Service ID.
        /// </summary>
        [Output("internetServiceId")]
        public Output<int> InternetServiceId { get; private set; } = null!;

        /// <summary>
        /// Internet Service name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Region ID.
        /// </summary>
        [Output("regionId")]
        public Output<int> RegionId { get; private set; } = null!;

        /// <summary>
        /// Internet Service name type. Valid values: `default`, `location`.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Output("vdomparam")]
        public Output<string> Vdomparam { get; private set; } = null!;


        /// <summary>
        /// Create a Internetservicename resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Internetservicename(string name, InternetservicenameArgs? args = null, CustomResourceOptions? options = null)
            : base("fortios:firewall/internetservicename:Internetservicename", name, args ?? new InternetservicenameArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Internetservicename(string name, Input<string> id, InternetservicenameState? state = null, CustomResourceOptions? options = null)
            : base("fortios:firewall/internetservicename:Internetservicename", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Internetservicename resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Internetservicename Get(string name, Input<string> id, InternetservicenameState? state = null, CustomResourceOptions? options = null)
        {
            return new Internetservicename(name, id, state, options);
        }
    }

    public sealed class InternetservicenameArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// City ID.
        /// </summary>
        [Input("cityId")]
        public Input<int>? CityId { get; set; }

        /// <summary>
        /// Country or Area ID.
        /// </summary>
        [Input("countryId")]
        public Input<int>? CountryId { get; set; }

        /// <summary>
        /// Internet Service ID.
        /// </summary>
        [Input("internetServiceId")]
        public Input<int>? InternetServiceId { get; set; }

        /// <summary>
        /// Internet Service name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Region ID.
        /// </summary>
        [Input("regionId")]
        public Input<int>? RegionId { get; set; }

        /// <summary>
        /// Internet Service name type. Valid values: `default`, `location`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public InternetservicenameArgs()
        {
        }
        public static new InternetservicenameArgs Empty => new InternetservicenameArgs();
    }

    public sealed class InternetservicenameState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// City ID.
        /// </summary>
        [Input("cityId")]
        public Input<int>? CityId { get; set; }

        /// <summary>
        /// Country or Area ID.
        /// </summary>
        [Input("countryId")]
        public Input<int>? CountryId { get; set; }

        /// <summary>
        /// Internet Service ID.
        /// </summary>
        [Input("internetServiceId")]
        public Input<int>? InternetServiceId { get; set; }

        /// <summary>
        /// Internet Service name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Region ID.
        /// </summary>
        [Input("regionId")]
        public Input<int>? RegionId { get; set; }

        /// <summary>
        /// Internet Service name type. Valid values: `default`, `location`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public InternetservicenameState()
        {
        }
        public static new InternetservicenameState Empty => new InternetservicenameState();
    }
}
