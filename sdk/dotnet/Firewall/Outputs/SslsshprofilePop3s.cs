// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Firewall.Outputs
{

    [OutputType]
    public sealed class SslsshprofilePop3s
    {
        public readonly string? CertValidationFailure;
        public readonly string? CertValidationTimeout;
        public readonly string? ClientCertRequest;
        public readonly string? ClientCertificate;
        public readonly string? ExpiredServerCert;
        public readonly string? InvalidServerCert;
        public readonly string? Ports;
        public readonly string? ProxyAfterTcpHandshake;
        public readonly string? RevokedServerCert;
        public readonly string? SniServerCertCheck;
        public readonly string? Status;
        public readonly string? UnsupportedSsl;
        public readonly string? UnsupportedSslCipher;
        public readonly string? UnsupportedSslNegotiation;
        public readonly string? UnsupportedSslVersion;
        public readonly string? UntrustedServerCert;

        [OutputConstructor]
        private SslsshprofilePop3s(
            string? certValidationFailure,

            string? certValidationTimeout,

            string? clientCertRequest,

            string? clientCertificate,

            string? expiredServerCert,

            string? invalidServerCert,

            string? ports,

            string? proxyAfterTcpHandshake,

            string? revokedServerCert,

            string? sniServerCertCheck,

            string? status,

            string? unsupportedSsl,

            string? unsupportedSslCipher,

            string? unsupportedSslNegotiation,

            string? unsupportedSslVersion,

            string? untrustedServerCert)
        {
            CertValidationFailure = certValidationFailure;
            CertValidationTimeout = certValidationTimeout;
            ClientCertRequest = clientCertRequest;
            ClientCertificate = clientCertificate;
            ExpiredServerCert = expiredServerCert;
            InvalidServerCert = invalidServerCert;
            Ports = ports;
            ProxyAfterTcpHandshake = proxyAfterTcpHandshake;
            RevokedServerCert = revokedServerCert;
            SniServerCertCheck = sniServerCertCheck;
            Status = status;
            UnsupportedSsl = unsupportedSsl;
            UnsupportedSslCipher = unsupportedSslCipher;
            UnsupportedSslNegotiation = unsupportedSslNegotiation;
            UnsupportedSslVersion = unsupportedSslVersion;
            UntrustedServerCert = untrustedServerCert;
        }
    }
}
