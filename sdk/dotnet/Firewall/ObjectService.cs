// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Firewall
{
    /// <summary>
    /// Provides a resource to configure firewall service of FortiOS.
    /// 
    /// !&gt; **Warning:** The resource will be deprecated and replaced by new resource `fortios.firewall/service.Custom`, we recommend that you use the new resource.
    /// 
    /// ## Example Usage
    /// 
    /// ### Fqdn Service
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Fortios = Pulumiverse.Fortios;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var v11 = new Fortios.Firewall.ObjectService("v11", new()
    ///     {
    ///         Category = "General",
    ///         Comment = "comment",
    ///         Fqdn = "abc.com",
    ///         Protocol = "TCP/UDP/SCTP",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### Iprange Service
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Fortios = Pulumiverse.Fortios;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var v13 = new Fortios.Firewall.ObjectService("v13", new()
    ///     {
    ///         Category = "General",
    ///         Comment = "comment",
    ///         Iprange = "1.1.1.1-2.2.2.2",
    ///         Protocol = "TCP/UDP/SCTP",
    ///         SctpPortrange = "66-88",
    ///         TcpPortrange = "22-33",
    ///         UdpPortrange = "44-55",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### ICMP Service
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Fortios = Pulumiverse.Fortios;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var iCMP = new Fortios.Firewall.ObjectService("iCMP", new()
    ///     {
    ///         Category = "General",
    ///         Comment = "comment",
    ///         Icmpcode = "3",
    ///         Icmptype = "2",
    ///         Protocol = "ICMP",
    ///         ProtocolNumber = "1",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [FortiosResourceType("fortios:firewall/objectService:ObjectService")]
    public partial class ObjectService : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Service category.
        /// </summary>
        [Output("category")]
        public Output<string> Category { get; private set; } = null!;

        /// <summary>
        /// Comment.
        /// </summary>
        [Output("comment")]
        public Output<string?> Comment { get; private set; } = null!;

        /// <summary>
        /// Fully qualified domain name.
        /// </summary>
        [Output("fqdn")]
        public Output<string> Fqdn { get; private set; } = null!;

        /// <summary>
        /// ICMP code.
        /// </summary>
        [Output("icmpcode")]
        public Output<string> Icmpcode { get; private set; } = null!;

        /// <summary>
        /// ICMP type.
        /// </summary>
        [Output("icmptype")]
        public Output<string> Icmptype { get; private set; } = null!;

        /// <summary>
        /// Start and end of the IP range associated with service.
        /// </summary>
        [Output("iprange")]
        public Output<string> Iprange { get; private set; } = null!;

        /// <summary>
        /// Number of minutes before an idle administrator session time out.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Protocol type based on IANA numbers.
        /// </summary>
        [Output("protocol")]
        public Output<string> Protocol { get; private set; } = null!;

        /// <summary>
        /// IP protocol number.
        /// </summary>
        [Output("protocolNumber")]
        public Output<string> ProtocolNumber { get; private set; } = null!;

        /// <summary>
        /// Multiple SCTP port ranges.
        /// </summary>
        [Output("sctpPortrange")]
        public Output<string> SctpPortrange { get; private set; } = null!;

        /// <summary>
        /// Custom tcp session TTL.
        /// </summary>
        [Output("sessionTtl")]
        public Output<string> SessionTtl { get; private set; } = null!;

        /// <summary>
        /// Multiple TCP port ranges.
        /// </summary>
        [Output("tcpPortrange")]
        public Output<string> TcpPortrange { get; private set; } = null!;

        /// <summary>
        /// Multiple UDP port ranges.
        /// </summary>
        [Output("udpPortrange")]
        public Output<string> UdpPortrange { get; private set; } = null!;


        /// <summary>
        /// Create a ObjectService resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ObjectService(string name, ObjectServiceArgs args, CustomResourceOptions? options = null)
            : base("fortios:firewall/objectService:ObjectService", name, args ?? new ObjectServiceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ObjectService(string name, Input<string> id, ObjectServiceState? state = null, CustomResourceOptions? options = null)
            : base("fortios:firewall/objectService:ObjectService", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ObjectService resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ObjectService Get(string name, Input<string> id, ObjectServiceState? state = null, CustomResourceOptions? options = null)
        {
            return new ObjectService(name, id, state, options);
        }
    }

    public sealed class ObjectServiceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Service category.
        /// </summary>
        [Input("category", required: true)]
        public Input<string> Category { get; set; } = null!;

        /// <summary>
        /// Comment.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// Fully qualified domain name.
        /// </summary>
        [Input("fqdn")]
        public Input<string>? Fqdn { get; set; }

        /// <summary>
        /// ICMP code.
        /// </summary>
        [Input("icmpcode")]
        public Input<string>? Icmpcode { get; set; }

        /// <summary>
        /// ICMP type.
        /// </summary>
        [Input("icmptype")]
        public Input<string>? Icmptype { get; set; }

        /// <summary>
        /// Start and end of the IP range associated with service.
        /// </summary>
        [Input("iprange")]
        public Input<string>? Iprange { get; set; }

        /// <summary>
        /// Number of minutes before an idle administrator session time out.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Protocol type based on IANA numbers.
        /// </summary>
        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        /// <summary>
        /// IP protocol number.
        /// </summary>
        [Input("protocolNumber")]
        public Input<string>? ProtocolNumber { get; set; }

        /// <summary>
        /// Multiple SCTP port ranges.
        /// </summary>
        [Input("sctpPortrange")]
        public Input<string>? SctpPortrange { get; set; }

        /// <summary>
        /// Custom tcp session TTL.
        /// </summary>
        [Input("sessionTtl")]
        public Input<string>? SessionTtl { get; set; }

        /// <summary>
        /// Multiple TCP port ranges.
        /// </summary>
        [Input("tcpPortrange")]
        public Input<string>? TcpPortrange { get; set; }

        /// <summary>
        /// Multiple UDP port ranges.
        /// </summary>
        [Input("udpPortrange")]
        public Input<string>? UdpPortrange { get; set; }

        public ObjectServiceArgs()
        {
        }
        public static new ObjectServiceArgs Empty => new ObjectServiceArgs();
    }

    public sealed class ObjectServiceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Service category.
        /// </summary>
        [Input("category")]
        public Input<string>? Category { get; set; }

        /// <summary>
        /// Comment.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// Fully qualified domain name.
        /// </summary>
        [Input("fqdn")]
        public Input<string>? Fqdn { get; set; }

        /// <summary>
        /// ICMP code.
        /// </summary>
        [Input("icmpcode")]
        public Input<string>? Icmpcode { get; set; }

        /// <summary>
        /// ICMP type.
        /// </summary>
        [Input("icmptype")]
        public Input<string>? Icmptype { get; set; }

        /// <summary>
        /// Start and end of the IP range associated with service.
        /// </summary>
        [Input("iprange")]
        public Input<string>? Iprange { get; set; }

        /// <summary>
        /// Number of minutes before an idle administrator session time out.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Protocol type based on IANA numbers.
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        /// <summary>
        /// IP protocol number.
        /// </summary>
        [Input("protocolNumber")]
        public Input<string>? ProtocolNumber { get; set; }

        /// <summary>
        /// Multiple SCTP port ranges.
        /// </summary>
        [Input("sctpPortrange")]
        public Input<string>? SctpPortrange { get; set; }

        /// <summary>
        /// Custom tcp session TTL.
        /// </summary>
        [Input("sessionTtl")]
        public Input<string>? SessionTtl { get; set; }

        /// <summary>
        /// Multiple TCP port ranges.
        /// </summary>
        [Input("tcpPortrange")]
        public Input<string>? TcpPortrange { get; set; }

        /// <summary>
        /// Multiple UDP port ranges.
        /// </summary>
        [Input("udpPortrange")]
        public Input<string>? UdpPortrange { get; set; }

        public ObjectServiceState()
        {
        }
        public static new ObjectServiceState Empty => new ObjectServiceState();
    }
}
