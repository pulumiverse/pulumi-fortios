// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Firewall.Ssh
{
    /// <summary>
    /// SSH proxy settings.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Fortios = Pulumiverse.Fortios;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var trname = new Fortios.Firewall.Ssh.Setting("trname", new()
    ///     {
    ///         Caname = "Fortinet_SSH_CA",
    ///         HostTrustedChecking = "enable",
    ///         HostkeyDsa1024 = "Fortinet_SSH_DSA1024",
    ///         HostkeyEcdsa256 = "Fortinet_SSH_ECDSA256",
    ///         HostkeyEcdsa384 = "Fortinet_SSH_ECDSA384",
    ///         HostkeyEcdsa521 = "Fortinet_SSH_ECDSA521",
    ///         HostkeyEd25519 = "Fortinet_SSH_ED25519",
    ///         HostkeyRsa2048 = "Fortinet_SSH_RSA2048",
    ///         UntrustedCaname = "Fortinet_SSH_CA_Untrusted",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// FirewallSsh Setting can be imported using any of these accepted formats:
    /// 
    /// ```sh
    /// $ pulumi import fortios:firewall/ssh/setting:Setting labelname FirewallSshSetting
    /// ```
    /// 
    /// If you do not want to import arguments of block:
    /// 
    /// $ export "FORTIOS_IMPORT_TABLE"="false"
    /// 
    /// ```sh
    /// $ pulumi import fortios:firewall/ssh/setting:Setting labelname FirewallSshSetting
    /// ```
    /// 
    /// $ unset "FORTIOS_IMPORT_TABLE"
    /// </summary>
    [FortiosResourceType("fortios:firewall/ssh/setting:Setting")]
    public partial class Setting : global::Pulumi.CustomResource
    {
        /// <summary>
        /// CA certificate used by SSH Inspection.
        /// </summary>
        [Output("caname")]
        public Output<string> Caname { get; private set; } = null!;

        /// <summary>
        /// Enable/disable host trusted checking. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("hostTrustedChecking")]
        public Output<string> HostTrustedChecking { get; private set; } = null!;

        /// <summary>
        /// DSA certificate used by SSH proxy.
        /// </summary>
        [Output("hostkeyDsa1024")]
        public Output<string> HostkeyDsa1024 { get; private set; } = null!;

        /// <summary>
        /// ECDSA nid256 certificate used by SSH proxy.
        /// </summary>
        [Output("hostkeyEcdsa256")]
        public Output<string> HostkeyEcdsa256 { get; private set; } = null!;

        /// <summary>
        /// ECDSA nid384 certificate used by SSH proxy.
        /// </summary>
        [Output("hostkeyEcdsa384")]
        public Output<string> HostkeyEcdsa384 { get; private set; } = null!;

        /// <summary>
        /// ECDSA nid384 certificate used by SSH proxy.
        /// </summary>
        [Output("hostkeyEcdsa521")]
        public Output<string> HostkeyEcdsa521 { get; private set; } = null!;

        /// <summary>
        /// ED25519 hostkey used by SSH proxy.
        /// </summary>
        [Output("hostkeyEd25519")]
        public Output<string> HostkeyEd25519 { get; private set; } = null!;

        /// <summary>
        /// RSA certificate used by SSH proxy.
        /// </summary>
        [Output("hostkeyRsa2048")]
        public Output<string> HostkeyRsa2048 { get; private set; } = null!;

        /// <summary>
        /// Untrusted CA certificate used by SSH Inspection.
        /// </summary>
        [Output("untrustedCaname")]
        public Output<string> UntrustedCaname { get; private set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Output("vdomparam")]
        public Output<string?> Vdomparam { get; private set; } = null!;


        /// <summary>
        /// Create a Setting resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Setting(string name, SettingArgs? args = null, CustomResourceOptions? options = null)
            : base("fortios:firewall/ssh/setting:Setting", name, args ?? new SettingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Setting(string name, Input<string> id, SettingState? state = null, CustomResourceOptions? options = null)
            : base("fortios:firewall/ssh/setting:Setting", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Setting resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Setting Get(string name, Input<string> id, SettingState? state = null, CustomResourceOptions? options = null)
        {
            return new Setting(name, id, state, options);
        }
    }

    public sealed class SettingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// CA certificate used by SSH Inspection.
        /// </summary>
        [Input("caname")]
        public Input<string>? Caname { get; set; }

        /// <summary>
        /// Enable/disable host trusted checking. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("hostTrustedChecking")]
        public Input<string>? HostTrustedChecking { get; set; }

        /// <summary>
        /// DSA certificate used by SSH proxy.
        /// </summary>
        [Input("hostkeyDsa1024")]
        public Input<string>? HostkeyDsa1024 { get; set; }

        /// <summary>
        /// ECDSA nid256 certificate used by SSH proxy.
        /// </summary>
        [Input("hostkeyEcdsa256")]
        public Input<string>? HostkeyEcdsa256 { get; set; }

        /// <summary>
        /// ECDSA nid384 certificate used by SSH proxy.
        /// </summary>
        [Input("hostkeyEcdsa384")]
        public Input<string>? HostkeyEcdsa384 { get; set; }

        /// <summary>
        /// ECDSA nid384 certificate used by SSH proxy.
        /// </summary>
        [Input("hostkeyEcdsa521")]
        public Input<string>? HostkeyEcdsa521 { get; set; }

        /// <summary>
        /// ED25519 hostkey used by SSH proxy.
        /// </summary>
        [Input("hostkeyEd25519")]
        public Input<string>? HostkeyEd25519 { get; set; }

        /// <summary>
        /// RSA certificate used by SSH proxy.
        /// </summary>
        [Input("hostkeyRsa2048")]
        public Input<string>? HostkeyRsa2048 { get; set; }

        /// <summary>
        /// Untrusted CA certificate used by SSH Inspection.
        /// </summary>
        [Input("untrustedCaname")]
        public Input<string>? UntrustedCaname { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public SettingArgs()
        {
        }
        public static new SettingArgs Empty => new SettingArgs();
    }

    public sealed class SettingState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// CA certificate used by SSH Inspection.
        /// </summary>
        [Input("caname")]
        public Input<string>? Caname { get; set; }

        /// <summary>
        /// Enable/disable host trusted checking. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("hostTrustedChecking")]
        public Input<string>? HostTrustedChecking { get; set; }

        /// <summary>
        /// DSA certificate used by SSH proxy.
        /// </summary>
        [Input("hostkeyDsa1024")]
        public Input<string>? HostkeyDsa1024 { get; set; }

        /// <summary>
        /// ECDSA nid256 certificate used by SSH proxy.
        /// </summary>
        [Input("hostkeyEcdsa256")]
        public Input<string>? HostkeyEcdsa256 { get; set; }

        /// <summary>
        /// ECDSA nid384 certificate used by SSH proxy.
        /// </summary>
        [Input("hostkeyEcdsa384")]
        public Input<string>? HostkeyEcdsa384 { get; set; }

        /// <summary>
        /// ECDSA nid384 certificate used by SSH proxy.
        /// </summary>
        [Input("hostkeyEcdsa521")]
        public Input<string>? HostkeyEcdsa521 { get; set; }

        /// <summary>
        /// ED25519 hostkey used by SSH proxy.
        /// </summary>
        [Input("hostkeyEd25519")]
        public Input<string>? HostkeyEd25519 { get; set; }

        /// <summary>
        /// RSA certificate used by SSH proxy.
        /// </summary>
        [Input("hostkeyRsa2048")]
        public Input<string>? HostkeyRsa2048 { get; set; }

        /// <summary>
        /// Untrusted CA certificate used by SSH Inspection.
        /// </summary>
        [Input("untrustedCaname")]
        public Input<string>? UntrustedCaname { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public SettingState()
        {
        }
        public static new SettingState Empty => new SettingState();
    }
}
