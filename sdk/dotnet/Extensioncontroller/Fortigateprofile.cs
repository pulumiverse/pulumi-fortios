// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Extensioncontroller
{
    /// <summary>
    /// FortiGate connector profile configuration. Applies to FortiOS Version `&gt;= 7.2.1`.
    /// 
    /// ## Import
    /// 
    /// ExtensionController FortigateProfile can be imported using any of these accepted formats:
    /// 
    /// ```sh
    /// $ pulumi import fortios:extensioncontroller/fortigateprofile:Fortigateprofile labelname {{name}}
    /// ```
    /// 
    /// If you do not want to import arguments of block:
    /// 
    /// $ export "FORTIOS_IMPORT_TABLE"="false"
    /// 
    /// ```sh
    /// $ pulumi import fortios:extensioncontroller/fortigateprofile:Fortigateprofile labelname {{name}}
    /// ```
    /// 
    /// $ unset "FORTIOS_IMPORT_TABLE"
    /// </summary>
    [FortiosResourceType("fortios:extensioncontroller/fortigateprofile:Fortigateprofile")]
    public partial class Fortigateprofile : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Extension option. Valid values: `lan-extension`.
        /// </summary>
        [Output("extension")]
        public Output<string> Extension { get; private set; } = null!;

        /// <summary>
        /// ID.
        /// </summary>
        [Output("fosid")]
        public Output<int> Fosid { get; private set; } = null!;

        /// <summary>
        /// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        /// </summary>
        [Output("getAllTables")]
        public Output<string?> GetAllTables { get; private set; } = null!;

        /// <summary>
        /// FortiGate connector LAN extension configuration. The structure of `lan_extension` block is documented below.
        /// </summary>
        [Output("lanExtension")]
        public Output<Outputs.FortigateprofileLanExtension> LanExtension { get; private set; } = null!;

        /// <summary>
        /// FortiGate connector profile name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Output("vdomparam")]
        public Output<string?> Vdomparam { get; private set; } = null!;


        /// <summary>
        /// Create a Fortigateprofile resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Fortigateprofile(string name, FortigateprofileArgs? args = null, CustomResourceOptions? options = null)
            : base("fortios:extensioncontroller/fortigateprofile:Fortigateprofile", name, args ?? new FortigateprofileArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Fortigateprofile(string name, Input<string> id, FortigateprofileState? state = null, CustomResourceOptions? options = null)
            : base("fortios:extensioncontroller/fortigateprofile:Fortigateprofile", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Fortigateprofile resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Fortigateprofile Get(string name, Input<string> id, FortigateprofileState? state = null, CustomResourceOptions? options = null)
        {
            return new Fortigateprofile(name, id, state, options);
        }
    }

    public sealed class FortigateprofileArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Extension option. Valid values: `lan-extension`.
        /// </summary>
        [Input("extension")]
        public Input<string>? Extension { get; set; }

        /// <summary>
        /// ID.
        /// </summary>
        [Input("fosid")]
        public Input<int>? Fosid { get; set; }

        /// <summary>
        /// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        /// </summary>
        [Input("getAllTables")]
        public Input<string>? GetAllTables { get; set; }

        /// <summary>
        /// FortiGate connector LAN extension configuration. The structure of `lan_extension` block is documented below.
        /// </summary>
        [Input("lanExtension")]
        public Input<Inputs.FortigateprofileLanExtensionArgs>? LanExtension { get; set; }

        /// <summary>
        /// FortiGate connector profile name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public FortigateprofileArgs()
        {
        }
        public static new FortigateprofileArgs Empty => new FortigateprofileArgs();
    }

    public sealed class FortigateprofileState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Extension option. Valid values: `lan-extension`.
        /// </summary>
        [Input("extension")]
        public Input<string>? Extension { get; set; }

        /// <summary>
        /// ID.
        /// </summary>
        [Input("fosid")]
        public Input<int>? Fosid { get; set; }

        /// <summary>
        /// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        /// </summary>
        [Input("getAllTables")]
        public Input<string>? GetAllTables { get; set; }

        /// <summary>
        /// FortiGate connector LAN extension configuration. The structure of `lan_extension` block is documented below.
        /// </summary>
        [Input("lanExtension")]
        public Input<Inputs.FortigateprofileLanExtensionGetArgs>? LanExtension { get; set; }

        /// <summary>
        /// FortiGate connector profile name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public FortigateprofileState()
        {
        }
        public static new FortigateprofileState Empty => new FortigateprofileState();
    }
}
