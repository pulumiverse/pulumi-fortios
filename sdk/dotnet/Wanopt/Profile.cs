// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Wanopt
{
    /// <summary>
    /// Configure WAN optimization profiles.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Fortios = Pulumiverse.Fortios;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var trname = new Fortios.Wanopt.Profile("trname", new()
    ///     {
    ///         Cifs = new Fortios.Wanopt.Inputs.ProfileCifsArgs
    ///         {
    ///             ByteCaching = "enable",
    ///             LogTraffic = "enable",
    ///             Port = 445,
    ///             PreferChunking = "fix",
    ///             SecureTunnel = "disable",
    ///             Status = "disable",
    ///             TunnelSharing = "private",
    ///         },
    ///         Comments = "test",
    ///         Ftp = new Fortios.Wanopt.Inputs.ProfileFtpArgs
    ///         {
    ///             ByteCaching = "enable",
    ///             LogTraffic = "enable",
    ///             Port = 21,
    ///             PreferChunking = "fix",
    ///             SecureTunnel = "disable",
    ///             Status = "disable",
    ///             TunnelSharing = "private",
    ///         },
    ///         Http = new Fortios.Wanopt.Inputs.ProfileHttpArgs
    ///         {
    ///             ByteCaching = "enable",
    ///             LogTraffic = "enable",
    ///             Port = 80,
    ///             PreferChunking = "fix",
    ///             SecureTunnel = "disable",
    ///             Ssl = "disable",
    ///             SslPort = 443,
    ///             Status = "disable",
    ///             TunnelNonHttp = "disable",
    ///             TunnelSharing = "private",
    ///             UnknownHttpVersion = "tunnel",
    ///         },
    ///         Mapi = new Fortios.Wanopt.Inputs.ProfileMapiArgs
    ///         {
    ///             ByteCaching = "enable",
    ///             LogTraffic = "enable",
    ///             Port = 135,
    ///             SecureTunnel = "disable",
    ///             Status = "disable",
    ///             TunnelSharing = "private",
    ///         },
    ///         Tcp = new Fortios.Wanopt.Inputs.ProfileTcpArgs
    ///         {
    ///             ByteCaching = "disable",
    ///             ByteCachingOpt = "mem-only",
    ///             LogTraffic = "enable",
    ///             Port = "1-65535",
    ///             SecureTunnel = "disable",
    ///             Ssl = "disable",
    ///             SslPort = 443,
    ///             Status = "disable",
    ///             TunnelSharing = "private",
    ///         },
    ///         Transparent = "enable",
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// Wanopt Profile can be imported using any of these accepted formats:
    /// 
    /// ```sh
    /// $ pulumi import fortios:wanopt/profile:Profile labelname {{name}}
    /// ```
    /// 
    /// If you do not want to import arguments of block:
    /// 
    /// $ export "FORTIOS_IMPORT_TABLE"="false"
    /// 
    /// ```sh
    /// $ pulumi import fortios:wanopt/profile:Profile labelname {{name}}
    /// ```
    /// 
    /// $ unset "FORTIOS_IMPORT_TABLE"
    /// </summary>
    [FortiosResourceType("fortios:wanopt/profile:Profile")]
    public partial class Profile : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Optionally add an authentication group to restrict access to the WAN Optimization tunnel to peers in the authentication group.
        /// </summary>
        [Output("authGroup")]
        public Output<string> AuthGroup { get; private set; } = null!;

        /// <summary>
        /// Enable/disable CIFS (Windows sharing) WAN Optimization and configure CIFS WAN Optimization features. The structure of `cifs` block is documented below.
        /// </summary>
        [Output("cifs")]
        public Output<Outputs.ProfileCifs> Cifs { get; private set; } = null!;

        /// <summary>
        /// Comment.
        /// </summary>
        [Output("comments")]
        public Output<string?> Comments { get; private set; } = null!;

        /// <summary>
        /// Enable/disable FTP WAN Optimization and configure FTP WAN Optimization features. The structure of `ftp` block is documented below.
        /// </summary>
        [Output("ftp")]
        public Output<Outputs.ProfileFtp> Ftp { get; private set; } = null!;

        /// <summary>
        /// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        /// </summary>
        [Output("getAllTables")]
        public Output<string?> GetAllTables { get; private set; } = null!;

        /// <summary>
        /// Enable/disable HTTP WAN Optimization and configure HTTP WAN Optimization features. The structure of `http` block is documented below.
        /// </summary>
        [Output("http")]
        public Output<Outputs.ProfileHttp> Http { get; private set; } = null!;

        /// <summary>
        /// Enable/disable MAPI email WAN Optimization and configure MAPI WAN Optimization features. The structure of `mapi` block is documented below.
        /// </summary>
        [Output("mapi")]
        public Output<Outputs.ProfileMapi> Mapi { get; private set; } = null!;

        /// <summary>
        /// Profile name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Enable/disable TCP WAN Optimization and configure TCP WAN Optimization features. The structure of `tcp` block is documented below.
        /// </summary>
        [Output("tcp")]
        public Output<Outputs.ProfileTcp> Tcp { get; private set; } = null!;

        /// <summary>
        /// Enable/disable transparent mode. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("transparent")]
        public Output<string> Transparent { get; private set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Output("vdomparam")]
        public Output<string?> Vdomparam { get; private set; } = null!;


        /// <summary>
        /// Create a Profile resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Profile(string name, ProfileArgs? args = null, CustomResourceOptions? options = null)
            : base("fortios:wanopt/profile:Profile", name, args ?? new ProfileArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Profile(string name, Input<string> id, ProfileState? state = null, CustomResourceOptions? options = null)
            : base("fortios:wanopt/profile:Profile", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Profile resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Profile Get(string name, Input<string> id, ProfileState? state = null, CustomResourceOptions? options = null)
        {
            return new Profile(name, id, state, options);
        }
    }

    public sealed class ProfileArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optionally add an authentication group to restrict access to the WAN Optimization tunnel to peers in the authentication group.
        /// </summary>
        [Input("authGroup")]
        public Input<string>? AuthGroup { get; set; }

        /// <summary>
        /// Enable/disable CIFS (Windows sharing) WAN Optimization and configure CIFS WAN Optimization features. The structure of `cifs` block is documented below.
        /// </summary>
        [Input("cifs")]
        public Input<Inputs.ProfileCifsArgs>? Cifs { get; set; }

        /// <summary>
        /// Comment.
        /// </summary>
        [Input("comments")]
        public Input<string>? Comments { get; set; }

        /// <summary>
        /// Enable/disable FTP WAN Optimization and configure FTP WAN Optimization features. The structure of `ftp` block is documented below.
        /// </summary>
        [Input("ftp")]
        public Input<Inputs.ProfileFtpArgs>? Ftp { get; set; }

        /// <summary>
        /// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        /// </summary>
        [Input("getAllTables")]
        public Input<string>? GetAllTables { get; set; }

        /// <summary>
        /// Enable/disable HTTP WAN Optimization and configure HTTP WAN Optimization features. The structure of `http` block is documented below.
        /// </summary>
        [Input("http")]
        public Input<Inputs.ProfileHttpArgs>? Http { get; set; }

        /// <summary>
        /// Enable/disable MAPI email WAN Optimization and configure MAPI WAN Optimization features. The structure of `mapi` block is documented below.
        /// </summary>
        [Input("mapi")]
        public Input<Inputs.ProfileMapiArgs>? Mapi { get; set; }

        /// <summary>
        /// Profile name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Enable/disable TCP WAN Optimization and configure TCP WAN Optimization features. The structure of `tcp` block is documented below.
        /// </summary>
        [Input("tcp")]
        public Input<Inputs.ProfileTcpArgs>? Tcp { get; set; }

        /// <summary>
        /// Enable/disable transparent mode. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("transparent")]
        public Input<string>? Transparent { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public ProfileArgs()
        {
        }
        public static new ProfileArgs Empty => new ProfileArgs();
    }

    public sealed class ProfileState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optionally add an authentication group to restrict access to the WAN Optimization tunnel to peers in the authentication group.
        /// </summary>
        [Input("authGroup")]
        public Input<string>? AuthGroup { get; set; }

        /// <summary>
        /// Enable/disable CIFS (Windows sharing) WAN Optimization and configure CIFS WAN Optimization features. The structure of `cifs` block is documented below.
        /// </summary>
        [Input("cifs")]
        public Input<Inputs.ProfileCifsGetArgs>? Cifs { get; set; }

        /// <summary>
        /// Comment.
        /// </summary>
        [Input("comments")]
        public Input<string>? Comments { get; set; }

        /// <summary>
        /// Enable/disable FTP WAN Optimization and configure FTP WAN Optimization features. The structure of `ftp` block is documented below.
        /// </summary>
        [Input("ftp")]
        public Input<Inputs.ProfileFtpGetArgs>? Ftp { get; set; }

        /// <summary>
        /// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        /// </summary>
        [Input("getAllTables")]
        public Input<string>? GetAllTables { get; set; }

        /// <summary>
        /// Enable/disable HTTP WAN Optimization and configure HTTP WAN Optimization features. The structure of `http` block is documented below.
        /// </summary>
        [Input("http")]
        public Input<Inputs.ProfileHttpGetArgs>? Http { get; set; }

        /// <summary>
        /// Enable/disable MAPI email WAN Optimization and configure MAPI WAN Optimization features. The structure of `mapi` block is documented below.
        /// </summary>
        [Input("mapi")]
        public Input<Inputs.ProfileMapiGetArgs>? Mapi { get; set; }

        /// <summary>
        /// Profile name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Enable/disable TCP WAN Optimization and configure TCP WAN Optimization features. The structure of `tcp` block is documented below.
        /// </summary>
        [Input("tcp")]
        public Input<Inputs.ProfileTcpGetArgs>? Tcp { get; set; }

        /// <summary>
        /// Enable/disable transparent mode. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("transparent")]
        public Input<string>? Transparent { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public ProfileState()
        {
        }
        public static new ProfileState Empty => new ProfileState();
    }
}
