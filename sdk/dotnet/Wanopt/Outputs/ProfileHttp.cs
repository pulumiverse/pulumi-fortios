// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Wanopt.Outputs
{

    [OutputType]
    public sealed class ProfileHttp
    {
        /// <summary>
        /// Enable/disable byte-caching for HTTP. Byte caching reduces the amount of traffic by caching file data sent across the WAN and in future serving if from the cache. Valid values: `enable`, `disable`.
        /// </summary>
        public readonly string? ByteCaching;
        /// <summary>
        /// Enable/disable logging. Valid values: `enable`, `disable`.
        /// </summary>
        public readonly string? LogTraffic;
        /// <summary>
        /// Single port number or port number range for HTTP. Only packets with a destination port number that matches this port number or range are accepted by this profile.
        /// </summary>
        public readonly int? Port;
        /// <summary>
        /// Select dynamic or fixed-size data chunking for HTTP WAN Optimization. Valid values: `dynamic`, `fix`.
        /// </summary>
        public readonly string? PreferChunking;
        /// <summary>
        /// Select Protocol specific optimitation or generic TCP optimization. Valid values: `protocol`, `tcp`.
        /// </summary>
        public readonly string? ProtocolOpt;
        /// <summary>
        /// Enable/disable securing the WAN Opt tunnel using SSL. Secure and non-secure tunnels use the same TCP port (7810). Valid values: `enable`, `disable`.
        /// </summary>
        public readonly string? SecureTunnel;
        /// <summary>
        /// Enable/disable SSL/TLS offloading (hardware acceleration) for traffic in this tunnel. Valid values: `enable`, `disable`.
        /// </summary>
        public readonly string? Ssl;
        /// <summary>
        /// Port on which to expect HTTPS traffic for SSL/TLS offloading.
        /// </summary>
        public readonly int? SslPort;
        /// <summary>
        /// Enable/disable HTTP WAN Optimization. Valid values: `enable`, `disable`.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// Configure how to process non-HTTP traffic when a profile configured for HTTP traffic accepts a non-HTTP session. Can occur if an application sends non-HTTP traffic using an HTTP destination port. Valid values: `enable`, `disable`.
        /// </summary>
        public readonly string? TunnelNonHttp;
        /// <summary>
        /// Tunnel sharing mode for aggressive/non-aggressive and/or interactive/non-interactive protocols. Valid values: `private`, `shared`, `express-shared`.
        /// </summary>
        public readonly string? TunnelSharing;
        /// <summary>
        /// How to handle HTTP sessions that do not comply with HTTP 0.9, 1.0, or 1.1. Valid values: `reject`, `tunnel`, `best-effort`.
        /// </summary>
        public readonly string? UnknownHttpVersion;

        [OutputConstructor]
        private ProfileHttp(
            string? byteCaching,

            string? logTraffic,

            int? port,

            string? preferChunking,

            string? protocolOpt,

            string? secureTunnel,

            string? ssl,

            int? sslPort,

            string? status,

            string? tunnelNonHttp,

            string? tunnelSharing,

            string? unknownHttpVersion)
        {
            ByteCaching = byteCaching;
            LogTraffic = logTraffic;
            Port = port;
            PreferChunking = preferChunking;
            ProtocolOpt = protocolOpt;
            SecureTunnel = secureTunnel;
            Ssl = ssl;
            SslPort = sslPort;
            Status = status;
            TunnelNonHttp = tunnelNonHttp;
            TunnelSharing = tunnelSharing;
            UnknownHttpVersion = unknownHttpVersion;
        }
    }
}
