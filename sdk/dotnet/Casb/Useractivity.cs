// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Casb
{
    /// <summary>
    /// Configure CASB user activity. Applies to FortiOS Version `&gt;= 7.4.1`.
    /// 
    /// ## Import
    /// 
    /// Casb UserActivity can be imported using any of these accepted formats:
    /// 
    /// ```sh
    /// $ pulumi import fortios:casb/useractivity:Useractivity labelname {{name}}
    /// ```
    /// 
    /// If you do not want to import arguments of block:
    /// 
    /// $ export "FORTIOS_IMPORT_TABLE"="false"
    /// 
    /// ```sh
    /// $ pulumi import fortios:casb/useractivity:Useractivity labelname {{name}}
    /// ```
    /// 
    /// $ unset "FORTIOS_IMPORT_TABLE"
    /// </summary>
    [FortiosResourceType("fortios:casb/useractivity:Useractivity")]
    public partial class Useractivity : global::Pulumi.CustomResource
    {
        /// <summary>
        /// CASB SaaS application name.
        /// </summary>
        [Output("application")]
        public Output<string> Application { get; private set; } = null!;

        /// <summary>
        /// CASB user activity signature name.
        /// </summary>
        [Output("casbName")]
        public Output<string> CasbName { get; private set; } = null!;

        /// <summary>
        /// CASB user activity category. Valid values: `activity-control`, `tenant-control`, `domain-control`, `safe-search-control`, `other`.
        /// </summary>
        [Output("category")]
        public Output<string> Category { get; private set; } = null!;

        /// <summary>
        /// CASB control options. The structure of `control_options` block is documented below.
        /// </summary>
        [Output("controlOptions")]
        public Output<ImmutableArray<Outputs.UseractivityControlOption>> ControlOptions { get; private set; } = null!;

        /// <summary>
        /// CASB user activity description.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Output("dynamicSortSubtable")]
        public Output<string?> DynamicSortSubtable { get; private set; } = null!;

        /// <summary>
        /// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        /// </summary>
        [Output("getAllTables")]
        public Output<string?> GetAllTables { get; private set; } = null!;

        /// <summary>
        /// CASB user activity match strategy. Valid values: `and`, `or`.
        /// </summary>
        [Output("matchStrategy")]
        public Output<string> MatchStrategy { get; private set; } = null!;

        /// <summary>
        /// CASB user activity match rules. The structure of `match` block is documented below.
        /// </summary>
        [Output("matches")]
        public Output<ImmutableArray<Outputs.UseractivityMatch>> Matches { get; private set; } = null!;

        /// <summary>
        /// CASB user activity name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// CASB user activity status. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// CASB user activity type. Valid values: `built-in`, `customized`.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
        /// </summary>
        [Output("uuid")]
        public Output<string> Uuid { get; private set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Output("vdomparam")]
        public Output<string?> Vdomparam { get; private set; } = null!;


        /// <summary>
        /// Create a Useractivity resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Useractivity(string name, UseractivityArgs? args = null, CustomResourceOptions? options = null)
            : base("fortios:casb/useractivity:Useractivity", name, args ?? new UseractivityArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Useractivity(string name, Input<string> id, UseractivityState? state = null, CustomResourceOptions? options = null)
            : base("fortios:casb/useractivity:Useractivity", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Useractivity resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Useractivity Get(string name, Input<string> id, UseractivityState? state = null, CustomResourceOptions? options = null)
        {
            return new Useractivity(name, id, state, options);
        }
    }

    public sealed class UseractivityArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// CASB SaaS application name.
        /// </summary>
        [Input("application")]
        public Input<string>? Application { get; set; }

        /// <summary>
        /// CASB user activity signature name.
        /// </summary>
        [Input("casbName")]
        public Input<string>? CasbName { get; set; }

        /// <summary>
        /// CASB user activity category. Valid values: `activity-control`, `tenant-control`, `domain-control`, `safe-search-control`, `other`.
        /// </summary>
        [Input("category")]
        public Input<string>? Category { get; set; }

        [Input("controlOptions")]
        private InputList<Inputs.UseractivityControlOptionArgs>? _controlOptions;

        /// <summary>
        /// CASB control options. The structure of `control_options` block is documented below.
        /// </summary>
        public InputList<Inputs.UseractivityControlOptionArgs> ControlOptions
        {
            get => _controlOptions ?? (_controlOptions = new InputList<Inputs.UseractivityControlOptionArgs>());
            set => _controlOptions = value;
        }

        /// <summary>
        /// CASB user activity description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Input("dynamicSortSubtable")]
        public Input<string>? DynamicSortSubtable { get; set; }

        /// <summary>
        /// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        /// </summary>
        [Input("getAllTables")]
        public Input<string>? GetAllTables { get; set; }

        /// <summary>
        /// CASB user activity match strategy. Valid values: `and`, `or`.
        /// </summary>
        [Input("matchStrategy")]
        public Input<string>? MatchStrategy { get; set; }

        [Input("matches")]
        private InputList<Inputs.UseractivityMatchArgs>? _matches;

        /// <summary>
        /// CASB user activity match rules. The structure of `match` block is documented below.
        /// </summary>
        public InputList<Inputs.UseractivityMatchArgs> Matches
        {
            get => _matches ?? (_matches = new InputList<Inputs.UseractivityMatchArgs>());
            set => _matches = value;
        }

        /// <summary>
        /// CASB user activity name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// CASB user activity status. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// CASB user activity type. Valid values: `built-in`, `customized`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
        /// </summary>
        [Input("uuid")]
        public Input<string>? Uuid { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public UseractivityArgs()
        {
        }
        public static new UseractivityArgs Empty => new UseractivityArgs();
    }

    public sealed class UseractivityState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// CASB SaaS application name.
        /// </summary>
        [Input("application")]
        public Input<string>? Application { get; set; }

        /// <summary>
        /// CASB user activity signature name.
        /// </summary>
        [Input("casbName")]
        public Input<string>? CasbName { get; set; }

        /// <summary>
        /// CASB user activity category. Valid values: `activity-control`, `tenant-control`, `domain-control`, `safe-search-control`, `other`.
        /// </summary>
        [Input("category")]
        public Input<string>? Category { get; set; }

        [Input("controlOptions")]
        private InputList<Inputs.UseractivityControlOptionGetArgs>? _controlOptions;

        /// <summary>
        /// CASB control options. The structure of `control_options` block is documented below.
        /// </summary>
        public InputList<Inputs.UseractivityControlOptionGetArgs> ControlOptions
        {
            get => _controlOptions ?? (_controlOptions = new InputList<Inputs.UseractivityControlOptionGetArgs>());
            set => _controlOptions = value;
        }

        /// <summary>
        /// CASB user activity description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Input("dynamicSortSubtable")]
        public Input<string>? DynamicSortSubtable { get; set; }

        /// <summary>
        /// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        /// </summary>
        [Input("getAllTables")]
        public Input<string>? GetAllTables { get; set; }

        /// <summary>
        /// CASB user activity match strategy. Valid values: `and`, `or`.
        /// </summary>
        [Input("matchStrategy")]
        public Input<string>? MatchStrategy { get; set; }

        [Input("matches")]
        private InputList<Inputs.UseractivityMatchGetArgs>? _matches;

        /// <summary>
        /// CASB user activity match rules. The structure of `match` block is documented below.
        /// </summary>
        public InputList<Inputs.UseractivityMatchGetArgs> Matches
        {
            get => _matches ?? (_matches = new InputList<Inputs.UseractivityMatchGetArgs>());
            set => _matches = value;
        }

        /// <summary>
        /// CASB user activity name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// CASB user activity status. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// CASB user activity type. Valid values: `built-in`, `customized`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
        /// </summary>
        [Input("uuid")]
        public Input<string>? Uuid { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public UseractivityState()
        {
        }
        public static new UseractivityState Empty => new UseractivityState();
    }
}
