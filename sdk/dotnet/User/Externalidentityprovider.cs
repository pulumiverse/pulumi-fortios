// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.User
{
    /// <summary>
    /// Configure external identity provider. Applies to FortiOS Version `&gt;= 7.4.2`.
    /// 
    /// ## Import
    /// 
    /// User ExternalIdentityProvider can be imported using any of these accepted formats:
    /// 
    /// ```sh
    /// $ pulumi import fortios:user/externalidentityprovider:Externalidentityprovider labelname {{name}}
    /// ```
    /// 
    /// If you do not want to import arguments of block:
    /// 
    /// $ export "FORTIOS_IMPORT_TABLE"="false"
    /// 
    /// ```sh
    /// $ pulumi import fortios:user/externalidentityprovider:Externalidentityprovider labelname {{name}}
    /// ```
    /// 
    /// $ unset "FORTIOS_IMPORT_TABLE"
    /// </summary>
    [FortiosResourceType("fortios:user/externalidentityprovider:Externalidentityprovider")]
    public partial class Externalidentityprovider : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Group attribute name in authentication query.
        /// </summary>
        [Output("groupAttrName")]
        public Output<string> GroupAttrName { get; private set; } = null!;

        /// <summary>
        /// Specify outgoing interface to reach server.
        /// </summary>
        [Output("interface")]
        public Output<string> Interface { get; private set; } = null!;

        /// <summary>
        /// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
        /// </summary>
        [Output("interfaceSelectMethod")]
        public Output<string> InterfaceSelectMethod { get; private set; } = null!;

        /// <summary>
        /// External identity provider name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// External identity provider service port number (0 to use default).
        /// </summary>
        [Output("port")]
        public Output<int> Port { get; private set; } = null!;

        /// <summary>
        /// Enable/disable server's identity check against its certificate and subject alternative name(s). Valid values: `disable`, `enable`.
        /// </summary>
        [Output("serverIdentityCheck")]
        public Output<string> ServerIdentityCheck { get; private set; } = null!;

        /// <summary>
        /// Use this IPv4/v6 address to connect to the external identity provider.
        /// </summary>
        [Output("sourceIp")]
        public Output<string> SourceIp { get; private set; } = null!;

        /// <summary>
        /// Connection timeout value in seconds (default=5).
        /// </summary>
        [Output("timeout")]
        public Output<int> Timeout { get; private set; } = null!;

        /// <summary>
        /// External identity provider type. Valid values: `ms-graph`.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// External identity provider URL (e.g. "https://example.com:8080/api/v1").
        /// </summary>
        [Output("url")]
        public Output<string> Url { get; private set; } = null!;

        /// <summary>
        /// User attribute name in authentication query.
        /// </summary>
        [Output("userAttrName")]
        public Output<string> UserAttrName { get; private set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Output("vdomparam")]
        public Output<string?> Vdomparam { get; private set; } = null!;

        /// <summary>
        /// External identity API version. Valid values: `v1.0`, `beta`.
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a Externalidentityprovider resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Externalidentityprovider(string name, ExternalidentityproviderArgs? args = null, CustomResourceOptions? options = null)
            : base("fortios:user/externalidentityprovider:Externalidentityprovider", name, args ?? new ExternalidentityproviderArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Externalidentityprovider(string name, Input<string> id, ExternalidentityproviderState? state = null, CustomResourceOptions? options = null)
            : base("fortios:user/externalidentityprovider:Externalidentityprovider", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Externalidentityprovider resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Externalidentityprovider Get(string name, Input<string> id, ExternalidentityproviderState? state = null, CustomResourceOptions? options = null)
        {
            return new Externalidentityprovider(name, id, state, options);
        }
    }

    public sealed class ExternalidentityproviderArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Group attribute name in authentication query.
        /// </summary>
        [Input("groupAttrName")]
        public Input<string>? GroupAttrName { get; set; }

        /// <summary>
        /// Specify outgoing interface to reach server.
        /// </summary>
        [Input("interface")]
        public Input<string>? Interface { get; set; }

        /// <summary>
        /// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
        /// </summary>
        [Input("interfaceSelectMethod")]
        public Input<string>? InterfaceSelectMethod { get; set; }

        /// <summary>
        /// External identity provider name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// External identity provider service port number (0 to use default).
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// Enable/disable server's identity check against its certificate and subject alternative name(s). Valid values: `disable`, `enable`.
        /// </summary>
        [Input("serverIdentityCheck")]
        public Input<string>? ServerIdentityCheck { get; set; }

        /// <summary>
        /// Use this IPv4/v6 address to connect to the external identity provider.
        /// </summary>
        [Input("sourceIp")]
        public Input<string>? SourceIp { get; set; }

        /// <summary>
        /// Connection timeout value in seconds (default=5).
        /// </summary>
        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        /// <summary>
        /// External identity provider type. Valid values: `ms-graph`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// External identity provider URL (e.g. "https://example.com:8080/api/v1").
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        /// <summary>
        /// User attribute name in authentication query.
        /// </summary>
        [Input("userAttrName")]
        public Input<string>? UserAttrName { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        /// <summary>
        /// External identity API version. Valid values: `v1.0`, `beta`.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public ExternalidentityproviderArgs()
        {
        }
        public static new ExternalidentityproviderArgs Empty => new ExternalidentityproviderArgs();
    }

    public sealed class ExternalidentityproviderState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Group attribute name in authentication query.
        /// </summary>
        [Input("groupAttrName")]
        public Input<string>? GroupAttrName { get; set; }

        /// <summary>
        /// Specify outgoing interface to reach server.
        /// </summary>
        [Input("interface")]
        public Input<string>? Interface { get; set; }

        /// <summary>
        /// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
        /// </summary>
        [Input("interfaceSelectMethod")]
        public Input<string>? InterfaceSelectMethod { get; set; }

        /// <summary>
        /// External identity provider name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// External identity provider service port number (0 to use default).
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// Enable/disable server's identity check against its certificate and subject alternative name(s). Valid values: `disable`, `enable`.
        /// </summary>
        [Input("serverIdentityCheck")]
        public Input<string>? ServerIdentityCheck { get; set; }

        /// <summary>
        /// Use this IPv4/v6 address to connect to the external identity provider.
        /// </summary>
        [Input("sourceIp")]
        public Input<string>? SourceIp { get; set; }

        /// <summary>
        /// Connection timeout value in seconds (default=5).
        /// </summary>
        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        /// <summary>
        /// External identity provider type. Valid values: `ms-graph`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// External identity provider URL (e.g. "https://example.com:8080/api/v1").
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        /// <summary>
        /// User attribute name in authentication query.
        /// </summary>
        [Input("userAttrName")]
        public Input<string>? UserAttrName { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        /// <summary>
        /// External identity API version. Valid values: `v1.0`, `beta`.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public ExternalidentityproviderState()
        {
        }
        public static new ExternalidentityproviderState Empty => new ExternalidentityproviderState();
    }
}
