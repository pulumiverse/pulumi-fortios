// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Fmg
{
    /// <summary>
    /// This resource supports Create/Read/Update/Delete admin profiles for FortiManager
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Fortios = Pulumiverse.Fortios;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test1 = new Fortios.Fmg.SystemAdminProfiles("test1", new()
    ///     {
    ///         AdomPolicyPackages = "read",
    ///         AdomSwitch = "read",
    ///         Assignment = "read",
    ///         ConfigRetrieve = "read",
    ///         ConfigRevert = "read",
    ///         ConsistencyCheck = "read-write",
    ///         DeployManagement = "read",
    ///         Description = "11",
    ///         DeviceAp = "none",
    ///         DeviceConfig = "read",
    ///         DeviceForticlient = "read",
    ///         DeviceFortiswitch = "read",
    ///         DeviceManager = "read-write",
    ///         DeviceOperation = "read",
    ///         DeviceProfile = "read",
    ///         DeviceRevisionDeletion = "read",
    ///         DeviceWanLinkLoadBalance = "read",
    ///         FortiguardCenter = "read",
    ///         FortiguardCenterAdvanced = "read",
    ///         FortiguardCenterFirmwareManagerment = "read",
    ///         FortiguardCenterLicensing = "read",
    ///         GlobalPolicyPackages = "read-write",
    ///         ImportPolicyPackages = "read",
    ///         IntfMapping = "read-write",
    ///         LogViewer = "read",
    ///         PolicyObjects = "read-write",
    ///         Profileid = "terraform-test1",
    ///         SetInstallTargets = "read-write",
    ///         SystemSetting = "read",
    ///         TerminalAccess = "read",
    ///         VpnManager = "read",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [FortiosResourceType("fortios:fmg/systemAdminProfiles:SystemAdminProfiles")]
    public partial class SystemAdminProfiles : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Adom policy packages.
        /// </summary>
        [Output("adomPolicyPackages")]
        public Output<string?> AdomPolicyPackages { get; private set; } = null!;

        /// <summary>
        /// Administrator Domain.
        /// </summary>
        [Output("adomSwitch")]
        public Output<string?> AdomSwitch { get; private set; } = null!;

        /// <summary>
        /// Assignment Permission.
        /// </summary>
        [Output("assignment")]
        public Output<string?> Assignment { get; private set; } = null!;

        /// <summary>
        /// Configuration Retrieve.
        /// </summary>
        [Output("configRetrieve")]
        public Output<string?> ConfigRetrieve { get; private set; } = null!;

        /// <summary>
        /// Revert Configuration from Revision History.
        /// </summary>
        [Output("configRevert")]
        public Output<string?> ConfigRevert { get; private set; } = null!;

        /// <summary>
        /// Consistency check.
        /// </summary>
        [Output("consistencyCheck")]
        public Output<string?> ConsistencyCheck { get; private set; } = null!;

        /// <summary>
        /// Install to devices.
        /// </summary>
        [Output("deployManagement")]
        public Output<string?> DeployManagement { get; private set; } = null!;

        /// <summary>
        /// Description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Manage AP.
        /// </summary>
        [Output("deviceAp")]
        public Output<string?> DeviceAp { get; private set; } = null!;

        /// <summary>
        /// Manage device configurations.
        /// </summary>
        [Output("deviceConfig")]
        public Output<string?> DeviceConfig { get; private set; } = null!;

        /// <summary>
        /// Manage FortiClient.
        /// </summary>
        [Output("deviceForticlient")]
        public Output<string?> DeviceForticlient { get; private set; } = null!;

        /// <summary>
        /// Manage FortiSwitch.
        /// </summary>
        [Output("deviceFortiswitch")]
        public Output<string?> DeviceFortiswitch { get; private set; } = null!;

        /// <summary>
        /// Device Manager.
        /// </summary>
        [Output("deviceManager")]
        public Output<string?> DeviceManager { get; private set; } = null!;

        /// <summary>
        /// Device add/delete/edit.
        /// </summary>
        [Output("deviceOperation")]
        public Output<string?> DeviceOperation { get; private set; } = null!;

        /// <summary>
        /// Device profile permission.
        /// </summary>
        [Output("deviceProfile")]
        public Output<string?> DeviceProfile { get; private set; } = null!;

        /// <summary>
        /// Delete device revision.
        /// </summary>
        [Output("deviceRevisionDeletion")]
        public Output<string?> DeviceRevisionDeletion { get; private set; } = null!;

        /// <summary>
        /// Manage WAN link load balance.
        /// </summary>
        [Output("deviceWanLinkLoadBalance")]
        public Output<string?> DeviceWanLinkLoadBalance { get; private set; } = null!;

        /// <summary>
        /// FortiGuard Center.
        /// </summary>
        [Output("fortiguardCenter")]
        public Output<string?> FortiguardCenter { get; private set; } = null!;

        /// <summary>
        /// FortiGuard Center Advanced.
        /// </summary>
        [Output("fortiguardCenterAdvanced")]
        public Output<string?> FortiguardCenterAdvanced { get; private set; } = null!;

        /// <summary>
        /// FortiGuard Center Firmware Managerment.
        /// </summary>
        [Output("fortiguardCenterFirmwareManagerment")]
        public Output<string?> FortiguardCenterFirmwareManagerment { get; private set; } = null!;

        /// <summary>
        /// FortiGuard Center Licensing.
        /// </summary>
        [Output("fortiguardCenterLicensing")]
        public Output<string?> FortiguardCenterLicensing { get; private set; } = null!;

        /// <summary>
        /// Global policy packages.
        /// </summary>
        [Output("globalPolicyPackages")]
        public Output<string?> GlobalPolicyPackages { get; private set; } = null!;

        /// <summary>
        /// Import Policy Package.
        /// </summary>
        [Output("importPolicyPackages")]
        public Output<string?> ImportPolicyPackages { get; private set; } = null!;

        /// <summary>
        /// Interface Mapping.
        /// </summary>
        [Output("intfMapping")]
        public Output<string?> IntfMapping { get; private set; } = null!;

        /// <summary>
        /// Log Viewer.
        /// </summary>
        [Output("logViewer")]
        public Output<string?> LogViewer { get; private set; } = null!;

        /// <summary>
        /// Policy objects permission.
        /// </summary>
        [Output("policyObjects")]
        public Output<string?> PolicyObjects { get; private set; } = null!;

        /// <summary>
        /// Profile name.
        /// </summary>
        [Output("profileid")]
        public Output<string> Profileid { get; private set; } = null!;

        /// <summary>
        /// Edit installation targets.
        /// </summary>
        [Output("setInstallTargets")]
        public Output<string?> SetInstallTargets { get; private set; } = null!;

        /// <summary>
        /// System Setting.
        /// </summary>
        [Output("systemSetting")]
        public Output<string?> SystemSetting { get; private set; } = null!;

        /// <summary>
        /// Terminal access.
        /// </summary>
        [Output("terminalAccess")]
        public Output<string?> TerminalAccess { get; private set; } = null!;

        /// <summary>
        /// VPN Manager.
        /// </summary>
        [Output("vpnManager")]
        public Output<string?> VpnManager { get; private set; } = null!;


        /// <summary>
        /// Create a SystemAdminProfiles resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SystemAdminProfiles(string name, SystemAdminProfilesArgs args, CustomResourceOptions? options = null)
            : base("fortios:fmg/systemAdminProfiles:SystemAdminProfiles", name, args ?? new SystemAdminProfilesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SystemAdminProfiles(string name, Input<string> id, SystemAdminProfilesState? state = null, CustomResourceOptions? options = null)
            : base("fortios:fmg/systemAdminProfiles:SystemAdminProfiles", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SystemAdminProfiles resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SystemAdminProfiles Get(string name, Input<string> id, SystemAdminProfilesState? state = null, CustomResourceOptions? options = null)
        {
            return new SystemAdminProfiles(name, id, state, options);
        }
    }

    public sealed class SystemAdminProfilesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Adom policy packages.
        /// </summary>
        [Input("adomPolicyPackages")]
        public Input<string>? AdomPolicyPackages { get; set; }

        /// <summary>
        /// Administrator Domain.
        /// </summary>
        [Input("adomSwitch")]
        public Input<string>? AdomSwitch { get; set; }

        /// <summary>
        /// Assignment Permission.
        /// </summary>
        [Input("assignment")]
        public Input<string>? Assignment { get; set; }

        /// <summary>
        /// Configuration Retrieve.
        /// </summary>
        [Input("configRetrieve")]
        public Input<string>? ConfigRetrieve { get; set; }

        /// <summary>
        /// Revert Configuration from Revision History.
        /// </summary>
        [Input("configRevert")]
        public Input<string>? ConfigRevert { get; set; }

        /// <summary>
        /// Consistency check.
        /// </summary>
        [Input("consistencyCheck")]
        public Input<string>? ConsistencyCheck { get; set; }

        /// <summary>
        /// Install to devices.
        /// </summary>
        [Input("deployManagement")]
        public Input<string>? DeployManagement { get; set; }

        /// <summary>
        /// Description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Manage AP.
        /// </summary>
        [Input("deviceAp")]
        public Input<string>? DeviceAp { get; set; }

        /// <summary>
        /// Manage device configurations.
        /// </summary>
        [Input("deviceConfig")]
        public Input<string>? DeviceConfig { get; set; }

        /// <summary>
        /// Manage FortiClient.
        /// </summary>
        [Input("deviceForticlient")]
        public Input<string>? DeviceForticlient { get; set; }

        /// <summary>
        /// Manage FortiSwitch.
        /// </summary>
        [Input("deviceFortiswitch")]
        public Input<string>? DeviceFortiswitch { get; set; }

        /// <summary>
        /// Device Manager.
        /// </summary>
        [Input("deviceManager")]
        public Input<string>? DeviceManager { get; set; }

        /// <summary>
        /// Device add/delete/edit.
        /// </summary>
        [Input("deviceOperation")]
        public Input<string>? DeviceOperation { get; set; }

        /// <summary>
        /// Device profile permission.
        /// </summary>
        [Input("deviceProfile")]
        public Input<string>? DeviceProfile { get; set; }

        /// <summary>
        /// Delete device revision.
        /// </summary>
        [Input("deviceRevisionDeletion")]
        public Input<string>? DeviceRevisionDeletion { get; set; }

        /// <summary>
        /// Manage WAN link load balance.
        /// </summary>
        [Input("deviceWanLinkLoadBalance")]
        public Input<string>? DeviceWanLinkLoadBalance { get; set; }

        /// <summary>
        /// FortiGuard Center.
        /// </summary>
        [Input("fortiguardCenter")]
        public Input<string>? FortiguardCenter { get; set; }

        /// <summary>
        /// FortiGuard Center Advanced.
        /// </summary>
        [Input("fortiguardCenterAdvanced")]
        public Input<string>? FortiguardCenterAdvanced { get; set; }

        /// <summary>
        /// FortiGuard Center Firmware Managerment.
        /// </summary>
        [Input("fortiguardCenterFirmwareManagerment")]
        public Input<string>? FortiguardCenterFirmwareManagerment { get; set; }

        /// <summary>
        /// FortiGuard Center Licensing.
        /// </summary>
        [Input("fortiguardCenterLicensing")]
        public Input<string>? FortiguardCenterLicensing { get; set; }

        /// <summary>
        /// Global policy packages.
        /// </summary>
        [Input("globalPolicyPackages")]
        public Input<string>? GlobalPolicyPackages { get; set; }

        /// <summary>
        /// Import Policy Package.
        /// </summary>
        [Input("importPolicyPackages")]
        public Input<string>? ImportPolicyPackages { get; set; }

        /// <summary>
        /// Interface Mapping.
        /// </summary>
        [Input("intfMapping")]
        public Input<string>? IntfMapping { get; set; }

        /// <summary>
        /// Log Viewer.
        /// </summary>
        [Input("logViewer")]
        public Input<string>? LogViewer { get; set; }

        /// <summary>
        /// Policy objects permission.
        /// </summary>
        [Input("policyObjects")]
        public Input<string>? PolicyObjects { get; set; }

        /// <summary>
        /// Profile name.
        /// </summary>
        [Input("profileid", required: true)]
        public Input<string> Profileid { get; set; } = null!;

        /// <summary>
        /// Edit installation targets.
        /// </summary>
        [Input("setInstallTargets")]
        public Input<string>? SetInstallTargets { get; set; }

        /// <summary>
        /// System Setting.
        /// </summary>
        [Input("systemSetting")]
        public Input<string>? SystemSetting { get; set; }

        /// <summary>
        /// Terminal access.
        /// </summary>
        [Input("terminalAccess")]
        public Input<string>? TerminalAccess { get; set; }

        /// <summary>
        /// VPN Manager.
        /// </summary>
        [Input("vpnManager")]
        public Input<string>? VpnManager { get; set; }

        public SystemAdminProfilesArgs()
        {
        }
        public static new SystemAdminProfilesArgs Empty => new SystemAdminProfilesArgs();
    }

    public sealed class SystemAdminProfilesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Adom policy packages.
        /// </summary>
        [Input("adomPolicyPackages")]
        public Input<string>? AdomPolicyPackages { get; set; }

        /// <summary>
        /// Administrator Domain.
        /// </summary>
        [Input("adomSwitch")]
        public Input<string>? AdomSwitch { get; set; }

        /// <summary>
        /// Assignment Permission.
        /// </summary>
        [Input("assignment")]
        public Input<string>? Assignment { get; set; }

        /// <summary>
        /// Configuration Retrieve.
        /// </summary>
        [Input("configRetrieve")]
        public Input<string>? ConfigRetrieve { get; set; }

        /// <summary>
        /// Revert Configuration from Revision History.
        /// </summary>
        [Input("configRevert")]
        public Input<string>? ConfigRevert { get; set; }

        /// <summary>
        /// Consistency check.
        /// </summary>
        [Input("consistencyCheck")]
        public Input<string>? ConsistencyCheck { get; set; }

        /// <summary>
        /// Install to devices.
        /// </summary>
        [Input("deployManagement")]
        public Input<string>? DeployManagement { get; set; }

        /// <summary>
        /// Description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Manage AP.
        /// </summary>
        [Input("deviceAp")]
        public Input<string>? DeviceAp { get; set; }

        /// <summary>
        /// Manage device configurations.
        /// </summary>
        [Input("deviceConfig")]
        public Input<string>? DeviceConfig { get; set; }

        /// <summary>
        /// Manage FortiClient.
        /// </summary>
        [Input("deviceForticlient")]
        public Input<string>? DeviceForticlient { get; set; }

        /// <summary>
        /// Manage FortiSwitch.
        /// </summary>
        [Input("deviceFortiswitch")]
        public Input<string>? DeviceFortiswitch { get; set; }

        /// <summary>
        /// Device Manager.
        /// </summary>
        [Input("deviceManager")]
        public Input<string>? DeviceManager { get; set; }

        /// <summary>
        /// Device add/delete/edit.
        /// </summary>
        [Input("deviceOperation")]
        public Input<string>? DeviceOperation { get; set; }

        /// <summary>
        /// Device profile permission.
        /// </summary>
        [Input("deviceProfile")]
        public Input<string>? DeviceProfile { get; set; }

        /// <summary>
        /// Delete device revision.
        /// </summary>
        [Input("deviceRevisionDeletion")]
        public Input<string>? DeviceRevisionDeletion { get; set; }

        /// <summary>
        /// Manage WAN link load balance.
        /// </summary>
        [Input("deviceWanLinkLoadBalance")]
        public Input<string>? DeviceWanLinkLoadBalance { get; set; }

        /// <summary>
        /// FortiGuard Center.
        /// </summary>
        [Input("fortiguardCenter")]
        public Input<string>? FortiguardCenter { get; set; }

        /// <summary>
        /// FortiGuard Center Advanced.
        /// </summary>
        [Input("fortiguardCenterAdvanced")]
        public Input<string>? FortiguardCenterAdvanced { get; set; }

        /// <summary>
        /// FortiGuard Center Firmware Managerment.
        /// </summary>
        [Input("fortiguardCenterFirmwareManagerment")]
        public Input<string>? FortiguardCenterFirmwareManagerment { get; set; }

        /// <summary>
        /// FortiGuard Center Licensing.
        /// </summary>
        [Input("fortiguardCenterLicensing")]
        public Input<string>? FortiguardCenterLicensing { get; set; }

        /// <summary>
        /// Global policy packages.
        /// </summary>
        [Input("globalPolicyPackages")]
        public Input<string>? GlobalPolicyPackages { get; set; }

        /// <summary>
        /// Import Policy Package.
        /// </summary>
        [Input("importPolicyPackages")]
        public Input<string>? ImportPolicyPackages { get; set; }

        /// <summary>
        /// Interface Mapping.
        /// </summary>
        [Input("intfMapping")]
        public Input<string>? IntfMapping { get; set; }

        /// <summary>
        /// Log Viewer.
        /// </summary>
        [Input("logViewer")]
        public Input<string>? LogViewer { get; set; }

        /// <summary>
        /// Policy objects permission.
        /// </summary>
        [Input("policyObjects")]
        public Input<string>? PolicyObjects { get; set; }

        /// <summary>
        /// Profile name.
        /// </summary>
        [Input("profileid")]
        public Input<string>? Profileid { get; set; }

        /// <summary>
        /// Edit installation targets.
        /// </summary>
        [Input("setInstallTargets")]
        public Input<string>? SetInstallTargets { get; set; }

        /// <summary>
        /// System Setting.
        /// </summary>
        [Input("systemSetting")]
        public Input<string>? SystemSetting { get; set; }

        /// <summary>
        /// Terminal access.
        /// </summary>
        [Input("terminalAccess")]
        public Input<string>? TerminalAccess { get; set; }

        /// <summary>
        /// VPN Manager.
        /// </summary>
        [Input("vpnManager")]
        public Input<string>? VpnManager { get; set; }

        public SystemAdminProfilesState()
        {
        }
        public static new SystemAdminProfilesState Empty => new SystemAdminProfilesState();
    }
}
