// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Fmg
{
    /// <summary>
    /// This resource supports uploading FortiCare registration code to FortiGate through FortiManager.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Fortios = Pulumiverse.Fortios;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test1 = new Fortios.Fmg.SystemLicenseForticare("test1", new()
    ///     {
    ///         RegistrationCode = "jn3t3Nw7qckQzt955Htkfj5hwQ6aaa",
    ///         Target = "fortigate-test",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [FortiosResourceType("fortios:fmg/systemLicenseForticare:SystemLicenseForticare")]
    public partial class SystemLicenseForticare : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ADOM that the target device belongs to. default is 'root'.
        /// </summary>
        [Output("adom")]
        public Output<string?> Adom { get; private set; } = null!;

        /// <summary>
        /// Registration code.
        /// </summary>
        [Output("registrationCode")]
        public Output<string> RegistrationCode { get; private set; } = null!;

        /// <summary>
        /// Target name, which is managed by FortiManager.
        /// </summary>
        [Output("target")]
        public Output<string> Target { get; private set; } = null!;


        /// <summary>
        /// Create a SystemLicenseForticare resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SystemLicenseForticare(string name, SystemLicenseForticareArgs args, CustomResourceOptions? options = null)
            : base("fortios:fmg/systemLicenseForticare:SystemLicenseForticare", name, args ?? new SystemLicenseForticareArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SystemLicenseForticare(string name, Input<string> id, SystemLicenseForticareState? state = null, CustomResourceOptions? options = null)
            : base("fortios:fmg/systemLicenseForticare:SystemLicenseForticare", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SystemLicenseForticare resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SystemLicenseForticare Get(string name, Input<string> id, SystemLicenseForticareState? state = null, CustomResourceOptions? options = null)
        {
            return new SystemLicenseForticare(name, id, state, options);
        }
    }

    public sealed class SystemLicenseForticareArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ADOM that the target device belongs to. default is 'root'.
        /// </summary>
        [Input("adom")]
        public Input<string>? Adom { get; set; }

        /// <summary>
        /// Registration code.
        /// </summary>
        [Input("registrationCode", required: true)]
        public Input<string> RegistrationCode { get; set; } = null!;

        /// <summary>
        /// Target name, which is managed by FortiManager.
        /// </summary>
        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        public SystemLicenseForticareArgs()
        {
        }
        public static new SystemLicenseForticareArgs Empty => new SystemLicenseForticareArgs();
    }

    public sealed class SystemLicenseForticareState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ADOM that the target device belongs to. default is 'root'.
        /// </summary>
        [Input("adom")]
        public Input<string>? Adom { get; set; }

        /// <summary>
        /// Registration code.
        /// </summary>
        [Input("registrationCode")]
        public Input<string>? RegistrationCode { get; set; }

        /// <summary>
        /// Target name, which is managed by FortiManager.
        /// </summary>
        [Input("target")]
        public Input<string>? Target { get; set; }

        public SystemLicenseForticareState()
        {
        }
        public static new SystemLicenseForticareState Empty => new SystemLicenseForticareState();
    }
}
