// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Fmg
{
    /// <summary>
    /// This resource supports Create/Read/Update/Delete admin user for FortiManager
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Fortios = Pulumiverse.Fortios;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test1 = new Fortios.Fmg.SystemAdminUser("test1", new()
    ///     {
    ///         Description = "local user",
    ///         Password = "123",
    ///         Profileid = "Standard_User",
    ///         RpcPermit = "read",
    ///         Trusthost1 = "1.1.1.1 255.255.255.255",
    ///         UserType = "local",
    ///         Userid = "user1",
    ///     });
    /// 
    ///     var test2 = new Fortios.Fmg.SystemAdminUser("test2", new()
    ///     {
    ///         Description = "api user",
    ///         Password = "098",
    ///         Profileid = "Standard_User",
    ///         RpcPermit = "read-write",
    ///         Trusthost1 = "2.2.2.2 255.255.255.255",
    ///         Userid = "user2",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [FortiosResourceType("fortios:fmg/systemAdminUser:SystemAdminUser")]
    public partial class SystemAdminUser : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Password.
        /// </summary>
        [Output("password")]
        public Output<string?> Password { get; private set; } = null!;

        /// <summary>
        /// Profile id.
        /// </summary>
        [Output("profileid")]
        public Output<string?> Profileid { get; private set; } = null!;

        /// <summary>
        /// RADIUS server name.
        /// </summary>
        [Output("radiusServer")]
        public Output<string?> RadiusServer { get; private set; } = null!;

        /// <summary>
        /// Rpc permit, Enum: ["read-write", "none", "read"]
        /// </summary>
        [Output("rpcPermit")]
        public Output<string?> RpcPermit { get; private set; } = null!;

        /// <summary>
        /// Admin user trusted host IP, default 0.0.0.0 0.0.0.0 for all.
        /// </summary>
        [Output("trusthost1")]
        public Output<string?> Trusthost1 { get; private set; } = null!;

        /// <summary>
        /// Admin user trusted host IP, default 255.255.255.255 255.255.255.255 for none.
        /// </summary>
        [Output("trusthost2")]
        public Output<string?> Trusthost2 { get; private set; } = null!;

        /// <summary>
        /// Admin user trusted host IP, default 255.255.255.255 255.255.255.255 for none.
        /// </summary>
        [Output("trusthost3")]
        public Output<string?> Trusthost3 { get; private set; } = null!;

        /// <summary>
        /// User type, Enum: ["local", "radius", "ldap", "tacacs-plus", "pki-auth", "group"]
        /// </summary>
        [Output("userType")]
        public Output<string?> UserType { get; private set; } = null!;

        /// <summary>
        /// User name.
        /// </summary>
        [Output("userid")]
        public Output<string> Userid { get; private set; } = null!;


        /// <summary>
        /// Create a SystemAdminUser resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SystemAdminUser(string name, SystemAdminUserArgs args, CustomResourceOptions? options = null)
            : base("fortios:fmg/systemAdminUser:SystemAdminUser", name, args ?? new SystemAdminUserArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SystemAdminUser(string name, Input<string> id, SystemAdminUserState? state = null, CustomResourceOptions? options = null)
            : base("fortios:fmg/systemAdminUser:SystemAdminUser", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SystemAdminUser resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SystemAdminUser Get(string name, Input<string> id, SystemAdminUserState? state = null, CustomResourceOptions? options = null)
        {
            return new SystemAdminUser(name, id, state, options);
        }
    }

    public sealed class SystemAdminUserArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Password.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// Profile id.
        /// </summary>
        [Input("profileid")]
        public Input<string>? Profileid { get; set; }

        /// <summary>
        /// RADIUS server name.
        /// </summary>
        [Input("radiusServer")]
        public Input<string>? RadiusServer { get; set; }

        /// <summary>
        /// Rpc permit, Enum: ["read-write", "none", "read"]
        /// </summary>
        [Input("rpcPermit")]
        public Input<string>? RpcPermit { get; set; }

        /// <summary>
        /// Admin user trusted host IP, default 0.0.0.0 0.0.0.0 for all.
        /// </summary>
        [Input("trusthost1")]
        public Input<string>? Trusthost1 { get; set; }

        /// <summary>
        /// Admin user trusted host IP, default 255.255.255.255 255.255.255.255 for none.
        /// </summary>
        [Input("trusthost2")]
        public Input<string>? Trusthost2 { get; set; }

        /// <summary>
        /// Admin user trusted host IP, default 255.255.255.255 255.255.255.255 for none.
        /// </summary>
        [Input("trusthost3")]
        public Input<string>? Trusthost3 { get; set; }

        /// <summary>
        /// User type, Enum: ["local", "radius", "ldap", "tacacs-plus", "pki-auth", "group"]
        /// </summary>
        [Input("userType")]
        public Input<string>? UserType { get; set; }

        /// <summary>
        /// User name.
        /// </summary>
        [Input("userid", required: true)]
        public Input<string> Userid { get; set; } = null!;

        public SystemAdminUserArgs()
        {
        }
        public static new SystemAdminUserArgs Empty => new SystemAdminUserArgs();
    }

    public sealed class SystemAdminUserState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Password.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// Profile id.
        /// </summary>
        [Input("profileid")]
        public Input<string>? Profileid { get; set; }

        /// <summary>
        /// RADIUS server name.
        /// </summary>
        [Input("radiusServer")]
        public Input<string>? RadiusServer { get; set; }

        /// <summary>
        /// Rpc permit, Enum: ["read-write", "none", "read"]
        /// </summary>
        [Input("rpcPermit")]
        public Input<string>? RpcPermit { get; set; }

        /// <summary>
        /// Admin user trusted host IP, default 0.0.0.0 0.0.0.0 for all.
        /// </summary>
        [Input("trusthost1")]
        public Input<string>? Trusthost1 { get; set; }

        /// <summary>
        /// Admin user trusted host IP, default 255.255.255.255 255.255.255.255 for none.
        /// </summary>
        [Input("trusthost2")]
        public Input<string>? Trusthost2 { get; set; }

        /// <summary>
        /// Admin user trusted host IP, default 255.255.255.255 255.255.255.255 for none.
        /// </summary>
        [Input("trusthost3")]
        public Input<string>? Trusthost3 { get; set; }

        /// <summary>
        /// User type, Enum: ["local", "radius", "ldap", "tacacs-plus", "pki-auth", "group"]
        /// </summary>
        [Input("userType")]
        public Input<string>? UserType { get; set; }

        /// <summary>
        /// User name.
        /// </summary>
        [Input("userid")]
        public Input<string>? Userid { get; set; }

        public SystemAdminUserState()
        {
        }
        public static new SystemAdminUserState Empty => new SystemAdminUserState();
    }
}
