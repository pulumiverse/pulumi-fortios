// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.System.Snmp
{
    /// <summary>
    /// SNMP system info configuration.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Fortios = Pulumiverse.Fortios;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var trname = new Fortios.System.Snmp.Sysinfo("trname", new()
    ///     {
    ///         Status = "disable",
    ///         TrapHighCpuThreshold = 80,
    ///         TrapLogFullThreshold = 90,
    ///         TrapLowMemoryThreshold = 80,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// SystemSnmp Sysinfo can be imported using any of these accepted formats:
    /// 
    /// ```sh
    /// $ pulumi import fortios:system/snmp/sysinfo:Sysinfo labelname SystemSnmpSysinfo
    /// ```
    /// 
    /// If you do not want to import arguments of block:
    /// 
    /// $ export "FORTIOS_IMPORT_TABLE"="false"
    /// 
    /// ```sh
    /// $ pulumi import fortios:system/snmp/sysinfo:Sysinfo labelname SystemSnmpSysinfo
    /// ```
    /// 
    /// $ unset "FORTIOS_IMPORT_TABLE"
    /// </summary>
    [FortiosResourceType("fortios:system/snmp/sysinfo:Sysinfo")]
    public partial class Sysinfo : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Contact information.
        /// </summary>
        [Output("contactInfo")]
        public Output<string?> ContactInfo { get; private set; } = null!;

        /// <summary>
        /// System description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Local SNMP engineID string (maximum 24 characters).
        /// </summary>
        [Output("engineId")]
        public Output<string> EngineId { get; private set; } = null!;

        /// <summary>
        /// Local SNMP engineID type (text/hex/mac). Valid values: `text`, `hex`, `mac`.
        /// </summary>
        [Output("engineIdType")]
        public Output<string> EngineIdType { get; private set; } = null!;

        /// <summary>
        /// System location.
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// Enable/disable SNMP. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Free memory usage when trap is sent.
        /// </summary>
        [Output("trapFreeMemoryThreshold")]
        public Output<int> TrapFreeMemoryThreshold { get; private set; } = null!;

        /// <summary>
        /// Freeable memory usage when trap is sent.
        /// </summary>
        [Output("trapFreeableMemoryThreshold")]
        public Output<int> TrapFreeableMemoryThreshold { get; private set; } = null!;

        /// <summary>
        /// CPU usage when trap is sent.
        /// </summary>
        [Output("trapHighCpuThreshold")]
        public Output<int> TrapHighCpuThreshold { get; private set; } = null!;

        /// <summary>
        /// Log disk usage when trap is sent.
        /// </summary>
        [Output("trapLogFullThreshold")]
        public Output<int> TrapLogFullThreshold { get; private set; } = null!;

        /// <summary>
        /// Memory usage when trap is sent.
        /// </summary>
        [Output("trapLowMemoryThreshold")]
        public Output<int> TrapLowMemoryThreshold { get; private set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Output("vdomparam")]
        public Output<string?> Vdomparam { get; private set; } = null!;


        /// <summary>
        /// Create a Sysinfo resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Sysinfo(string name, SysinfoArgs? args = null, CustomResourceOptions? options = null)
            : base("fortios:system/snmp/sysinfo:Sysinfo", name, args ?? new SysinfoArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Sysinfo(string name, Input<string> id, SysinfoState? state = null, CustomResourceOptions? options = null)
            : base("fortios:system/snmp/sysinfo:Sysinfo", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Sysinfo resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Sysinfo Get(string name, Input<string> id, SysinfoState? state = null, CustomResourceOptions? options = null)
        {
            return new Sysinfo(name, id, state, options);
        }
    }

    public sealed class SysinfoArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Contact information.
        /// </summary>
        [Input("contactInfo")]
        public Input<string>? ContactInfo { get; set; }

        /// <summary>
        /// System description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Local SNMP engineID string (maximum 24 characters).
        /// </summary>
        [Input("engineId")]
        public Input<string>? EngineId { get; set; }

        /// <summary>
        /// Local SNMP engineID type (text/hex/mac). Valid values: `text`, `hex`, `mac`.
        /// </summary>
        [Input("engineIdType")]
        public Input<string>? EngineIdType { get; set; }

        /// <summary>
        /// System location.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Enable/disable SNMP. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Free memory usage when trap is sent.
        /// </summary>
        [Input("trapFreeMemoryThreshold")]
        public Input<int>? TrapFreeMemoryThreshold { get; set; }

        /// <summary>
        /// Freeable memory usage when trap is sent.
        /// </summary>
        [Input("trapFreeableMemoryThreshold")]
        public Input<int>? TrapFreeableMemoryThreshold { get; set; }

        /// <summary>
        /// CPU usage when trap is sent.
        /// </summary>
        [Input("trapHighCpuThreshold")]
        public Input<int>? TrapHighCpuThreshold { get; set; }

        /// <summary>
        /// Log disk usage when trap is sent.
        /// </summary>
        [Input("trapLogFullThreshold")]
        public Input<int>? TrapLogFullThreshold { get; set; }

        /// <summary>
        /// Memory usage when trap is sent.
        /// </summary>
        [Input("trapLowMemoryThreshold")]
        public Input<int>? TrapLowMemoryThreshold { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public SysinfoArgs()
        {
        }
        public static new SysinfoArgs Empty => new SysinfoArgs();
    }

    public sealed class SysinfoState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Contact information.
        /// </summary>
        [Input("contactInfo")]
        public Input<string>? ContactInfo { get; set; }

        /// <summary>
        /// System description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Local SNMP engineID string (maximum 24 characters).
        /// </summary>
        [Input("engineId")]
        public Input<string>? EngineId { get; set; }

        /// <summary>
        /// Local SNMP engineID type (text/hex/mac). Valid values: `text`, `hex`, `mac`.
        /// </summary>
        [Input("engineIdType")]
        public Input<string>? EngineIdType { get; set; }

        /// <summary>
        /// System location.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Enable/disable SNMP. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Free memory usage when trap is sent.
        /// </summary>
        [Input("trapFreeMemoryThreshold")]
        public Input<int>? TrapFreeMemoryThreshold { get; set; }

        /// <summary>
        /// Freeable memory usage when trap is sent.
        /// </summary>
        [Input("trapFreeableMemoryThreshold")]
        public Input<int>? TrapFreeableMemoryThreshold { get; set; }

        /// <summary>
        /// CPU usage when trap is sent.
        /// </summary>
        [Input("trapHighCpuThreshold")]
        public Input<int>? TrapHighCpuThreshold { get; set; }

        /// <summary>
        /// Log disk usage when trap is sent.
        /// </summary>
        [Input("trapLogFullThreshold")]
        public Input<int>? TrapLogFullThreshold { get; set; }

        /// <summary>
        /// Memory usage when trap is sent.
        /// </summary>
        [Input("trapLowMemoryThreshold")]
        public Input<int>? TrapLowMemoryThreshold { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public SysinfoState()
        {
        }
        public static new SysinfoState Empty => new SysinfoState();
    }
}
