// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.System
{
    public static class GetVdomnetflow
    {
        /// <summary>
        /// Use this data source to get information on fortios system vdomnetflow
        /// </summary>
        public static Task<GetVdomnetflowResult> InvokeAsync(GetVdomnetflowArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVdomnetflowResult>("fortios:system/getVdomnetflow:getVdomnetflow", args ?? new GetVdomnetflowArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get information on fortios system vdomnetflow
        /// </summary>
        public static Output<GetVdomnetflowResult> Invoke(GetVdomnetflowInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVdomnetflowResult>("fortios:system/getVdomnetflow:getVdomnetflow", args ?? new GetVdomnetflowInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVdomnetflowArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public string? Vdomparam { get; set; }

        public GetVdomnetflowArgs()
        {
        }
        public static new GetVdomnetflowArgs Empty => new GetVdomnetflowArgs();
    }

    public sealed class GetVdomnetflowInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public GetVdomnetflowInvokeArgs()
        {
        }
        public static new GetVdomnetflowInvokeArgs Empty => new GetVdomnetflowInvokeArgs();
    }


    [OutputType]
    public sealed class GetVdomnetflowResult
    {
        /// <summary>
        /// Collector IP.
        /// </summary>
        public readonly string CollectorIp;
        /// <summary>
        /// NetFlow collector port number.
        /// </summary>
        public readonly int CollectorPort;
        /// <summary>
        /// Netflow collectors. The structure of `collectors` block is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVdomnetflowCollectorResult> Collectors;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Specify outgoing interface to reach server.
        /// </summary>
        public readonly string Interface;
        /// <summary>
        /// Specify how to select outgoing interface to reach server.
        /// </summary>
        public readonly string InterfaceSelectMethod;
        /// <summary>
        /// Source IP address for communication with the NetFlow agent.
        /// </summary>
        public readonly string SourceIp;
        /// <summary>
        /// Enable/disable NetFlow per VDOM.
        /// </summary>
        public readonly string VdomNetflow;
        public readonly string? Vdomparam;

        [OutputConstructor]
        private GetVdomnetflowResult(
            string collectorIp,

            int collectorPort,

            ImmutableArray<Outputs.GetVdomnetflowCollectorResult> collectors,

            string id,

            string @interface,

            string interfaceSelectMethod,

            string sourceIp,

            string vdomNetflow,

            string? vdomparam)
        {
            CollectorIp = collectorIp;
            CollectorPort = collectorPort;
            Collectors = collectors;
            Id = id;
            Interface = @interface;
            InterfaceSelectMethod = interfaceSelectMethod;
            SourceIp = sourceIp;
            VdomNetflow = vdomNetflow;
            Vdomparam = vdomparam;
        }
    }
}
