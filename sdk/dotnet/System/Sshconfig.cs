// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.System
{
    /// <summary>
    /// Configure SSH config. Applies to FortiOS Version `&gt;= 7.4.4`.
    /// 
    /// ## Import
    /// 
    /// System SshConfig can be imported using any of these accepted formats:
    /// 
    /// ```sh
    /// $ pulumi import fortios:system/sshconfig:Sshconfig labelname SystemSshConfig
    /// ```
    /// 
    /// If you do not want to import arguments of block:
    /// 
    /// $ export "FORTIOS_IMPORT_TABLE"="false"
    /// 
    /// ```sh
    /// $ pulumi import fortios:system/sshconfig:Sshconfig labelname SystemSshConfig
    /// ```
    /// 
    /// $ unset "FORTIOS_IMPORT_TABLE"
    /// </summary>
    [FortiosResourceType("fortios:system/sshconfig:Sshconfig")]
    public partial class Sshconfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Select one or more SSH ciphers. Valid values: `chacha20-poly1305@openssh.com`, `aes128-ctr`, `aes192-ctr`, `aes256-ctr`, `arcfour256`, `arcfour128`, `aes128-cbc`, `3des-cbc`, `blowfish-cbc`, `cast128-cbc`, `aes192-cbc`, `aes256-cbc`, `arcfour`, `rijndael-cbc@lysator.liu.se`, `aes128-gcm@openssh.com`, `aes256-gcm@openssh.com`.
        /// </summary>
        [Output("sshEncAlgo")]
        public Output<string> SshEncAlgo { get; private set; } = null!;

        /// <summary>
        /// Config SSH host key.
        /// </summary>
        [Output("sshHsk")]
        public Output<string> SshHsk { get; private set; } = null!;

        /// <summary>
        /// Select one or more SSH hostkey algorithms. Valid values: `ssh-rsa`, `ecdsa-sha2-nistp521`, `ecdsa-sha2-nistp384`, `ecdsa-sha2-nistp256`, `rsa-sha2-256`, `rsa-sha2-512`, `ssh-ed25519`.
        /// </summary>
        [Output("sshHskAlgo")]
        public Output<string> SshHskAlgo { get; private set; } = null!;

        /// <summary>
        /// Enable/disable SSH host key override in SSH daemon. Valid values: `disable`, `enable`.
        /// </summary>
        [Output("sshHskOverride")]
        public Output<string> SshHskOverride { get; private set; } = null!;

        /// <summary>
        /// Password for ssh-hostkey.
        /// </summary>
        [Output("sshHskPassword")]
        public Output<string?> SshHskPassword { get; private set; } = null!;

        /// <summary>
        /// Select one or more SSH kex algorithms. Valid values: `diffie-hellman-group1-sha1`, `diffie-hellman-group14-sha1`, `diffie-hellman-group14-sha256`, `diffie-hellman-group16-sha512`, `diffie-hellman-group18-sha512`, `diffie-hellman-group-exchange-sha1`, `diffie-hellman-group-exchange-sha256`, `curve25519-sha256@libssh.org`, `ecdh-sha2-nistp256`, `ecdh-sha2-nistp384`, `ecdh-sha2-nistp521`.
        /// </summary>
        [Output("sshKexAlgo")]
        public Output<string> SshKexAlgo { get; private set; } = null!;

        /// <summary>
        /// Select one or more SSH MAC algorithms. Valid values: `hmac-md5`, `hmac-md5-etm@openssh.com`, `hmac-md5-96`, `hmac-md5-96-etm@openssh.com`, `hmac-sha1`, `hmac-sha1-etm@openssh.com`, `hmac-sha2-256`, `hmac-sha2-256-etm@openssh.com`, `hmac-sha2-512`, `hmac-sha2-512-etm@openssh.com`, `hmac-ripemd160`, `hmac-ripemd160@openssh.com`, `hmac-ripemd160-etm@openssh.com`, `umac-64@openssh.com`, `umac-128@openssh.com`, `umac-64-etm@openssh.com`, `umac-128-etm@openssh.com`.
        /// </summary>
        [Output("sshMacAlgo")]
        public Output<string> SshMacAlgo { get; private set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Output("vdomparam")]
        public Output<string> Vdomparam { get; private set; } = null!;


        /// <summary>
        /// Create a Sshconfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Sshconfig(string name, SshconfigArgs? args = null, CustomResourceOptions? options = null)
            : base("fortios:system/sshconfig:Sshconfig", name, args ?? new SshconfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Sshconfig(string name, Input<string> id, SshconfigState? state = null, CustomResourceOptions? options = null)
            : base("fortios:system/sshconfig:Sshconfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Sshconfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Sshconfig Get(string name, Input<string> id, SshconfigState? state = null, CustomResourceOptions? options = null)
        {
            return new Sshconfig(name, id, state, options);
        }
    }

    public sealed class SshconfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Select one or more SSH ciphers. Valid values: `chacha20-poly1305@openssh.com`, `aes128-ctr`, `aes192-ctr`, `aes256-ctr`, `arcfour256`, `arcfour128`, `aes128-cbc`, `3des-cbc`, `blowfish-cbc`, `cast128-cbc`, `aes192-cbc`, `aes256-cbc`, `arcfour`, `rijndael-cbc@lysator.liu.se`, `aes128-gcm@openssh.com`, `aes256-gcm@openssh.com`.
        /// </summary>
        [Input("sshEncAlgo")]
        public Input<string>? SshEncAlgo { get; set; }

        /// <summary>
        /// Config SSH host key.
        /// </summary>
        [Input("sshHsk")]
        public Input<string>? SshHsk { get; set; }

        /// <summary>
        /// Select one or more SSH hostkey algorithms. Valid values: `ssh-rsa`, `ecdsa-sha2-nistp521`, `ecdsa-sha2-nistp384`, `ecdsa-sha2-nistp256`, `rsa-sha2-256`, `rsa-sha2-512`, `ssh-ed25519`.
        /// </summary>
        [Input("sshHskAlgo")]
        public Input<string>? SshHskAlgo { get; set; }

        /// <summary>
        /// Enable/disable SSH host key override in SSH daemon. Valid values: `disable`, `enable`.
        /// </summary>
        [Input("sshHskOverride")]
        public Input<string>? SshHskOverride { get; set; }

        /// <summary>
        /// Password for ssh-hostkey.
        /// </summary>
        [Input("sshHskPassword")]
        public Input<string>? SshHskPassword { get; set; }

        /// <summary>
        /// Select one or more SSH kex algorithms. Valid values: `diffie-hellman-group1-sha1`, `diffie-hellman-group14-sha1`, `diffie-hellman-group14-sha256`, `diffie-hellman-group16-sha512`, `diffie-hellman-group18-sha512`, `diffie-hellman-group-exchange-sha1`, `diffie-hellman-group-exchange-sha256`, `curve25519-sha256@libssh.org`, `ecdh-sha2-nistp256`, `ecdh-sha2-nistp384`, `ecdh-sha2-nistp521`.
        /// </summary>
        [Input("sshKexAlgo")]
        public Input<string>? SshKexAlgo { get; set; }

        /// <summary>
        /// Select one or more SSH MAC algorithms. Valid values: `hmac-md5`, `hmac-md5-etm@openssh.com`, `hmac-md5-96`, `hmac-md5-96-etm@openssh.com`, `hmac-sha1`, `hmac-sha1-etm@openssh.com`, `hmac-sha2-256`, `hmac-sha2-256-etm@openssh.com`, `hmac-sha2-512`, `hmac-sha2-512-etm@openssh.com`, `hmac-ripemd160`, `hmac-ripemd160@openssh.com`, `hmac-ripemd160-etm@openssh.com`, `umac-64@openssh.com`, `umac-128@openssh.com`, `umac-64-etm@openssh.com`, `umac-128-etm@openssh.com`.
        /// </summary>
        [Input("sshMacAlgo")]
        public Input<string>? SshMacAlgo { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public SshconfigArgs()
        {
        }
        public static new SshconfigArgs Empty => new SshconfigArgs();
    }

    public sealed class SshconfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Select one or more SSH ciphers. Valid values: `chacha20-poly1305@openssh.com`, `aes128-ctr`, `aes192-ctr`, `aes256-ctr`, `arcfour256`, `arcfour128`, `aes128-cbc`, `3des-cbc`, `blowfish-cbc`, `cast128-cbc`, `aes192-cbc`, `aes256-cbc`, `arcfour`, `rijndael-cbc@lysator.liu.se`, `aes128-gcm@openssh.com`, `aes256-gcm@openssh.com`.
        /// </summary>
        [Input("sshEncAlgo")]
        public Input<string>? SshEncAlgo { get; set; }

        /// <summary>
        /// Config SSH host key.
        /// </summary>
        [Input("sshHsk")]
        public Input<string>? SshHsk { get; set; }

        /// <summary>
        /// Select one or more SSH hostkey algorithms. Valid values: `ssh-rsa`, `ecdsa-sha2-nistp521`, `ecdsa-sha2-nistp384`, `ecdsa-sha2-nistp256`, `rsa-sha2-256`, `rsa-sha2-512`, `ssh-ed25519`.
        /// </summary>
        [Input("sshHskAlgo")]
        public Input<string>? SshHskAlgo { get; set; }

        /// <summary>
        /// Enable/disable SSH host key override in SSH daemon. Valid values: `disable`, `enable`.
        /// </summary>
        [Input("sshHskOverride")]
        public Input<string>? SshHskOverride { get; set; }

        /// <summary>
        /// Password for ssh-hostkey.
        /// </summary>
        [Input("sshHskPassword")]
        public Input<string>? SshHskPassword { get; set; }

        /// <summary>
        /// Select one or more SSH kex algorithms. Valid values: `diffie-hellman-group1-sha1`, `diffie-hellman-group14-sha1`, `diffie-hellman-group14-sha256`, `diffie-hellman-group16-sha512`, `diffie-hellman-group18-sha512`, `diffie-hellman-group-exchange-sha1`, `diffie-hellman-group-exchange-sha256`, `curve25519-sha256@libssh.org`, `ecdh-sha2-nistp256`, `ecdh-sha2-nistp384`, `ecdh-sha2-nistp521`.
        /// </summary>
        [Input("sshKexAlgo")]
        public Input<string>? SshKexAlgo { get; set; }

        /// <summary>
        /// Select one or more SSH MAC algorithms. Valid values: `hmac-md5`, `hmac-md5-etm@openssh.com`, `hmac-md5-96`, `hmac-md5-96-etm@openssh.com`, `hmac-sha1`, `hmac-sha1-etm@openssh.com`, `hmac-sha2-256`, `hmac-sha2-256-etm@openssh.com`, `hmac-sha2-512`, `hmac-sha2-512-etm@openssh.com`, `hmac-ripemd160`, `hmac-ripemd160@openssh.com`, `hmac-ripemd160-etm@openssh.com`, `umac-64@openssh.com`, `umac-128@openssh.com`, `umac-64-etm@openssh.com`, `umac-128-etm@openssh.com`.
        /// </summary>
        [Input("sshMacAlgo")]
        public Input<string>? SshMacAlgo { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public SshconfigState()
        {
        }
        public static new SshconfigState Empty => new SshconfigState();
    }
}
