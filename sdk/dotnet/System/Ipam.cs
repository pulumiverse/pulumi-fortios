// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.System
{
    /// <summary>
    /// Configure IP address management services. Applies to FortiOS Version `&gt;= 7.0.2`.
    /// 
    /// ## Import
    /// 
    /// System Ipam can be imported using any of these accepted formats:
    /// 
    /// ```sh
    /// $ pulumi import fortios:system/ipam:Ipam labelname SystemIpam
    /// ```
    /// 
    /// If you do not want to import arguments of block:
    /// 
    /// $ export "FORTIOS_IMPORT_TABLE"="false"
    /// 
    /// ```sh
    /// $ pulumi import fortios:system/ipam:Ipam labelname SystemIpam
    /// ```
    /// 
    /// $ unset "FORTIOS_IMPORT_TABLE"
    /// </summary>
    [FortiosResourceType("fortios:system/ipam:Ipam")]
    public partial class Ipam : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Enable/disable automatic conflict resolution. Valid values: `disable`, `enable`.
        /// </summary>
        [Output("automaticConflictResolution")]
        public Output<string> AutomaticConflictResolution { get; private set; } = null!;

        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Output("dynamicSortSubtable")]
        public Output<string?> DynamicSortSubtable { get; private set; } = null!;

        /// <summary>
        /// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        /// </summary>
        [Output("getAllTables")]
        public Output<string?> GetAllTables { get; private set; } = null!;

        /// <summary>
        /// Enable/disable default management of LAN interface addresses. Valid values: `disable`, `enable`.
        /// </summary>
        [Output("manageLanAddresses")]
        public Output<string> ManageLanAddresses { get; private set; } = null!;

        /// <summary>
        /// Enable/disable default management of FortiExtender LAN extension interface addresses. Valid values: `disable`, `enable`.
        /// </summary>
        [Output("manageLanExtensionAddresses")]
        public Output<string> ManageLanExtensionAddresses { get; private set; } = null!;

        /// <summary>
        /// Enable/disable default management of FortiAP SSID addresses. Valid values: `disable`, `enable`.
        /// </summary>
        [Output("manageSsidAddresses")]
        public Output<string> ManageSsidAddresses { get; private set; } = null!;

        /// <summary>
        /// Configure IPAM pool subnet, Class A - Class B subnet.
        /// </summary>
        [Output("poolSubnet")]
        public Output<string> PoolSubnet { get; private set; } = null!;

        /// <summary>
        /// Configure IPAM pools. The structure of `pools` block is documented below.
        /// </summary>
        [Output("pools")]
        public Output<ImmutableArray<Outputs.IpamPool>> Pools { get; private set; } = null!;

        /// <summary>
        /// Enable/disable reassignment of subnets to make requested and actual sizes match. Valid values: `disable`, `enable`.
        /// </summary>
        [Output("requireSubnetSizeMatch")]
        public Output<string> RequireSubnetSizeMatch { get; private set; } = null!;

        /// <summary>
        /// Configure IPAM allocation rules. The structure of `rules` block is documented below.
        /// </summary>
        [Output("rules")]
        public Output<ImmutableArray<Outputs.IpamRule>> Rules { get; private set; } = null!;

        /// <summary>
        /// Configure the type of IPAM server to use.
        /// </summary>
        [Output("serverType")]
        public Output<string> ServerType { get; private set; } = null!;

        /// <summary>
        /// Enable/disable IP address management services. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Output("vdomparam")]
        public Output<string?> Vdomparam { get; private set; } = null!;


        /// <summary>
        /// Create a Ipam resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Ipam(string name, IpamArgs? args = null, CustomResourceOptions? options = null)
            : base("fortios:system/ipam:Ipam", name, args ?? new IpamArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Ipam(string name, Input<string> id, IpamState? state = null, CustomResourceOptions? options = null)
            : base("fortios:system/ipam:Ipam", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Ipam resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Ipam Get(string name, Input<string> id, IpamState? state = null, CustomResourceOptions? options = null)
        {
            return new Ipam(name, id, state, options);
        }
    }

    public sealed class IpamArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable/disable automatic conflict resolution. Valid values: `disable`, `enable`.
        /// </summary>
        [Input("automaticConflictResolution")]
        public Input<string>? AutomaticConflictResolution { get; set; }

        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Input("dynamicSortSubtable")]
        public Input<string>? DynamicSortSubtable { get; set; }

        /// <summary>
        /// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        /// </summary>
        [Input("getAllTables")]
        public Input<string>? GetAllTables { get; set; }

        /// <summary>
        /// Enable/disable default management of LAN interface addresses. Valid values: `disable`, `enable`.
        /// </summary>
        [Input("manageLanAddresses")]
        public Input<string>? ManageLanAddresses { get; set; }

        /// <summary>
        /// Enable/disable default management of FortiExtender LAN extension interface addresses. Valid values: `disable`, `enable`.
        /// </summary>
        [Input("manageLanExtensionAddresses")]
        public Input<string>? ManageLanExtensionAddresses { get; set; }

        /// <summary>
        /// Enable/disable default management of FortiAP SSID addresses. Valid values: `disable`, `enable`.
        /// </summary>
        [Input("manageSsidAddresses")]
        public Input<string>? ManageSsidAddresses { get; set; }

        /// <summary>
        /// Configure IPAM pool subnet, Class A - Class B subnet.
        /// </summary>
        [Input("poolSubnet")]
        public Input<string>? PoolSubnet { get; set; }

        [Input("pools")]
        private InputList<Inputs.IpamPoolArgs>? _pools;

        /// <summary>
        /// Configure IPAM pools. The structure of `pools` block is documented below.
        /// </summary>
        public InputList<Inputs.IpamPoolArgs> Pools
        {
            get => _pools ?? (_pools = new InputList<Inputs.IpamPoolArgs>());
            set => _pools = value;
        }

        /// <summary>
        /// Enable/disable reassignment of subnets to make requested and actual sizes match. Valid values: `disable`, `enable`.
        /// </summary>
        [Input("requireSubnetSizeMatch")]
        public Input<string>? RequireSubnetSizeMatch { get; set; }

        [Input("rules")]
        private InputList<Inputs.IpamRuleArgs>? _rules;

        /// <summary>
        /// Configure IPAM allocation rules. The structure of `rules` block is documented below.
        /// </summary>
        public InputList<Inputs.IpamRuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.IpamRuleArgs>());
            set => _rules = value;
        }

        /// <summary>
        /// Configure the type of IPAM server to use.
        /// </summary>
        [Input("serverType")]
        public Input<string>? ServerType { get; set; }

        /// <summary>
        /// Enable/disable IP address management services. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public IpamArgs()
        {
        }
        public static new IpamArgs Empty => new IpamArgs();
    }

    public sealed class IpamState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable/disable automatic conflict resolution. Valid values: `disable`, `enable`.
        /// </summary>
        [Input("automaticConflictResolution")]
        public Input<string>? AutomaticConflictResolution { get; set; }

        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Input("dynamicSortSubtable")]
        public Input<string>? DynamicSortSubtable { get; set; }

        /// <summary>
        /// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        /// </summary>
        [Input("getAllTables")]
        public Input<string>? GetAllTables { get; set; }

        /// <summary>
        /// Enable/disable default management of LAN interface addresses. Valid values: `disable`, `enable`.
        /// </summary>
        [Input("manageLanAddresses")]
        public Input<string>? ManageLanAddresses { get; set; }

        /// <summary>
        /// Enable/disable default management of FortiExtender LAN extension interface addresses. Valid values: `disable`, `enable`.
        /// </summary>
        [Input("manageLanExtensionAddresses")]
        public Input<string>? ManageLanExtensionAddresses { get; set; }

        /// <summary>
        /// Enable/disable default management of FortiAP SSID addresses. Valid values: `disable`, `enable`.
        /// </summary>
        [Input("manageSsidAddresses")]
        public Input<string>? ManageSsidAddresses { get; set; }

        /// <summary>
        /// Configure IPAM pool subnet, Class A - Class B subnet.
        /// </summary>
        [Input("poolSubnet")]
        public Input<string>? PoolSubnet { get; set; }

        [Input("pools")]
        private InputList<Inputs.IpamPoolGetArgs>? _pools;

        /// <summary>
        /// Configure IPAM pools. The structure of `pools` block is documented below.
        /// </summary>
        public InputList<Inputs.IpamPoolGetArgs> Pools
        {
            get => _pools ?? (_pools = new InputList<Inputs.IpamPoolGetArgs>());
            set => _pools = value;
        }

        /// <summary>
        /// Enable/disable reassignment of subnets to make requested and actual sizes match. Valid values: `disable`, `enable`.
        /// </summary>
        [Input("requireSubnetSizeMatch")]
        public Input<string>? RequireSubnetSizeMatch { get; set; }

        [Input("rules")]
        private InputList<Inputs.IpamRuleGetArgs>? _rules;

        /// <summary>
        /// Configure IPAM allocation rules. The structure of `rules` block is documented below.
        /// </summary>
        public InputList<Inputs.IpamRuleGetArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.IpamRuleGetArgs>());
            set => _rules = value;
        }

        /// <summary>
        /// Configure the type of IPAM server to use.
        /// </summary>
        [Input("serverType")]
        public Input<string>? ServerType { get; set; }

        /// <summary>
        /// Enable/disable IP address management services. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public IpamState()
        {
        }
        public static new IpamState Empty => new IpamState();
    }
}
