// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.System
{
    /// <summary>
    /// Configure NetFlow.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Fortios = Pulumiverse.Fortios;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var trname = new Fortios.System.Netflow("trname", new()
    ///     {
    ///         ActiveFlowTimeout = 30,
    ///         CollectorIp = "0.0.0.0",
    ///         CollectorPort = 2055,
    ///         InactiveFlowTimeout = 15,
    ///         SourceIp = "0.0.0.0",
    ///         TemplateTxCounter = 20,
    ///         TemplateTxTimeout = 30,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// System Netflow can be imported using any of these accepted formats:
    /// 
    /// ```sh
    /// $ pulumi import fortios:system/netflow:Netflow labelname SystemNetflow
    /// ```
    /// 
    /// If you do not want to import arguments of block:
    /// 
    /// $ export "FORTIOS_IMPORT_TABLE"="false"
    /// 
    /// ```sh
    /// $ pulumi import fortios:system/netflow:Netflow labelname SystemNetflow
    /// ```
    /// 
    /// $ unset "FORTIOS_IMPORT_TABLE"
    /// </summary>
    [FortiosResourceType("fortios:system/netflow:Netflow")]
    public partial class Netflow : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Timeout to report active flows. On FortiOS versions 6.2.0-7.0.0: 1 - 60 min, default = 30. On FortiOS versions &gt;= 7.0.1: 60 - 3600 sec, default = 1800.
        /// </summary>
        [Output("activeFlowTimeout")]
        public Output<int> ActiveFlowTimeout { get; private set; } = null!;

        /// <summary>
        /// Collector IP.
        /// </summary>
        [Output("collectorIp")]
        public Output<string> CollectorIp { get; private set; } = null!;

        /// <summary>
        /// NetFlow collector port number.
        /// </summary>
        [Output("collectorPort")]
        public Output<int> CollectorPort { get; private set; } = null!;

        /// <summary>
        /// Netflow collectors. The structure of `collectors` block is documented below.
        /// </summary>
        [Output("collectors")]
        public Output<ImmutableArray<Outputs.NetflowCollector>> Collectors { get; private set; } = null!;

        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Output("dynamicSortSubtable")]
        public Output<string?> DynamicSortSubtable { get; private set; } = null!;

        /// <summary>
        /// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        /// </summary>
        [Output("getAllTables")]
        public Output<string?> GetAllTables { get; private set; } = null!;

        /// <summary>
        /// Timeout for periodic report of finished flows (10 - 600 sec, default = 15).
        /// </summary>
        [Output("inactiveFlowTimeout")]
        public Output<int> InactiveFlowTimeout { get; private set; } = null!;

        /// <summary>
        /// Specify outgoing interface to reach server.
        /// </summary>
        [Output("interface")]
        public Output<string> Interface { get; private set; } = null!;

        /// <summary>
        /// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
        /// </summary>
        [Output("interfaceSelectMethod")]
        public Output<string> InterfaceSelectMethod { get; private set; } = null!;

        /// <summary>
        /// Source IP address for communication with the NetFlow agent.
        /// </summary>
        [Output("sourceIp")]
        public Output<string> SourceIp { get; private set; } = null!;

        /// <summary>
        /// Counter of flowset records before resending a template flowset record.
        /// </summary>
        [Output("templateTxCounter")]
        public Output<int> TemplateTxCounter { get; private set; } = null!;

        /// <summary>
        /// Timeout for periodic template flowset transmission. On FortiOS versions 6.2.0-7.0.0: 1 - 1440 min, default = 30. On FortiOS versions &gt;= 7.0.1: 60 - 86400 sec, default = 1800.
        /// </summary>
        [Output("templateTxTimeout")]
        public Output<int> TemplateTxTimeout { get; private set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Output("vdomparam")]
        public Output<string?> Vdomparam { get; private set; } = null!;


        /// <summary>
        /// Create a Netflow resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Netflow(string name, NetflowArgs? args = null, CustomResourceOptions? options = null)
            : base("fortios:system/netflow:Netflow", name, args ?? new NetflowArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Netflow(string name, Input<string> id, NetflowState? state = null, CustomResourceOptions? options = null)
            : base("fortios:system/netflow:Netflow", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Netflow resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Netflow Get(string name, Input<string> id, NetflowState? state = null, CustomResourceOptions? options = null)
        {
            return new Netflow(name, id, state, options);
        }
    }

    public sealed class NetflowArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Timeout to report active flows. On FortiOS versions 6.2.0-7.0.0: 1 - 60 min, default = 30. On FortiOS versions &gt;= 7.0.1: 60 - 3600 sec, default = 1800.
        /// </summary>
        [Input("activeFlowTimeout")]
        public Input<int>? ActiveFlowTimeout { get; set; }

        /// <summary>
        /// Collector IP.
        /// </summary>
        [Input("collectorIp")]
        public Input<string>? CollectorIp { get; set; }

        /// <summary>
        /// NetFlow collector port number.
        /// </summary>
        [Input("collectorPort")]
        public Input<int>? CollectorPort { get; set; }

        [Input("collectors")]
        private InputList<Inputs.NetflowCollectorArgs>? _collectors;

        /// <summary>
        /// Netflow collectors. The structure of `collectors` block is documented below.
        /// </summary>
        public InputList<Inputs.NetflowCollectorArgs> Collectors
        {
            get => _collectors ?? (_collectors = new InputList<Inputs.NetflowCollectorArgs>());
            set => _collectors = value;
        }

        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Input("dynamicSortSubtable")]
        public Input<string>? DynamicSortSubtable { get; set; }

        /// <summary>
        /// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        /// </summary>
        [Input("getAllTables")]
        public Input<string>? GetAllTables { get; set; }

        /// <summary>
        /// Timeout for periodic report of finished flows (10 - 600 sec, default = 15).
        /// </summary>
        [Input("inactiveFlowTimeout")]
        public Input<int>? InactiveFlowTimeout { get; set; }

        /// <summary>
        /// Specify outgoing interface to reach server.
        /// </summary>
        [Input("interface")]
        public Input<string>? Interface { get; set; }

        /// <summary>
        /// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
        /// </summary>
        [Input("interfaceSelectMethod")]
        public Input<string>? InterfaceSelectMethod { get; set; }

        /// <summary>
        /// Source IP address for communication with the NetFlow agent.
        /// </summary>
        [Input("sourceIp")]
        public Input<string>? SourceIp { get; set; }

        /// <summary>
        /// Counter of flowset records before resending a template flowset record.
        /// </summary>
        [Input("templateTxCounter")]
        public Input<int>? TemplateTxCounter { get; set; }

        /// <summary>
        /// Timeout for periodic template flowset transmission. On FortiOS versions 6.2.0-7.0.0: 1 - 1440 min, default = 30. On FortiOS versions &gt;= 7.0.1: 60 - 86400 sec, default = 1800.
        /// </summary>
        [Input("templateTxTimeout")]
        public Input<int>? TemplateTxTimeout { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public NetflowArgs()
        {
        }
        public static new NetflowArgs Empty => new NetflowArgs();
    }

    public sealed class NetflowState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Timeout to report active flows. On FortiOS versions 6.2.0-7.0.0: 1 - 60 min, default = 30. On FortiOS versions &gt;= 7.0.1: 60 - 3600 sec, default = 1800.
        /// </summary>
        [Input("activeFlowTimeout")]
        public Input<int>? ActiveFlowTimeout { get; set; }

        /// <summary>
        /// Collector IP.
        /// </summary>
        [Input("collectorIp")]
        public Input<string>? CollectorIp { get; set; }

        /// <summary>
        /// NetFlow collector port number.
        /// </summary>
        [Input("collectorPort")]
        public Input<int>? CollectorPort { get; set; }

        [Input("collectors")]
        private InputList<Inputs.NetflowCollectorGetArgs>? _collectors;

        /// <summary>
        /// Netflow collectors. The structure of `collectors` block is documented below.
        /// </summary>
        public InputList<Inputs.NetflowCollectorGetArgs> Collectors
        {
            get => _collectors ?? (_collectors = new InputList<Inputs.NetflowCollectorGetArgs>());
            set => _collectors = value;
        }

        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Input("dynamicSortSubtable")]
        public Input<string>? DynamicSortSubtable { get; set; }

        /// <summary>
        /// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        /// </summary>
        [Input("getAllTables")]
        public Input<string>? GetAllTables { get; set; }

        /// <summary>
        /// Timeout for periodic report of finished flows (10 - 600 sec, default = 15).
        /// </summary>
        [Input("inactiveFlowTimeout")]
        public Input<int>? InactiveFlowTimeout { get; set; }

        /// <summary>
        /// Specify outgoing interface to reach server.
        /// </summary>
        [Input("interface")]
        public Input<string>? Interface { get; set; }

        /// <summary>
        /// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
        /// </summary>
        [Input("interfaceSelectMethod")]
        public Input<string>? InterfaceSelectMethod { get; set; }

        /// <summary>
        /// Source IP address for communication with the NetFlow agent.
        /// </summary>
        [Input("sourceIp")]
        public Input<string>? SourceIp { get; set; }

        /// <summary>
        /// Counter of flowset records before resending a template flowset record.
        /// </summary>
        [Input("templateTxCounter")]
        public Input<int>? TemplateTxCounter { get; set; }

        /// <summary>
        /// Timeout for periodic template flowset transmission. On FortiOS versions 6.2.0-7.0.0: 1 - 1440 min, default = 30. On FortiOS versions &gt;= 7.0.1: 60 - 86400 sec, default = 1800.
        /// </summary>
        [Input("templateTxTimeout")]
        public Input<int>? TemplateTxTimeout { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public NetflowState()
        {
        }
        public static new NetflowState Empty => new NetflowState();
    }
}
