// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.System
{
    /// <summary>
    /// Configure FortiGate Session Life Support Protocol (FGSP) cluster attributes. Applies to FortiOS Version `&gt;= 6.4.0`.
    /// 
    /// ## Import
    /// 
    /// System StandaloneCluster can be imported using any of these accepted formats:
    /// 
    /// ```sh
    /// $ pulumi import fortios:system/standalonecluster:Standalonecluster labelname SystemStandaloneCluster
    /// ```
    /// 
    /// If you do not want to import arguments of block:
    /// 
    /// $ export "FORTIOS_IMPORT_TABLE"="false"
    /// 
    /// ```sh
    /// $ pulumi import fortios:system/standalonecluster:Standalonecluster labelname SystemStandaloneCluster
    /// ```
    /// 
    /// $ unset "FORTIOS_IMPORT_TABLE"
    /// </summary>
    [FortiosResourceType("fortios:system/standalonecluster:Standalonecluster")]
    public partial class Standalonecluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Asymmetric traffic control mode. Valid values: `cps-preferred`, `strict-anti-replay`.
        /// </summary>
        [Output("asymmetricTrafficControl")]
        public Output<string> AsymmetricTrafficControl { get; private set; } = null!;

        /// <summary>
        /// Configure FortiGate Session Life Support Protocol (FGSP) session synchronization. The structure of `cluster_peer` block is documented below.
        /// </summary>
        [Output("clusterPeers")]
        public Output<ImmutableArray<Outputs.StandaloneclusterClusterPeer>> ClusterPeers { get; private set; } = null!;

        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Output("dynamicSortSubtable")]
        public Output<string?> DynamicSortSubtable { get; private set; } = null!;

        /// <summary>
        /// Enable/disable encryption when synchronizing sessions. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("encryption")]
        public Output<string> Encryption { get; private set; } = null!;

        /// <summary>
        /// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        /// </summary>
        [Output("getAllTables")]
        public Output<string?> GetAllTables { get; private set; } = null!;

        /// <summary>
        /// Cluster member ID (0 - 3).
        /// </summary>
        [Output("groupMemberId")]
        public Output<int> GroupMemberId { get; private set; } = null!;

        /// <summary>
        /// Indicate whether layer 2 connections are present among FGSP members. Valid values: `available`, `unavailable`.
        /// </summary>
        [Output("layer2Connection")]
        public Output<string> Layer2Connection { get; private set; } = null!;

        /// <summary>
        /// Pre-shared secret for session synchronization (ASCII string or hexadecimal encoded with a leading 0x).
        /// </summary>
        [Output("psksecret")]
        public Output<string?> Psksecret { get; private set; } = null!;

        /// <summary>
        /// Offload session-sync process to kernel and sync sessions using connected interface(s) directly.
        /// </summary>
        [Output("sessionSyncDev")]
        public Output<string> SessionSyncDev { get; private set; } = null!;

        /// <summary>
        /// Cluster group ID (0 - 255). Must be the same for all members.
        /// </summary>
        [Output("standaloneGroupId")]
        public Output<int> StandaloneGroupId { get; private set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Output("vdomparam")]
        public Output<string?> Vdomparam { get; private set; } = null!;


        /// <summary>
        /// Create a Standalonecluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Standalonecluster(string name, StandaloneclusterArgs? args = null, CustomResourceOptions? options = null)
            : base("fortios:system/standalonecluster:Standalonecluster", name, args ?? new StandaloneclusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Standalonecluster(string name, Input<string> id, StandaloneclusterState? state = null, CustomResourceOptions? options = null)
            : base("fortios:system/standalonecluster:Standalonecluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
                AdditionalSecretOutputs =
                {
                    "psksecret",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Standalonecluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Standalonecluster Get(string name, Input<string> id, StandaloneclusterState? state = null, CustomResourceOptions? options = null)
        {
            return new Standalonecluster(name, id, state, options);
        }
    }

    public sealed class StandaloneclusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Asymmetric traffic control mode. Valid values: `cps-preferred`, `strict-anti-replay`.
        /// </summary>
        [Input("asymmetricTrafficControl")]
        public Input<string>? AsymmetricTrafficControl { get; set; }

        [Input("clusterPeers")]
        private InputList<Inputs.StandaloneclusterClusterPeerArgs>? _clusterPeers;

        /// <summary>
        /// Configure FortiGate Session Life Support Protocol (FGSP) session synchronization. The structure of `cluster_peer` block is documented below.
        /// </summary>
        public InputList<Inputs.StandaloneclusterClusterPeerArgs> ClusterPeers
        {
            get => _clusterPeers ?? (_clusterPeers = new InputList<Inputs.StandaloneclusterClusterPeerArgs>());
            set => _clusterPeers = value;
        }

        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Input("dynamicSortSubtable")]
        public Input<string>? DynamicSortSubtable { get; set; }

        /// <summary>
        /// Enable/disable encryption when synchronizing sessions. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("encryption")]
        public Input<string>? Encryption { get; set; }

        /// <summary>
        /// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        /// </summary>
        [Input("getAllTables")]
        public Input<string>? GetAllTables { get; set; }

        /// <summary>
        /// Cluster member ID (0 - 3).
        /// </summary>
        [Input("groupMemberId")]
        public Input<int>? GroupMemberId { get; set; }

        /// <summary>
        /// Indicate whether layer 2 connections are present among FGSP members. Valid values: `available`, `unavailable`.
        /// </summary>
        [Input("layer2Connection")]
        public Input<string>? Layer2Connection { get; set; }

        [Input("psksecret")]
        private Input<string>? _psksecret;

        /// <summary>
        /// Pre-shared secret for session synchronization (ASCII string or hexadecimal encoded with a leading 0x).
        /// </summary>
        public Input<string>? Psksecret
        {
            get => _psksecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _psksecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Offload session-sync process to kernel and sync sessions using connected interface(s) directly.
        /// </summary>
        [Input("sessionSyncDev")]
        public Input<string>? SessionSyncDev { get; set; }

        /// <summary>
        /// Cluster group ID (0 - 255). Must be the same for all members.
        /// </summary>
        [Input("standaloneGroupId")]
        public Input<int>? StandaloneGroupId { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public StandaloneclusterArgs()
        {
        }
        public static new StandaloneclusterArgs Empty => new StandaloneclusterArgs();
    }

    public sealed class StandaloneclusterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Asymmetric traffic control mode. Valid values: `cps-preferred`, `strict-anti-replay`.
        /// </summary>
        [Input("asymmetricTrafficControl")]
        public Input<string>? AsymmetricTrafficControl { get; set; }

        [Input("clusterPeers")]
        private InputList<Inputs.StandaloneclusterClusterPeerGetArgs>? _clusterPeers;

        /// <summary>
        /// Configure FortiGate Session Life Support Protocol (FGSP) session synchronization. The structure of `cluster_peer` block is documented below.
        /// </summary>
        public InputList<Inputs.StandaloneclusterClusterPeerGetArgs> ClusterPeers
        {
            get => _clusterPeers ?? (_clusterPeers = new InputList<Inputs.StandaloneclusterClusterPeerGetArgs>());
            set => _clusterPeers = value;
        }

        /// <summary>
        /// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -&gt; [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -&gt; [ a10, a2 ].
        /// </summary>
        [Input("dynamicSortSubtable")]
        public Input<string>? DynamicSortSubtable { get; set; }

        /// <summary>
        /// Enable/disable encryption when synchronizing sessions. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("encryption")]
        public Input<string>? Encryption { get; set; }

        /// <summary>
        /// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        /// </summary>
        [Input("getAllTables")]
        public Input<string>? GetAllTables { get; set; }

        /// <summary>
        /// Cluster member ID (0 - 3).
        /// </summary>
        [Input("groupMemberId")]
        public Input<int>? GroupMemberId { get; set; }

        /// <summary>
        /// Indicate whether layer 2 connections are present among FGSP members. Valid values: `available`, `unavailable`.
        /// </summary>
        [Input("layer2Connection")]
        public Input<string>? Layer2Connection { get; set; }

        [Input("psksecret")]
        private Input<string>? _psksecret;

        /// <summary>
        /// Pre-shared secret for session synchronization (ASCII string or hexadecimal encoded with a leading 0x).
        /// </summary>
        public Input<string>? Psksecret
        {
            get => _psksecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _psksecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Offload session-sync process to kernel and sync sessions using connected interface(s) directly.
        /// </summary>
        [Input("sessionSyncDev")]
        public Input<string>? SessionSyncDev { get; set; }

        /// <summary>
        /// Cluster group ID (0 - 255). Must be the same for all members.
        /// </summary>
        [Input("standaloneGroupId")]
        public Input<int>? StandaloneGroupId { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public StandaloneclusterState()
        {
        }
        public static new StandaloneclusterState Empty => new StandaloneclusterState();
    }
}
