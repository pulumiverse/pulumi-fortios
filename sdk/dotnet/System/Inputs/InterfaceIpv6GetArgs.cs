// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.System.Inputs
{

    public sealed class InterfaceIpv6GetArgs : global::Pulumi.ResourceArgs
    {
        [Input("autoconf")]
        public Input<string>? Autoconf { get; set; }

        [Input("cliConn6Status")]
        public Input<int>? CliConn6Status { get; set; }

        [Input("dhcp6ClientOptions")]
        public Input<string>? Dhcp6ClientOptions { get; set; }

        [Input("dhcp6IapdLists")]
        private InputList<Inputs.InterfaceIpv6Dhcp6IapdListGetArgs>? _dhcp6IapdLists;
        public InputList<Inputs.InterfaceIpv6Dhcp6IapdListGetArgs> Dhcp6IapdLists
        {
            get => _dhcp6IapdLists ?? (_dhcp6IapdLists = new InputList<Inputs.InterfaceIpv6Dhcp6IapdListGetArgs>());
            set => _dhcp6IapdLists = value;
        }

        [Input("dhcp6InformationRequest")]
        public Input<string>? Dhcp6InformationRequest { get; set; }

        [Input("dhcp6PrefixDelegation")]
        public Input<string>? Dhcp6PrefixDelegation { get; set; }

        [Input("dhcp6PrefixHint")]
        public Input<string>? Dhcp6PrefixHint { get; set; }

        [Input("dhcp6PrefixHintPlt")]
        public Input<int>? Dhcp6PrefixHintPlt { get; set; }

        [Input("dhcp6PrefixHintVlt")]
        public Input<int>? Dhcp6PrefixHintVlt { get; set; }

        [Input("dhcp6RelayInterfaceId")]
        public Input<string>? Dhcp6RelayInterfaceId { get; set; }

        [Input("dhcp6RelayIp")]
        public Input<string>? Dhcp6RelayIp { get; set; }

        [Input("dhcp6RelayService")]
        public Input<string>? Dhcp6RelayService { get; set; }

        [Input("dhcp6RelaySourceInterface")]
        public Input<string>? Dhcp6RelaySourceInterface { get; set; }

        [Input("dhcp6RelaySourceIp")]
        public Input<string>? Dhcp6RelaySourceIp { get; set; }

        [Input("dhcp6RelayType")]
        public Input<string>? Dhcp6RelayType { get; set; }

        [Input("icmp6SendRedirect")]
        public Input<string>? Icmp6SendRedirect { get; set; }

        [Input("interfaceIdentifier")]
        public Input<string>? InterfaceIdentifier { get; set; }

        [Input("ip6Address")]
        public Input<string>? Ip6Address { get; set; }

        [Input("ip6Allowaccess")]
        public Input<string>? Ip6Allowaccess { get; set; }

        [Input("ip6DefaultLife")]
        public Input<int>? Ip6DefaultLife { get; set; }

        [Input("ip6DelegatedPrefixIaid")]
        public Input<int>? Ip6DelegatedPrefixIaid { get; set; }

        [Input("ip6DelegatedPrefixLists")]
        private InputList<Inputs.InterfaceIpv6Ip6DelegatedPrefixListGetArgs>? _ip6DelegatedPrefixLists;
        public InputList<Inputs.InterfaceIpv6Ip6DelegatedPrefixListGetArgs> Ip6DelegatedPrefixLists
        {
            get => _ip6DelegatedPrefixLists ?? (_ip6DelegatedPrefixLists = new InputList<Inputs.InterfaceIpv6Ip6DelegatedPrefixListGetArgs>());
            set => _ip6DelegatedPrefixLists = value;
        }

        [Input("ip6DnsServerOverride")]
        public Input<string>? Ip6DnsServerOverride { get; set; }

        [Input("ip6ExtraAddrs")]
        private InputList<Inputs.InterfaceIpv6Ip6ExtraAddrGetArgs>? _ip6ExtraAddrs;
        public InputList<Inputs.InterfaceIpv6Ip6ExtraAddrGetArgs> Ip6ExtraAddrs
        {
            get => _ip6ExtraAddrs ?? (_ip6ExtraAddrs = new InputList<Inputs.InterfaceIpv6Ip6ExtraAddrGetArgs>());
            set => _ip6ExtraAddrs = value;
        }

        [Input("ip6HopLimit")]
        public Input<int>? Ip6HopLimit { get; set; }

        [Input("ip6LinkMtu")]
        public Input<int>? Ip6LinkMtu { get; set; }

        [Input("ip6ManageFlag")]
        public Input<string>? Ip6ManageFlag { get; set; }

        [Input("ip6MaxInterval")]
        public Input<int>? Ip6MaxInterval { get; set; }

        [Input("ip6MinInterval")]
        public Input<int>? Ip6MinInterval { get; set; }

        [Input("ip6Mode")]
        public Input<string>? Ip6Mode { get; set; }

        [Input("ip6OtherFlag")]
        public Input<string>? Ip6OtherFlag { get; set; }

        [Input("ip6PrefixLists")]
        private InputList<Inputs.InterfaceIpv6Ip6PrefixListGetArgs>? _ip6PrefixLists;
        public InputList<Inputs.InterfaceIpv6Ip6PrefixListGetArgs> Ip6PrefixLists
        {
            get => _ip6PrefixLists ?? (_ip6PrefixLists = new InputList<Inputs.InterfaceIpv6Ip6PrefixListGetArgs>());
            set => _ip6PrefixLists = value;
        }

        [Input("ip6PrefixMode")]
        public Input<string>? Ip6PrefixMode { get; set; }

        [Input("ip6ReachableTime")]
        public Input<int>? Ip6ReachableTime { get; set; }

        [Input("ip6RetransTime")]
        public Input<int>? Ip6RetransTime { get; set; }

        [Input("ip6SendAdv")]
        public Input<string>? Ip6SendAdv { get; set; }

        [Input("ip6Subnet")]
        public Input<string>? Ip6Subnet { get; set; }

        [Input("ip6UpstreamInterface")]
        public Input<string>? Ip6UpstreamInterface { get; set; }

        [Input("ndCert")]
        public Input<string>? NdCert { get; set; }

        [Input("ndCgaModifier")]
        public Input<string>? NdCgaModifier { get; set; }

        [Input("ndMode")]
        public Input<string>? NdMode { get; set; }

        [Input("ndSecurityLevel")]
        public Input<int>? NdSecurityLevel { get; set; }

        [Input("ndTimestampDelta")]
        public Input<int>? NdTimestampDelta { get; set; }

        [Input("ndTimestampFuzz")]
        public Input<int>? NdTimestampFuzz { get; set; }

        [Input("raSendMtu")]
        public Input<string>? RaSendMtu { get; set; }

        [Input("uniqueAutoconfAddr")]
        public Input<string>? UniqueAutoconfAddr { get; set; }

        [Input("vrip6LinkLocal")]
        public Input<string>? Vrip6LinkLocal { get; set; }

        [Input("vrrp6s")]
        private InputList<Inputs.InterfaceIpv6Vrrp6GetArgs>? _vrrp6s;
        public InputList<Inputs.InterfaceIpv6Vrrp6GetArgs> Vrrp6s
        {
            get => _vrrp6s ?? (_vrrp6s = new InputList<Inputs.InterfaceIpv6Vrrp6GetArgs>());
            set => _vrrp6s = value;
        }

        [Input("vrrpVirtualMac6")]
        public Input<string>? VrrpVirtualMac6 { get; set; }

        public InterfaceIpv6GetArgs()
        {
        }
        public static new InterfaceIpv6GetArgs Empty => new InterfaceIpv6GetArgs();
    }
}
