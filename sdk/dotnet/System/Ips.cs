// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.System
{
    /// <summary>
    /// Configure IPS system settings. Applies to FortiOS Version `&gt;= 6.4.2`.
    /// 
    /// ## Import
    /// 
    /// System Ips can be imported using any of these accepted formats:
    /// 
    /// ```sh
    /// $ pulumi import fortios:system/ips:Ips labelname SystemIps
    /// ```
    /// 
    /// If you do not want to import arguments of block:
    /// 
    /// $ export "FORTIOS_IMPORT_TABLE"="false"
    /// 
    /// ```sh
    /// $ pulumi import fortios:system/ips:Ips labelname SystemIps
    /// ```
    /// 
    /// $ unset "FORTIOS_IMPORT_TABLE"
    /// </summary>
    [FortiosResourceType("fortios:system/ips:Ips")]
    public partial class Ips : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Enable/disable override of hold of triggering signatures that are specified by IDs regardless of hold. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("overrideSignatureHoldById")]
        public Output<string> OverrideSignatureHoldById { get; private set; } = null!;

        /// <summary>
        /// Time to hold and monitor IPS signatures. Format &lt;#d##h&gt; (day range: 0 - 7, hour range: 0 - 23, max hold time: 7d0h, default hold time: 0d0h).
        /// </summary>
        [Output("signatureHoldTime")]
        public Output<string> SignatureHoldTime { get; private set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Output("vdomparam")]
        public Output<string> Vdomparam { get; private set; } = null!;


        /// <summary>
        /// Create a Ips resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Ips(string name, IpsArgs? args = null, CustomResourceOptions? options = null)
            : base("fortios:system/ips:Ips", name, args ?? new IpsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Ips(string name, Input<string> id, IpsState? state = null, CustomResourceOptions? options = null)
            : base("fortios:system/ips:Ips", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Ips resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Ips Get(string name, Input<string> id, IpsState? state = null, CustomResourceOptions? options = null)
        {
            return new Ips(name, id, state, options);
        }
    }

    public sealed class IpsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable/disable override of hold of triggering signatures that are specified by IDs regardless of hold. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("overrideSignatureHoldById")]
        public Input<string>? OverrideSignatureHoldById { get; set; }

        /// <summary>
        /// Time to hold and monitor IPS signatures. Format &lt;#d##h&gt; (day range: 0 - 7, hour range: 0 - 23, max hold time: 7d0h, default hold time: 0d0h).
        /// </summary>
        [Input("signatureHoldTime")]
        public Input<string>? SignatureHoldTime { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public IpsArgs()
        {
        }
        public static new IpsArgs Empty => new IpsArgs();
    }

    public sealed class IpsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable/disable override of hold of triggering signatures that are specified by IDs regardless of hold. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("overrideSignatureHoldById")]
        public Input<string>? OverrideSignatureHoldById { get; set; }

        /// <summary>
        /// Time to hold and monitor IPS signatures. Format &lt;#d##h&gt; (day range: 0 - 7, hour range: 0 - 23, max hold time: 7d0h, default hold time: 0d0h).
        /// </summary>
        [Input("signatureHoldTime")]
        public Input<string>? SignatureHoldTime { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public IpsState()
        {
        }
        public static new IpsState Empty => new IpsState();
    }
}
