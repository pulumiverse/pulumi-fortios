// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.System.Dhcp.Outputs
{

    [OutputType]
    public sealed class ServerOption
    {
        /// <summary>
        /// DHCP option code.
        /// </summary>
        public readonly int? Code;
        /// <summary>
        /// ID.
        /// </summary>
        public readonly int? Id;
        /// <summary>
        /// DHCP option IPs.
        /// </summary>
        public readonly string? Ip;
        /// <summary>
        /// DHCP option type. Valid values: `hex`, `string`, `ip`, `fqdn`.
        /// </summary>
        public readonly string? Type;
        /// <summary>
        /// Enable/disable user class identifier (UCI) matching. When enabled only DHCP requests with a matching UCI are served with this option. Valid values: `disable`, `enable`.
        /// </summary>
        public readonly string? UciMatch;
        /// <summary>
        /// One or more UCI strings in quotes separated by spaces. The structure of `uci_string` block is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.ServerOptionUciString> UciStrings;
        /// <summary>
        /// DHCP option value.
        /// </summary>
        public readonly string? Value;
        /// <summary>
        /// Enable/disable vendor class identifier (VCI) matching. When enabled only DHCP requests with a matching VCI are served with this option. Valid values: `disable`, `enable`.
        /// </summary>
        public readonly string? VciMatch;
        /// <summary>
        /// One or more VCI strings in quotes separated by spaces. The structure of `vci_string` block is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.ServerOptionVciString> VciStrings;

        [OutputConstructor]
        private ServerOption(
            int? code,

            int? id,

            string? ip,

            string? type,

            string? uciMatch,

            ImmutableArray<Outputs.ServerOptionUciString> uciStrings,

            string? value,

            string? vciMatch,

            ImmutableArray<Outputs.ServerOptionVciString> vciStrings)
        {
            Code = code;
            Id = id;
            Ip = ip;
            Type = type;
            UciMatch = uciMatch;
            UciStrings = uciStrings;
            Value = value;
            VciMatch = vciMatch;
            VciStrings = vciStrings;
        }
    }
}
