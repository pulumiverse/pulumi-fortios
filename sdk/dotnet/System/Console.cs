// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.System
{
    /// <summary>
    /// Configure console.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Fortios = Pulumiverse.Fortios;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var trname = new Fortios.System.Console("trname", new()
    ///     {
    ///         Baudrate = "9600",
    ///         Login = "enable",
    ///         Mode = "line",
    ///         Output = "more",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// System Console can be imported using any of these accepted formats:
    /// 
    /// ```sh
    /// $ pulumi import fortios:system/console:Console labelname SystemConsole
    /// ```
    /// 
    /// If you do not want to import arguments of block:
    /// 
    /// $ export "FORTIOS_IMPORT_TABLE"="false"
    /// 
    /// ```sh
    /// $ pulumi import fortios:system/console:Console labelname SystemConsole
    /// ```
    /// 
    /// $ unset "FORTIOS_IMPORT_TABLE"
    /// </summary>
    [FortiosResourceType("fortios:system/console:Console")]
    public partial class Console : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Console baud rate. Valid values: `9600`, `19200`, `38400`, `57600`, `115200`.
        /// </summary>
        [Output("baudrate")]
        public Output<string> Baudrate { get; private set; } = null!;

        /// <summary>
        /// Enable/disable access for FortiExplorer. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("fortiexplorer")]
        public Output<string> Fortiexplorer { get; private set; } = null!;

        /// <summary>
        /// Enable/disable serial console and FortiExplorer. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("login")]
        public Output<string> Login { get; private set; } = null!;

        /// <summary>
        /// Console mode. Valid values: `batch`, `line`.
        /// </summary>
        [Output("mode")]
        public Output<string> Mode { get; private set; } = null!;

        /// <summary>
        /// Console output mode. Valid values: `standard`, `more`.
        /// </summary>
        [Output("output")]
        public Output<string> Output { get; private set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Output("vdomparam")]
        public Output<string> Vdomparam { get; private set; } = null!;


        /// <summary>
        /// Create a Console resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Console(string name, ConsoleArgs? args = null, CustomResourceOptions? options = null)
            : base("fortios:system/console:Console", name, args ?? new ConsoleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Console(string name, Input<string> id, ConsoleState? state = null, CustomResourceOptions? options = null)
            : base("fortios:system/console:Console", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Console resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Console Get(string name, Input<string> id, ConsoleState? state = null, CustomResourceOptions? options = null)
        {
            return new Console(name, id, state, options);
        }
    }

    public sealed class ConsoleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Console baud rate. Valid values: `9600`, `19200`, `38400`, `57600`, `115200`.
        /// </summary>
        [Input("baudrate")]
        public Input<string>? Baudrate { get; set; }

        /// <summary>
        /// Enable/disable access for FortiExplorer. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("fortiexplorer")]
        public Input<string>? Fortiexplorer { get; set; }

        /// <summary>
        /// Enable/disable serial console and FortiExplorer. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("login")]
        public Input<string>? Login { get; set; }

        /// <summary>
        /// Console mode. Valid values: `batch`, `line`.
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// Console output mode. Valid values: `standard`, `more`.
        /// </summary>
        [Input("output")]
        public Input<string>? Output { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public ConsoleArgs()
        {
        }
        public static new ConsoleArgs Empty => new ConsoleArgs();
    }

    public sealed class ConsoleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Console baud rate. Valid values: `9600`, `19200`, `38400`, `57600`, `115200`.
        /// </summary>
        [Input("baudrate")]
        public Input<string>? Baudrate { get; set; }

        /// <summary>
        /// Enable/disable access for FortiExplorer. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("fortiexplorer")]
        public Input<string>? Fortiexplorer { get; set; }

        /// <summary>
        /// Enable/disable serial console and FortiExplorer. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("login")]
        public Input<string>? Login { get; set; }

        /// <summary>
        /// Console mode. Valid values: `batch`, `line`.
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// Console output mode. Valid values: `standard`, `more`.
        /// </summary>
        [Input("output")]
        public Input<string>? Output { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public ConsoleState()
        {
        }
        public static new ConsoleState Empty => new ConsoleState();
    }
}
