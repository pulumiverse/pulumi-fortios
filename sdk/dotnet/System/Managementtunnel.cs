// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.System
{
    /// <summary>
    /// Management tunnel configuration.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Fortios = Pulumiverse.Fortios;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var trname = new Fortios.System.Managementtunnel("trname", new()
    ///     {
    ///         AllowCollectStatistics = "enable",
    ///         AllowConfigRestore = "enable",
    ///         AllowPushConfiguration = "enable",
    ///         AllowPushFirmware = "enable",
    ///         AuthorizedManagerOnly = "enable",
    ///         Status = "enable",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// System ManagementTunnel can be imported using any of these accepted formats:
    /// 
    /// ```sh
    /// $ pulumi import fortios:system/managementtunnel:Managementtunnel labelname SystemManagementTunnel
    /// ```
    /// 
    /// If you do not want to import arguments of block:
    /// 
    /// $ export "FORTIOS_IMPORT_TABLE"="false"
    /// 
    /// ```sh
    /// $ pulumi import fortios:system/managementtunnel:Managementtunnel labelname SystemManagementTunnel
    /// ```
    /// 
    /// $ unset "FORTIOS_IMPORT_TABLE"
    /// </summary>
    [FortiosResourceType("fortios:system/managementtunnel:Managementtunnel")]
    public partial class Managementtunnel : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Enable/disable collection of run time statistics. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("allowCollectStatistics")]
        public Output<string> AllowCollectStatistics { get; private set; } = null!;

        /// <summary>
        /// Enable/disable allow config restore. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("allowConfigRestore")]
        public Output<string> AllowConfigRestore { get; private set; } = null!;

        /// <summary>
        /// Enable/disable push configuration. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("allowPushConfiguration")]
        public Output<string> AllowPushConfiguration { get; private set; } = null!;

        /// <summary>
        /// Enable/disable push firmware. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("allowPushFirmware")]
        public Output<string> AllowPushFirmware { get; private set; } = null!;

        /// <summary>
        /// Enable/disable restriction of authorized manager only. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("authorizedManagerOnly")]
        public Output<string> AuthorizedManagerOnly { get; private set; } = null!;

        /// <summary>
        /// Serial number.
        /// </summary>
        [Output("serialNumber")]
        public Output<string> SerialNumber { get; private set; } = null!;

        /// <summary>
        /// Enable/disable FGFM tunnel. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Output("vdomparam")]
        public Output<string> Vdomparam { get; private set; } = null!;


        /// <summary>
        /// Create a Managementtunnel resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Managementtunnel(string name, ManagementtunnelArgs? args = null, CustomResourceOptions? options = null)
            : base("fortios:system/managementtunnel:Managementtunnel", name, args ?? new ManagementtunnelArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Managementtunnel(string name, Input<string> id, ManagementtunnelState? state = null, CustomResourceOptions? options = null)
            : base("fortios:system/managementtunnel:Managementtunnel", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Managementtunnel resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Managementtunnel Get(string name, Input<string> id, ManagementtunnelState? state = null, CustomResourceOptions? options = null)
        {
            return new Managementtunnel(name, id, state, options);
        }
    }

    public sealed class ManagementtunnelArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable/disable collection of run time statistics. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("allowCollectStatistics")]
        public Input<string>? AllowCollectStatistics { get; set; }

        /// <summary>
        /// Enable/disable allow config restore. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("allowConfigRestore")]
        public Input<string>? AllowConfigRestore { get; set; }

        /// <summary>
        /// Enable/disable push configuration. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("allowPushConfiguration")]
        public Input<string>? AllowPushConfiguration { get; set; }

        /// <summary>
        /// Enable/disable push firmware. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("allowPushFirmware")]
        public Input<string>? AllowPushFirmware { get; set; }

        /// <summary>
        /// Enable/disable restriction of authorized manager only. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("authorizedManagerOnly")]
        public Input<string>? AuthorizedManagerOnly { get; set; }

        /// <summary>
        /// Serial number.
        /// </summary>
        [Input("serialNumber")]
        public Input<string>? SerialNumber { get; set; }

        /// <summary>
        /// Enable/disable FGFM tunnel. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public ManagementtunnelArgs()
        {
        }
        public static new ManagementtunnelArgs Empty => new ManagementtunnelArgs();
    }

    public sealed class ManagementtunnelState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable/disable collection of run time statistics. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("allowCollectStatistics")]
        public Input<string>? AllowCollectStatistics { get; set; }

        /// <summary>
        /// Enable/disable allow config restore. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("allowConfigRestore")]
        public Input<string>? AllowConfigRestore { get; set; }

        /// <summary>
        /// Enable/disable push configuration. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("allowPushConfiguration")]
        public Input<string>? AllowPushConfiguration { get; set; }

        /// <summary>
        /// Enable/disable push firmware. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("allowPushFirmware")]
        public Input<string>? AllowPushFirmware { get; set; }

        /// <summary>
        /// Enable/disable restriction of authorized manager only. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("authorizedManagerOnly")]
        public Input<string>? AuthorizedManagerOnly { get; set; }

        /// <summary>
        /// Serial number.
        /// </summary>
        [Input("serialNumber")]
        public Input<string>? SerialNumber { get; set; }

        /// <summary>
        /// Enable/disable FGFM tunnel. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public ManagementtunnelState()
        {
        }
        public static new ManagementtunnelState Empty => new ManagementtunnelState();
    }
}
