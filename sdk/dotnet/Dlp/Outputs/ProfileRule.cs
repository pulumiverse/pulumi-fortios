// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Dlp.Outputs
{

    [OutputType]
    public sealed class ProfileRule
    {
        /// <summary>
        /// Action to take with content that this DLP profile matches. Valid values: `allow`, `log-only`, `block`, `quarantine-ip`.
        /// </summary>
        public readonly string? Action;
        /// <summary>
        /// Enable/disable DLP archiving. Valid values: `disable`, `enable`.
        /// </summary>
        public readonly string? Archive;
        /// <summary>
        /// Quarantine duration in days, hours, minutes (format = dddhhmm).
        /// </summary>
        public readonly string? Expiry;
        /// <summary>
        /// Match files greater than or equal to this size (KB).
        /// </summary>
        public readonly int? FileSize;
        /// <summary>
        /// Select the number of a DLP file pattern table to match.
        /// </summary>
        public readonly int? FileType;
        /// <summary>
        /// Select the type of content to match. Valid values: `sensor`, `mip`, `fingerprint`, `encrypted`, `none`.
        /// </summary>
        public readonly string? FilterBy;
        /// <summary>
        /// ID.
        /// </summary>
        public readonly int? Id;
        /// <summary>
        /// MIP label dictionary.
        /// </summary>
        public readonly string? Label;
        /// <summary>
        /// Percentage of fingerprints in the fingerprint databases designated with the selected sensitivity to match.
        /// </summary>
        public readonly int? MatchPercentage;
        /// <summary>
        /// Filter name.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Check messages or files over one or more of these protocols. Valid values: `smtp`, `pop3`, `imap`, `http-get`, `http-post`, `ftp`, `nntp`, `mapi`, `ssh`, `cifs`.
        /// </summary>
        public readonly string? Proto;
        /// <summary>
        /// Select a DLP file pattern sensitivity to match. The structure of `sensitivity` block is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.ProfileRuleSensitivity> Sensitivities;
        /// <summary>
        /// Select DLP sensors. The structure of `sensor` block is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.ProfileRuleSensor> Sensors;
        /// <summary>
        /// Select the severity or threat level that matches this filter. Valid values: `info`, `low`, `medium`, `high`, `critical`.
        /// </summary>
        public readonly string? Severity;
        /// <summary>
        /// Select whether to check the content of messages (an email message) or files (downloaded files or email attachments). Valid values: `file`, `message`.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private ProfileRule(
            string? action,

            string? archive,

            string? expiry,

            int? fileSize,

            int? fileType,

            string? filterBy,

            int? id,

            string? label,

            int? matchPercentage,

            string? name,

            string? proto,

            ImmutableArray<Outputs.ProfileRuleSensitivity> sensitivities,

            ImmutableArray<Outputs.ProfileRuleSensor> sensors,

            string? severity,

            string? type)
        {
            Action = action;
            Archive = archive;
            Expiry = expiry;
            FileSize = fileSize;
            FileType = fileType;
            FilterBy = filterBy;
            Id = id;
            Label = label;
            MatchPercentage = matchPercentage;
            Name = name;
            Proto = proto;
            Sensitivities = sensitivities;
            Sensors = sensors;
            Severity = severity;
            Type = type;
        }
    }
}
