// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Dlp.Outputs
{

    [OutputType]
    public sealed class SensorFilter
    {
        /// <summary>
        /// Action to take with content that this DLP sensor matches. Valid values: `allow`, `log-only`, `block`, `quarantine-ip`.
        /// </summary>
        public readonly string? Action;
        /// <summary>
        /// Enable/disable DLP archiving. Valid values: `disable`, `enable`.
        /// </summary>
        public readonly string? Archive;
        /// <summary>
        /// Enter a company identifier watermark to match. Only watermarks that your company has placed on the files are matched.
        /// </summary>
        public readonly string? CompanyIdentifier;
        /// <summary>
        /// Quarantine duration in days, hours, minutes (format = dddhhmm).
        /// </summary>
        public readonly string? Expiry;
        /// <summary>
        /// Match files this size or larger (0 - 4294967295 kbytes).
        /// </summary>
        public readonly int? FileSize;
        /// <summary>
        /// Select the number of a DLP file pattern table to match.
        /// </summary>
        public readonly int? FileType;
        /// <summary>
        /// Select the type of content to match.
        /// </summary>
        public readonly string? FilterBy;
        /// <summary>
        /// Select a DLP file pattern sensitivity to match. The structure of `fp_sensitivity` block is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.SensorFilterFpSensitivity> FpSensitivities;
        /// <summary>
        /// ID.
        /// </summary>
        public readonly int? Id;
        /// <summary>
        /// Percentage of fingerprints in the fingerprint databases designated with the selected fp-sensitivity to match.
        /// </summary>
        public readonly int? MatchPercentage;
        /// <summary>
        /// Filter name.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Check messages or files over one or more of these protocols.
        /// </summary>
        public readonly string? Proto;
        /// <summary>
        /// Enter a regular expression to match (max. 255 characters).
        /// </summary>
        public readonly string? Regexp;
        /// <summary>
        /// Select a DLP file pattern sensitivity to match. The structure of `sensitivity` block is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.SensorFilterSensitivity> Sensitivities;
        /// <summary>
        /// Select the severity or threat level that matches this filter. Valid values: `info`, `low`, `medium`, `high`, `critical`.
        /// </summary>
        public readonly string? Severity;
        /// <summary>
        /// Select whether to check the content of messages (an email message) or files (downloaded files or email attachments).  Valid values: `file`, `message`.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private SensorFilter(
            string? action,

            string? archive,

            string? companyIdentifier,

            string? expiry,

            int? fileSize,

            int? fileType,

            string? filterBy,

            ImmutableArray<Outputs.SensorFilterFpSensitivity> fpSensitivities,

            int? id,

            int? matchPercentage,

            string? name,

            string? proto,

            string? regexp,

            ImmutableArray<Outputs.SensorFilterSensitivity> sensitivities,

            string? severity,

            string? type)
        {
            Action = action;
            Archive = archive;
            CompanyIdentifier = companyIdentifier;
            Expiry = expiry;
            FileSize = fileSize;
            FileType = fileType;
            FilterBy = filterBy;
            FpSensitivities = fpSensitivities;
            Id = id;
            MatchPercentage = matchPercentage;
            Name = name;
            Proto = proto;
            Regexp = regexp;
            Sensitivities = sensitivities;
            Severity = severity;
            Type = type;
        }
    }
}
