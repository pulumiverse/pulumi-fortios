// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Switchcontroller
{
    /// <summary>
    /// Configure FortiSwitch SNMP v3 users globally. Applies to FortiOS Version `&gt;= 6.2.4`.
    /// 
    /// ## Import
    /// 
    /// SwitchController SnmpUser can be imported using any of these accepted formats:
    /// 
    /// ```sh
    /// $ pulumi import fortios:switchcontroller/snmpuser:Snmpuser labelname {{name}}
    /// ```
    /// 
    /// If you do not want to import arguments of block:
    /// 
    /// $ export "FORTIOS_IMPORT_TABLE"="false"
    /// 
    /// ```sh
    /// $ pulumi import fortios:switchcontroller/snmpuser:Snmpuser labelname {{name}}
    /// ```
    /// 
    /// $ unset "FORTIOS_IMPORT_TABLE"
    /// </summary>
    [FortiosResourceType("fortios:switchcontroller/snmpuser:Snmpuser")]
    public partial class Snmpuser : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Authentication protocol.
        /// </summary>
        [Output("authProto")]
        public Output<string> AuthProto { get; private set; } = null!;

        /// <summary>
        /// Password for authentication protocol.
        /// </summary>
        [Output("authPwd")]
        public Output<string?> AuthPwd { get; private set; } = null!;

        /// <summary>
        /// SNMP user name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Privacy (encryption) protocol.
        /// </summary>
        [Output("privProto")]
        public Output<string> PrivProto { get; private set; } = null!;

        /// <summary>
        /// Password for privacy (encryption) protocol.
        /// </summary>
        [Output("privPwd")]
        public Output<string?> PrivPwd { get; private set; } = null!;

        /// <summary>
        /// Enable/disable SNMP queries for this user. Valid values: `disable`, `enable`.
        /// </summary>
        [Output("queries")]
        public Output<string> Queries { get; private set; } = null!;

        /// <summary>
        /// SNMPv3 query port (default = 161).
        /// </summary>
        [Output("queryPort")]
        public Output<int> QueryPort { get; private set; } = null!;

        /// <summary>
        /// Security level for message authentication and encryption. Valid values: `no-auth-no-priv`, `auth-no-priv`, `auth-priv`.
        /// </summary>
        [Output("securityLevel")]
        public Output<string> SecurityLevel { get; private set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Output("vdomparam")]
        public Output<string> Vdomparam { get; private set; } = null!;


        /// <summary>
        /// Create a Snmpuser resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Snmpuser(string name, SnmpuserArgs? args = null, CustomResourceOptions? options = null)
            : base("fortios:switchcontroller/snmpuser:Snmpuser", name, args ?? new SnmpuserArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Snmpuser(string name, Input<string> id, SnmpuserState? state = null, CustomResourceOptions? options = null)
            : base("fortios:switchcontroller/snmpuser:Snmpuser", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
                AdditionalSecretOutputs =
                {
                    "authPwd",
                    "privPwd",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Snmpuser resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Snmpuser Get(string name, Input<string> id, SnmpuserState? state = null, CustomResourceOptions? options = null)
        {
            return new Snmpuser(name, id, state, options);
        }
    }

    public sealed class SnmpuserArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Authentication protocol.
        /// </summary>
        [Input("authProto")]
        public Input<string>? AuthProto { get; set; }

        [Input("authPwd")]
        private Input<string>? _authPwd;

        /// <summary>
        /// Password for authentication protocol.
        /// </summary>
        public Input<string>? AuthPwd
        {
            get => _authPwd;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _authPwd = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// SNMP user name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Privacy (encryption) protocol.
        /// </summary>
        [Input("privProto")]
        public Input<string>? PrivProto { get; set; }

        [Input("privPwd")]
        private Input<string>? _privPwd;

        /// <summary>
        /// Password for privacy (encryption) protocol.
        /// </summary>
        public Input<string>? PrivPwd
        {
            get => _privPwd;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _privPwd = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Enable/disable SNMP queries for this user. Valid values: `disable`, `enable`.
        /// </summary>
        [Input("queries")]
        public Input<string>? Queries { get; set; }

        /// <summary>
        /// SNMPv3 query port (default = 161).
        /// </summary>
        [Input("queryPort")]
        public Input<int>? QueryPort { get; set; }

        /// <summary>
        /// Security level for message authentication and encryption. Valid values: `no-auth-no-priv`, `auth-no-priv`, `auth-priv`.
        /// </summary>
        [Input("securityLevel")]
        public Input<string>? SecurityLevel { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public SnmpuserArgs()
        {
        }
        public static new SnmpuserArgs Empty => new SnmpuserArgs();
    }

    public sealed class SnmpuserState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Authentication protocol.
        /// </summary>
        [Input("authProto")]
        public Input<string>? AuthProto { get; set; }

        [Input("authPwd")]
        private Input<string>? _authPwd;

        /// <summary>
        /// Password for authentication protocol.
        /// </summary>
        public Input<string>? AuthPwd
        {
            get => _authPwd;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _authPwd = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// SNMP user name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Privacy (encryption) protocol.
        /// </summary>
        [Input("privProto")]
        public Input<string>? PrivProto { get; set; }

        [Input("privPwd")]
        private Input<string>? _privPwd;

        /// <summary>
        /// Password for privacy (encryption) protocol.
        /// </summary>
        public Input<string>? PrivPwd
        {
            get => _privPwd;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _privPwd = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Enable/disable SNMP queries for this user. Valid values: `disable`, `enable`.
        /// </summary>
        [Input("queries")]
        public Input<string>? Queries { get; set; }

        /// <summary>
        /// SNMPv3 query port (default = 161).
        /// </summary>
        [Input("queryPort")]
        public Input<int>? QueryPort { get; set; }

        /// <summary>
        /// Security level for message authentication and encryption. Valid values: `no-auth-no-priv`, `auth-no-priv`, `auth-priv`.
        /// </summary>
        [Input("securityLevel")]
        public Input<string>? SecurityLevel { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public SnmpuserState()
        {
        }
        public static new SnmpuserState Empty => new SnmpuserState();
    }
}
