// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Switchcontroller.Outputs
{

    [OutputType]
    public sealed class DynamicportpolicyPolicy
    {
        /// <summary>
        /// Enable/disable bouncing (administratively bring the link down, up) of a switch port where this policy is applied. Helps to clear and reassign VLAN from lldp-profile. Valid values: `disable`, `enable`.
        /// </summary>
        public readonly string? BouncePortLink;
        /// <summary>
        /// Category of Dynamic port policy. Valid values: `device`, `interface-tag`.
        /// </summary>
        public readonly string? Category;
        /// <summary>
        /// Description for the policy.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Policy matching family.
        /// </summary>
        public readonly string? Family;
        /// <summary>
        /// Policy matching host.
        /// </summary>
        public readonly string? Host;
        /// <summary>
        /// Match policy based on hardware vendor.
        /// </summary>
        public readonly string? HwVendor;
        /// <summary>
        /// Policy matching the FortiSwitch interface object tags. The structure of `interface_tags` block is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.DynamicportpolicyPolicyInterfaceTag> InterfaceTags;
        /// <summary>
        /// LLDP profile to be applied when using this policy.
        /// </summary>
        public readonly string? LldpProfile;
        /// <summary>
        /// Policy matching MAC address.
        /// </summary>
        public readonly string? Mac;
        /// <summary>
        /// Number of days the matched devices will be retained (0 - 120, 0 = always retain).
        /// </summary>
        public readonly int? MatchPeriod;
        /// <summary>
        /// Match and retain the devices based on the type. Valid values: `dynamic`, `override`.
        /// </summary>
        public readonly string? MatchType;
        /// <summary>
        /// 802.1x security policy to be applied when using this policy.
        /// </summary>
        public readonly string? N8021x;
        /// <summary>
        /// Policy name.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// QoS policy to be applied when using this policy.
        /// </summary>
        public readonly string? QosPolicy;
        /// <summary>
        /// Enable/disable policy. Valid values: `enable`, `disable`.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// Policy matching type.
        /// </summary>
        public readonly string? Type;
        /// <summary>
        /// VLAN policy to be applied when using this policy.
        /// </summary>
        public readonly string? VlanPolicy;

        [OutputConstructor]
        private DynamicportpolicyPolicy(
            string? bouncePortLink,

            string? category,

            string? description,

            string? family,

            string? host,

            string? hwVendor,

            ImmutableArray<Outputs.DynamicportpolicyPolicyInterfaceTag> interfaceTags,

            string? lldpProfile,

            string? mac,

            int? matchPeriod,

            string? matchType,

            string? n8021x,

            string? name,

            string? qosPolicy,

            string? status,

            string? type,

            string? vlanPolicy)
        {
            BouncePortLink = bouncePortLink;
            Category = category;
            Description = description;
            Family = family;
            Host = host;
            HwVendor = hwVendor;
            InterfaceTags = interfaceTags;
            LldpProfile = lldpProfile;
            Mac = mac;
            MatchPeriod = matchPeriod;
            MatchType = matchType;
            N8021x = n8021x;
            Name = name;
            QosPolicy = qosPolicy;
            Status = status;
            Type = type;
            VlanPolicy = vlanPolicy;
        }
    }
}
