// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Switchcontroller.Inputs
{

    public sealed class LocationAddressCivicGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Location additional details.
        /// </summary>
        [Input("additional")]
        public Input<string>? Additional { get; set; }

        /// <summary>
        /// Location additional code details.
        /// </summary>
        [Input("additionalCode")]
        public Input<string>? AdditionalCode { get; set; }

        /// <summary>
        /// Location block details.
        /// </summary>
        [Input("block")]
        public Input<string>? Block { get; set; }

        /// <summary>
        /// Location branch road details.
        /// </summary>
        [Input("branchRoad")]
        public Input<string>? BranchRoad { get; set; }

        /// <summary>
        /// Location building details.
        /// </summary>
        [Input("building")]
        public Input<string>? Building { get; set; }

        /// <summary>
        /// Location city details.
        /// </summary>
        [Input("city")]
        public Input<string>? City { get; set; }

        /// <summary>
        /// Location city division details.
        /// </summary>
        [Input("cityDivision")]
        public Input<string>? CityDivision { get; set; }

        /// <summary>
        /// The two-letter ISO 3166 country code in capital ASCII letters eg. US, CA, DK, DE.
        /// </summary>
        [Input("country")]
        public Input<string>? Country { get; set; }

        /// <summary>
        /// National subdivisions (state, canton, region, province, or prefecture).
        /// </summary>
        [Input("countrySubdivision")]
        public Input<string>? CountrySubdivision { get; set; }

        /// <summary>
        /// County, parish, gun (JP), or district (IN).
        /// </summary>
        [Input("county")]
        public Input<string>? County { get; set; }

        /// <summary>
        /// Leading street direction.
        /// </summary>
        [Input("direction")]
        public Input<string>? Direction { get; set; }

        /// <summary>
        /// Floor.
        /// </summary>
        [Input("floor")]
        public Input<string>? Floor { get; set; }

        /// <summary>
        /// Landmark or vanity address.
        /// </summary>
        [Input("landmark")]
        public Input<string>? Landmark { get; set; }

        /// <summary>
        /// Language.
        /// </summary>
        [Input("language")]
        public Input<string>? Language { get; set; }

        /// <summary>
        /// Name (residence and office occupant).
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// House number.
        /// </summary>
        [Input("number")]
        public Input<string>? Number { get; set; }

        /// <summary>
        /// House number suffix.
        /// </summary>
        [Input("numberSuffix")]
        public Input<string>? NumberSuffix { get; set; }

        /// <summary>
        /// Parent key name.
        /// </summary>
        [Input("parentKey")]
        public Input<string>? ParentKey { get; set; }

        /// <summary>
        /// Placetype.
        /// </summary>
        [Input("placeType")]
        public Input<string>? PlaceType { get; set; }

        /// <summary>
        /// Post office box.
        /// </summary>
        [Input("postOfficeBox")]
        public Input<string>? PostOfficeBox { get; set; }

        /// <summary>
        /// Postal community name.
        /// </summary>
        [Input("postalCommunity")]
        public Input<string>? PostalCommunity { get; set; }

        /// <summary>
        /// Primary road name.
        /// </summary>
        [Input("primaryRoad")]
        public Input<string>? PrimaryRoad { get; set; }

        /// <summary>
        /// Road section.
        /// </summary>
        [Input("roadSection")]
        public Input<string>? RoadSection { get; set; }

        /// <summary>
        /// Room number.
        /// </summary>
        [Input("room")]
        public Input<string>? Room { get; set; }

        /// <summary>
        /// Script used to present the address information.
        /// </summary>
        [Input("script")]
        public Input<string>? Script { get; set; }

        /// <summary>
        /// Seat number.
        /// </summary>
        [Input("seat")]
        public Input<string>? Seat { get; set; }

        /// <summary>
        /// Street.
        /// </summary>
        [Input("street")]
        public Input<string>? Street { get; set; }

        /// <summary>
        /// Street name post modifier.
        /// </summary>
        [Input("streetNamePostMod")]
        public Input<string>? StreetNamePostMod { get; set; }

        /// <summary>
        /// Street name pre modifier.
        /// </summary>
        [Input("streetNamePreMod")]
        public Input<string>? StreetNamePreMod { get; set; }

        /// <summary>
        /// Street suffix.
        /// </summary>
        [Input("streetSuffix")]
        public Input<string>? StreetSuffix { get; set; }

        /// <summary>
        /// Sub branch road name.
        /// </summary>
        [Input("subBranchRoad")]
        public Input<string>? SubBranchRoad { get; set; }

        /// <summary>
        /// Trailing street suffix.
        /// </summary>
        [Input("trailingStrSuffix")]
        public Input<string>? TrailingStrSuffix { get; set; }

        /// <summary>
        /// Unit (apartment, suite).
        /// </summary>
        [Input("unit")]
        public Input<string>? Unit { get; set; }

        /// <summary>
        /// Postal/zip code.
        /// </summary>
        [Input("zip")]
        public Input<string>? Zip { get; set; }

        public LocationAddressCivicGetArgs()
        {
        }
        public static new LocationAddressCivicGetArgs Empty => new LocationAddressCivicGetArgs();
    }
}
