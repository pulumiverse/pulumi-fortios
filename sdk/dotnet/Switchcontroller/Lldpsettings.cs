// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Switchcontroller
{
    /// <summary>
    /// Configure FortiSwitch LLDP settings.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Fortios = Pulumiverse.Fortios;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var trname = new Fortios.Switchcontroller.Lldpsettings("trname", new()
    ///     {
    ///         FastStartInterval = 2,
    ///         ManagementInterface = "internal",
    ///         Status = "enable",
    ///         TxHold = 4,
    ///         TxInterval = 30,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// SwitchController LldpSettings can be imported using any of these accepted formats:
    /// 
    /// ```sh
    /// $ pulumi import fortios:switchcontroller/lldpsettings:Lldpsettings labelname SwitchControllerLldpSettings
    /// ```
    /// 
    /// If you do not want to import arguments of block:
    /// 
    /// $ export "FORTIOS_IMPORT_TABLE"="false"
    /// 
    /// ```sh
    /// $ pulumi import fortios:switchcontroller/lldpsettings:Lldpsettings labelname SwitchControllerLldpSettings
    /// ```
    /// 
    /// $ unset "FORTIOS_IMPORT_TABLE"
    /// </summary>
    [FortiosResourceType("fortios:switchcontroller/lldpsettings:Lldpsettings")]
    public partial class Lldpsettings : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Enable/disable dynamic detection of LLDP neighbor devices for VLAN assignment. Valid values: `disable`, `enable`.
        /// </summary>
        [Output("deviceDetection")]
        public Output<string> DeviceDetection { get; private set; } = null!;

        /// <summary>
        /// Frequency of LLDP PDU transmission from FortiSwitch for the first 4 packets when the link is up (2 - 5 sec, default = 2, 0 = disable fast start).
        /// </summary>
        [Output("fastStartInterval")]
        public Output<int> FastStartInterval { get; private set; } = null!;

        /// <summary>
        /// Primary management interface to be advertised in LLDP and CDP PDUs. Valid values: `internal`, `mgmt`.
        /// </summary>
        [Output("managementInterface")]
        public Output<string> ManagementInterface { get; private set; } = null!;

        /// <summary>
        /// Enable/disable LLDP global settings. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Number of tx-intervals before local LLDP data expires (1 - 16, default = 4). Packet TTL is tx-hold * tx-interval.
        /// </summary>
        [Output("txHold")]
        public Output<int> TxHold { get; private set; } = null!;

        /// <summary>
        /// Frequency of LLDP PDU transmission from FortiSwitch (5 - 4095 sec, default = 30). Packet TTL is tx-hold * tx-interval.
        /// </summary>
        [Output("txInterval")]
        public Output<int> TxInterval { get; private set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Output("vdomparam")]
        public Output<string?> Vdomparam { get; private set; } = null!;


        /// <summary>
        /// Create a Lldpsettings resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Lldpsettings(string name, LldpsettingsArgs? args = null, CustomResourceOptions? options = null)
            : base("fortios:switchcontroller/lldpsettings:Lldpsettings", name, args ?? new LldpsettingsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Lldpsettings(string name, Input<string> id, LldpsettingsState? state = null, CustomResourceOptions? options = null)
            : base("fortios:switchcontroller/lldpsettings:Lldpsettings", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Lldpsettings resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Lldpsettings Get(string name, Input<string> id, LldpsettingsState? state = null, CustomResourceOptions? options = null)
        {
            return new Lldpsettings(name, id, state, options);
        }
    }

    public sealed class LldpsettingsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable/disable dynamic detection of LLDP neighbor devices for VLAN assignment. Valid values: `disable`, `enable`.
        /// </summary>
        [Input("deviceDetection")]
        public Input<string>? DeviceDetection { get; set; }

        /// <summary>
        /// Frequency of LLDP PDU transmission from FortiSwitch for the first 4 packets when the link is up (2 - 5 sec, default = 2, 0 = disable fast start).
        /// </summary>
        [Input("fastStartInterval")]
        public Input<int>? FastStartInterval { get; set; }

        /// <summary>
        /// Primary management interface to be advertised in LLDP and CDP PDUs. Valid values: `internal`, `mgmt`.
        /// </summary>
        [Input("managementInterface")]
        public Input<string>? ManagementInterface { get; set; }

        /// <summary>
        /// Enable/disable LLDP global settings. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Number of tx-intervals before local LLDP data expires (1 - 16, default = 4). Packet TTL is tx-hold * tx-interval.
        /// </summary>
        [Input("txHold")]
        public Input<int>? TxHold { get; set; }

        /// <summary>
        /// Frequency of LLDP PDU transmission from FortiSwitch (5 - 4095 sec, default = 30). Packet TTL is tx-hold * tx-interval.
        /// </summary>
        [Input("txInterval")]
        public Input<int>? TxInterval { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public LldpsettingsArgs()
        {
        }
        public static new LldpsettingsArgs Empty => new LldpsettingsArgs();
    }

    public sealed class LldpsettingsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable/disable dynamic detection of LLDP neighbor devices for VLAN assignment. Valid values: `disable`, `enable`.
        /// </summary>
        [Input("deviceDetection")]
        public Input<string>? DeviceDetection { get; set; }

        /// <summary>
        /// Frequency of LLDP PDU transmission from FortiSwitch for the first 4 packets when the link is up (2 - 5 sec, default = 2, 0 = disable fast start).
        /// </summary>
        [Input("fastStartInterval")]
        public Input<int>? FastStartInterval { get; set; }

        /// <summary>
        /// Primary management interface to be advertised in LLDP and CDP PDUs. Valid values: `internal`, `mgmt`.
        /// </summary>
        [Input("managementInterface")]
        public Input<string>? ManagementInterface { get; set; }

        /// <summary>
        /// Enable/disable LLDP global settings. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Number of tx-intervals before local LLDP data expires (1 - 16, default = 4). Packet TTL is tx-hold * tx-interval.
        /// </summary>
        [Input("txHold")]
        public Input<int>? TxHold { get; set; }

        /// <summary>
        /// Frequency of LLDP PDU transmission from FortiSwitch (5 - 4095 sec, default = 30). Packet TTL is tx-hold * tx-interval.
        /// </summary>
        [Input("txInterval")]
        public Input<int>? TxInterval { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public LldpsettingsState()
        {
        }
        public static new LldpsettingsState Empty => new LldpsettingsState();
    }
}
