// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Switchcontroller.Autoconfig
{
    /// <summary>
    /// Configure FortiSwitch Auto-Config QoS policy.
    /// 
    /// ## Import
    /// 
    /// SwitchControllerAutoConfig Policy can be imported using any of these accepted formats:
    /// 
    /// ```sh
    /// $ pulumi import fortios:switchcontroller/autoconfig/policy:Policy labelname {{name}}
    /// ```
    /// 
    /// If you do not want to import arguments of block:
    /// 
    /// $ export "FORTIOS_IMPORT_TABLE"="false"
    /// 
    /// ```sh
    /// $ pulumi import fortios:switchcontroller/autoconfig/policy:Policy labelname {{name}}
    /// ```
    /// 
    /// $ unset "FORTIOS_IMPORT_TABLE"
    /// </summary>
    [FortiosResourceType("fortios:switchcontroller/autoconfig/policy:Policy")]
    public partial class Policy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Enable/disable IGMP flood report. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("igmpFloodReport")]
        public Output<string> IgmpFloodReport { get; private set; } = null!;

        /// <summary>
        /// Enable/disable IGMP flood traffic. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("igmpFloodTraffic")]
        public Output<string> IgmpFloodTraffic { get; private set; } = null!;

        /// <summary>
        /// Auto-Config QoS policy name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Enable/disable PoE status. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("poeStatus")]
        public Output<string> PoeStatus { get; private set; } = null!;

        /// <summary>
        /// Auto-Config QoS policy.
        /// </summary>
        [Output("qosPolicy")]
        public Output<string> QosPolicy { get; private set; } = null!;

        /// <summary>
        /// Auto-Config storm control policy.
        /// </summary>
        [Output("stormControlPolicy")]
        public Output<string> StormControlPolicy { get; private set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Output("vdomparam")]
        public Output<string> Vdomparam { get; private set; } = null!;


        /// <summary>
        /// Create a Policy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Policy(string name, PolicyArgs? args = null, CustomResourceOptions? options = null)
            : base("fortios:switchcontroller/autoconfig/policy:Policy", name, args ?? new PolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Policy(string name, Input<string> id, PolicyState? state = null, CustomResourceOptions? options = null)
            : base("fortios:switchcontroller/autoconfig/policy:Policy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Policy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Policy Get(string name, Input<string> id, PolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new Policy(name, id, state, options);
        }
    }

    public sealed class PolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable/disable IGMP flood report. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("igmpFloodReport")]
        public Input<string>? IgmpFloodReport { get; set; }

        /// <summary>
        /// Enable/disable IGMP flood traffic. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("igmpFloodTraffic")]
        public Input<string>? IgmpFloodTraffic { get; set; }

        /// <summary>
        /// Auto-Config QoS policy name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Enable/disable PoE status. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("poeStatus")]
        public Input<string>? PoeStatus { get; set; }

        /// <summary>
        /// Auto-Config QoS policy.
        /// </summary>
        [Input("qosPolicy")]
        public Input<string>? QosPolicy { get; set; }

        /// <summary>
        /// Auto-Config storm control policy.
        /// </summary>
        [Input("stormControlPolicy")]
        public Input<string>? StormControlPolicy { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public PolicyArgs()
        {
        }
        public static new PolicyArgs Empty => new PolicyArgs();
    }

    public sealed class PolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable/disable IGMP flood report. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("igmpFloodReport")]
        public Input<string>? IgmpFloodReport { get; set; }

        /// <summary>
        /// Enable/disable IGMP flood traffic. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("igmpFloodTraffic")]
        public Input<string>? IgmpFloodTraffic { get; set; }

        /// <summary>
        /// Auto-Config QoS policy name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Enable/disable PoE status. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("poeStatus")]
        public Input<string>? PoeStatus { get; set; }

        /// <summary>
        /// Auto-Config QoS policy.
        /// </summary>
        [Input("qosPolicy")]
        public Input<string>? QosPolicy { get; set; }

        /// <summary>
        /// Auto-Config storm control policy.
        /// </summary>
        [Input("stormControlPolicy")]
        public Input<string>? StormControlPolicy { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public PolicyState()
        {
        }
        public static new PolicyState Empty => new PolicyState();
    }
}
