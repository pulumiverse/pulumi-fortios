// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Log
{
    /// <summary>
    /// Configure log event filters.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Fortios = Pulumiverse.Fortios;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var trname = new Fortios.Log.Eventfilter("trname", new()
    ///     {
    ///         ComplianceCheck = "enable",
    ///         Endpoint = "enable",
    ///         Event = "enable",
    ///         Ha = "enable",
    ///         Router = "enable",
    ///         SecurityRating = "enable",
    ///         System = "enable",
    ///         User = "enable",
    ///         Vpn = "enable",
    ///         WanOpt = "enable",
    ///         WirelessActivity = "enable",
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// Log Eventfilter can be imported using any of these accepted formats:
    /// 
    /// ```sh
    /// $ pulumi import fortios:log/eventfilter:Eventfilter labelname LogEventfilter
    /// ```
    /// 
    /// If you do not want to import arguments of block:
    /// 
    /// $ export "FORTIOS_IMPORT_TABLE"="false"
    /// 
    /// ```sh
    /// $ pulumi import fortios:log/eventfilter:Eventfilter labelname LogEventfilter
    /// ```
    /// 
    /// $ unset "FORTIOS_IMPORT_TABLE"
    /// </summary>
    [FortiosResourceType("fortios:log/eventfilter:Eventfilter")]
    public partial class Eventfilter : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Enable/disable CIFS logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("cifs")]
        public Output<string> Cifs { get; private set; } = null!;

        /// <summary>
        /// Enable/disable PCI DSS compliance check logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("complianceCheck")]
        public Output<string> ComplianceCheck { get; private set; } = null!;

        /// <summary>
        /// Enable/disable SDN connector logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("connector")]
        public Output<string> Connector { get; private set; } = null!;

        /// <summary>
        /// Enable/disable endpoint event logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("endpoint")]
        public Output<string> Endpoint { get; private set; } = null!;

        /// <summary>
        /// Enable/disable event logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("event")]
        public Output<string> Event { get; private set; } = null!;

        /// <summary>
        /// Enable/disable FortiExtender logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("fortiextender")]
        public Output<string> Fortiextender { get; private set; } = null!;

        /// <summary>
        /// Enable/disable ha event logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("ha")]
        public Output<string> Ha { get; private set; } = null!;

        /// <summary>
        /// Enable/disable REST API logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("restApi")]
        public Output<string> RestApi { get; private set; } = null!;

        /// <summary>
        /// Enable/disable router event logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("router")]
        public Output<string> Router { get; private set; } = null!;

        /// <summary>
        /// Enable/disable SD-WAN logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("sdwan")]
        public Output<string> Sdwan { get; private set; } = null!;

        /// <summary>
        /// Enable/disable Security Rating result logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("securityRating")]
        public Output<string> SecurityRating { get; private set; } = null!;

        /// <summary>
        /// Enable/disable Switch-Controller logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("switchController")]
        public Output<string> SwitchController { get; private set; } = null!;

        /// <summary>
        /// Enable/disable system event logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("system")]
        public Output<string> System { get; private set; } = null!;

        /// <summary>
        /// Enable/disable user authentication event logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("user")]
        public Output<string> User { get; private set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Output("vdomparam")]
        public Output<string?> Vdomparam { get; private set; } = null!;

        /// <summary>
        /// Enable/disable VPN event logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("vpn")]
        public Output<string> Vpn { get; private set; } = null!;

        /// <summary>
        /// Enable/disable WAN optimization event logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("wanOpt")]
        public Output<string> WanOpt { get; private set; } = null!;

        /// <summary>
        /// Enable/disable web proxy event logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("webproxy")]
        public Output<string> Webproxy { get; private set; } = null!;

        /// <summary>
        /// Enable/disable wireless event logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("wirelessActivity")]
        public Output<string> WirelessActivity { get; private set; } = null!;


        /// <summary>
        /// Create a Eventfilter resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Eventfilter(string name, EventfilterArgs? args = null, CustomResourceOptions? options = null)
            : base("fortios:log/eventfilter:Eventfilter", name, args ?? new EventfilterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Eventfilter(string name, Input<string> id, EventfilterState? state = null, CustomResourceOptions? options = null)
            : base("fortios:log/eventfilter:Eventfilter", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-fortios",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Eventfilter resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Eventfilter Get(string name, Input<string> id, EventfilterState? state = null, CustomResourceOptions? options = null)
        {
            return new Eventfilter(name, id, state, options);
        }
    }

    public sealed class EventfilterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable/disable CIFS logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("cifs")]
        public Input<string>? Cifs { get; set; }

        /// <summary>
        /// Enable/disable PCI DSS compliance check logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("complianceCheck")]
        public Input<string>? ComplianceCheck { get; set; }

        /// <summary>
        /// Enable/disable SDN connector logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("connector")]
        public Input<string>? Connector { get; set; }

        /// <summary>
        /// Enable/disable endpoint event logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("endpoint")]
        public Input<string>? Endpoint { get; set; }

        /// <summary>
        /// Enable/disable event logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("event")]
        public Input<string>? Event { get; set; }

        /// <summary>
        /// Enable/disable FortiExtender logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("fortiextender")]
        public Input<string>? Fortiextender { get; set; }

        /// <summary>
        /// Enable/disable ha event logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("ha")]
        public Input<string>? Ha { get; set; }

        /// <summary>
        /// Enable/disable REST API logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("restApi")]
        public Input<string>? RestApi { get; set; }

        /// <summary>
        /// Enable/disable router event logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("router")]
        public Input<string>? Router { get; set; }

        /// <summary>
        /// Enable/disable SD-WAN logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("sdwan")]
        public Input<string>? Sdwan { get; set; }

        /// <summary>
        /// Enable/disable Security Rating result logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("securityRating")]
        public Input<string>? SecurityRating { get; set; }

        /// <summary>
        /// Enable/disable Switch-Controller logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("switchController")]
        public Input<string>? SwitchController { get; set; }

        /// <summary>
        /// Enable/disable system event logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("system")]
        public Input<string>? System { get; set; }

        /// <summary>
        /// Enable/disable user authentication event logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("user")]
        public Input<string>? User { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        /// <summary>
        /// Enable/disable VPN event logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("vpn")]
        public Input<string>? Vpn { get; set; }

        /// <summary>
        /// Enable/disable WAN optimization event logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("wanOpt")]
        public Input<string>? WanOpt { get; set; }

        /// <summary>
        /// Enable/disable web proxy event logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("webproxy")]
        public Input<string>? Webproxy { get; set; }

        /// <summary>
        /// Enable/disable wireless event logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("wirelessActivity")]
        public Input<string>? WirelessActivity { get; set; }

        public EventfilterArgs()
        {
        }
        public static new EventfilterArgs Empty => new EventfilterArgs();
    }

    public sealed class EventfilterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable/disable CIFS logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("cifs")]
        public Input<string>? Cifs { get; set; }

        /// <summary>
        /// Enable/disable PCI DSS compliance check logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("complianceCheck")]
        public Input<string>? ComplianceCheck { get; set; }

        /// <summary>
        /// Enable/disable SDN connector logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("connector")]
        public Input<string>? Connector { get; set; }

        /// <summary>
        /// Enable/disable endpoint event logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("endpoint")]
        public Input<string>? Endpoint { get; set; }

        /// <summary>
        /// Enable/disable event logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("event")]
        public Input<string>? Event { get; set; }

        /// <summary>
        /// Enable/disable FortiExtender logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("fortiextender")]
        public Input<string>? Fortiextender { get; set; }

        /// <summary>
        /// Enable/disable ha event logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("ha")]
        public Input<string>? Ha { get; set; }

        /// <summary>
        /// Enable/disable REST API logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("restApi")]
        public Input<string>? RestApi { get; set; }

        /// <summary>
        /// Enable/disable router event logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("router")]
        public Input<string>? Router { get; set; }

        /// <summary>
        /// Enable/disable SD-WAN logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("sdwan")]
        public Input<string>? Sdwan { get; set; }

        /// <summary>
        /// Enable/disable Security Rating result logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("securityRating")]
        public Input<string>? SecurityRating { get; set; }

        /// <summary>
        /// Enable/disable Switch-Controller logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("switchController")]
        public Input<string>? SwitchController { get; set; }

        /// <summary>
        /// Enable/disable system event logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("system")]
        public Input<string>? System { get; set; }

        /// <summary>
        /// Enable/disable user authentication event logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("user")]
        public Input<string>? User { get; set; }

        /// <summary>
        /// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        /// <summary>
        /// Enable/disable VPN event logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("vpn")]
        public Input<string>? Vpn { get; set; }

        /// <summary>
        /// Enable/disable WAN optimization event logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("wanOpt")]
        public Input<string>? WanOpt { get; set; }

        /// <summary>
        /// Enable/disable web proxy event logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("webproxy")]
        public Input<string>? Webproxy { get; set; }

        /// <summary>
        /// Enable/disable wireless event logging. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("wirelessActivity")]
        public Input<string>? WirelessActivity { get; set; }

        public EventfilterState()
        {
        }
        public static new EventfilterState Empty => new EventfilterState();
    }
}
