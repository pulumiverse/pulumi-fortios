// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Configure FortiSwitch storm control policy to be applied on managed-switch ports. Applies to FortiOS Version `>= 6.2.4`.
 *
 * ## Import
 *
 * SwitchController StormControlPolicy can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:switchcontroller/stormcontrolpolicy:Stormcontrolpolicy labelname {{name}}
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:switchcontroller/stormcontrolpolicy:Stormcontrolpolicy labelname {{name}}
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Stormcontrolpolicy extends pulumi.CustomResource {
    /**
     * Get an existing Stormcontrolpolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StormcontrolpolicyState, opts?: pulumi.CustomResourceOptions): Stormcontrolpolicy {
        return new Stormcontrolpolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:switchcontroller/stormcontrolpolicy:Stormcontrolpolicy';

    /**
     * Returns true if the given object is an instance of Stormcontrolpolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Stormcontrolpolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Stormcontrolpolicy.__pulumiType;
    }

    /**
     * Enable/disable storm control to drop/allow broadcast traffic in override mode. Valid values: `enable`, `disable`.
     */
    public readonly broadcast!: pulumi.Output<string>;
    /**
     * Description of the storm control policy.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Storm control policy name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Threshold rate in packets per second at which storm traffic is controlled in override mode (default=500, 0 to drop all).
     */
    public readonly rate!: pulumi.Output<number>;
    /**
     * Set Storm control mode. Valid values: `global`, `override`, `disabled`.
     */
    public readonly stormControlMode!: pulumi.Output<string>;
    /**
     * Enable/disable storm control to drop/allow unknown multicast traffic in override mode. Valid values: `enable`, `disable`.
     */
    public readonly unknownMulticast!: pulumi.Output<string>;
    /**
     * Enable/disable storm control to drop/allow unknown unicast traffic in override mode. Valid values: `enable`, `disable`.
     */
    public readonly unknownUnicast!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string>;

    /**
     * Create a Stormcontrolpolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: StormcontrolpolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StormcontrolpolicyArgs | StormcontrolpolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StormcontrolpolicyState | undefined;
            resourceInputs["broadcast"] = state ? state.broadcast : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["rate"] = state ? state.rate : undefined;
            resourceInputs["stormControlMode"] = state ? state.stormControlMode : undefined;
            resourceInputs["unknownMulticast"] = state ? state.unknownMulticast : undefined;
            resourceInputs["unknownUnicast"] = state ? state.unknownUnicast : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as StormcontrolpolicyArgs | undefined;
            resourceInputs["broadcast"] = args ? args.broadcast : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["rate"] = args ? args.rate : undefined;
            resourceInputs["stormControlMode"] = args ? args.stormControlMode : undefined;
            resourceInputs["unknownMulticast"] = args ? args.unknownMulticast : undefined;
            resourceInputs["unknownUnicast"] = args ? args.unknownUnicast : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Stormcontrolpolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Stormcontrolpolicy resources.
 */
export interface StormcontrolpolicyState {
    /**
     * Enable/disable storm control to drop/allow broadcast traffic in override mode. Valid values: `enable`, `disable`.
     */
    broadcast?: pulumi.Input<string>;
    /**
     * Description of the storm control policy.
     */
    description?: pulumi.Input<string>;
    /**
     * Storm control policy name.
     */
    name?: pulumi.Input<string>;
    /**
     * Threshold rate in packets per second at which storm traffic is controlled in override mode (default=500, 0 to drop all).
     */
    rate?: pulumi.Input<number>;
    /**
     * Set Storm control mode. Valid values: `global`, `override`, `disabled`.
     */
    stormControlMode?: pulumi.Input<string>;
    /**
     * Enable/disable storm control to drop/allow unknown multicast traffic in override mode. Valid values: `enable`, `disable`.
     */
    unknownMulticast?: pulumi.Input<string>;
    /**
     * Enable/disable storm control to drop/allow unknown unicast traffic in override mode. Valid values: `enable`, `disable`.
     */
    unknownUnicast?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Stormcontrolpolicy resource.
 */
export interface StormcontrolpolicyArgs {
    /**
     * Enable/disable storm control to drop/allow broadcast traffic in override mode. Valid values: `enable`, `disable`.
     */
    broadcast?: pulumi.Input<string>;
    /**
     * Description of the storm control policy.
     */
    description?: pulumi.Input<string>;
    /**
     * Storm control policy name.
     */
    name?: pulumi.Input<string>;
    /**
     * Threshold rate in packets per second at which storm traffic is controlled in override mode (default=500, 0 to drop all).
     */
    rate?: pulumi.Input<number>;
    /**
     * Set Storm control mode. Valid values: `global`, `override`, `disabled`.
     */
    stormControlMode?: pulumi.Input<string>;
    /**
     * Enable/disable storm control to drop/allow unknown multicast traffic in override mode. Valid values: `enable`, `disable`.
     */
    unknownMulticast?: pulumi.Input<string>;
    /**
     * Enable/disable storm control to drop/allow unknown unicast traffic in override mode. Valid values: `enable`, `disable`.
     */
    unknownUnicast?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
