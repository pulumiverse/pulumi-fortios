// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Names of VLANs that use captive portal authentication. Applies to FortiOS Version `<= 6.2.0`.
 *
 * ## Import
 *
 * SwitchControllerSecurityPolicy CaptivePortal can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:switchcontroller/securitypolicy/captiveportal:Captiveportal labelname {{name}}
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:switchcontroller/securitypolicy/captiveportal:Captiveportal labelname {{name}}
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Captiveportal extends pulumi.CustomResource {
    /**
     * Get an existing Captiveportal resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CaptiveportalState, opts?: pulumi.CustomResourceOptions): Captiveportal {
        return new Captiveportal(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:switchcontroller/securitypolicy/captiveportal:Captiveportal';

    /**
     * Returns true if the given object is an instance of Captiveportal.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Captiveportal {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Captiveportal.__pulumiType;
    }

    /**
     * Policy name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Policy type. Valid values: `captive-portal`.
     */
    public readonly policyType!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string>;
    /**
     * Names of VLANs that use captive portal authentication.
     */
    public readonly vlan!: pulumi.Output<string>;

    /**
     * Create a Captiveportal resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: CaptiveportalArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CaptiveportalArgs | CaptiveportalState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CaptiveportalState | undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["policyType"] = state ? state.policyType : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
            resourceInputs["vlan"] = state ? state.vlan : undefined;
        } else {
            const args = argsOrState as CaptiveportalArgs | undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["policyType"] = args ? args.policyType : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
            resourceInputs["vlan"] = args ? args.vlan : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Captiveportal.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Captiveportal resources.
 */
export interface CaptiveportalState {
    /**
     * Policy name.
     */
    name?: pulumi.Input<string>;
    /**
     * Policy type. Valid values: `captive-portal`.
     */
    policyType?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Names of VLANs that use captive portal authentication.
     */
    vlan?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Captiveportal resource.
 */
export interface CaptiveportalArgs {
    /**
     * Policy name.
     */
    name?: pulumi.Input<string>;
    /**
     * Policy type. Valid values: `captive-portal`.
     */
    policyType?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Names of VLANs that use captive portal authentication.
     */
    vlan?: pulumi.Input<string>;
}
