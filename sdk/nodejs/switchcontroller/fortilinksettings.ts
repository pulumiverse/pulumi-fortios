// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Configure integrated FortiLink settings for FortiSwitch. Applies to FortiOS Version `>= 7.0.1`.
 *
 * ## Import
 *
 * SwitchController FortilinkSettings can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:switchcontroller/fortilinksettings:Fortilinksettings labelname {{name}}
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:switchcontroller/fortilinksettings:Fortilinksettings labelname {{name}}
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Fortilinksettings extends pulumi.CustomResource {
    /**
     * Get an existing Fortilinksettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FortilinksettingsState, opts?: pulumi.CustomResourceOptions): Fortilinksettings {
        return new Fortilinksettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:switchcontroller/fortilinksettings:Fortilinksettings';

    /**
     * Returns true if the given object is an instance of Fortilinksettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Fortilinksettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Fortilinksettings.__pulumiType;
    }

    /**
     * Intra VLAN traffic behavior with loss of connection to the FortiGate. Valid values: `legacy`, `fail-open`, `fail-close`.
     */
    public readonly accessVlanMode!: pulumi.Output<string>;
    /**
     * FortiLink interface to which this fortilink-setting belongs.
     */
    public readonly fortilink!: pulumi.Output<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    /**
     * Time interval(minutes) to be included in the inactive devices expiry calculation (mac age-out + inactive-time + periodic scan interval).
     */
    public readonly inactiveTimer!: pulumi.Output<number>;
    /**
     * Clear NAC and dynamic devices on switch ports on link down event. Valid values: `disable`, `enable`.
     */
    public readonly linkDownFlush!: pulumi.Output<string>;
    /**
     * NAC specific configuration. The structure of `nacPorts` block is documented below.
     */
    public readonly nacPorts!: pulumi.Output<outputs.switchcontroller.FortilinksettingsNacPorts>;
    /**
     * FortiLink settings name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a Fortilinksettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FortilinksettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FortilinksettingsArgs | FortilinksettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FortilinksettingsState | undefined;
            resourceInputs["accessVlanMode"] = state ? state.accessVlanMode : undefined;
            resourceInputs["fortilink"] = state ? state.fortilink : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["inactiveTimer"] = state ? state.inactiveTimer : undefined;
            resourceInputs["linkDownFlush"] = state ? state.linkDownFlush : undefined;
            resourceInputs["nacPorts"] = state ? state.nacPorts : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as FortilinksettingsArgs | undefined;
            resourceInputs["accessVlanMode"] = args ? args.accessVlanMode : undefined;
            resourceInputs["fortilink"] = args ? args.fortilink : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["inactiveTimer"] = args ? args.inactiveTimer : undefined;
            resourceInputs["linkDownFlush"] = args ? args.linkDownFlush : undefined;
            resourceInputs["nacPorts"] = args ? args.nacPorts : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Fortilinksettings.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Fortilinksettings resources.
 */
export interface FortilinksettingsState {
    /**
     * Intra VLAN traffic behavior with loss of connection to the FortiGate. Valid values: `legacy`, `fail-open`, `fail-close`.
     */
    accessVlanMode?: pulumi.Input<string>;
    /**
     * FortiLink interface to which this fortilink-setting belongs.
     */
    fortilink?: pulumi.Input<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * Time interval(minutes) to be included in the inactive devices expiry calculation (mac age-out + inactive-time + periodic scan interval).
     */
    inactiveTimer?: pulumi.Input<number>;
    /**
     * Clear NAC and dynamic devices on switch ports on link down event. Valid values: `disable`, `enable`.
     */
    linkDownFlush?: pulumi.Input<string>;
    /**
     * NAC specific configuration. The structure of `nacPorts` block is documented below.
     */
    nacPorts?: pulumi.Input<inputs.switchcontroller.FortilinksettingsNacPorts>;
    /**
     * FortiLink settings name.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Fortilinksettings resource.
 */
export interface FortilinksettingsArgs {
    /**
     * Intra VLAN traffic behavior with loss of connection to the FortiGate. Valid values: `legacy`, `fail-open`, `fail-close`.
     */
    accessVlanMode?: pulumi.Input<string>;
    /**
     * FortiLink interface to which this fortilink-setting belongs.
     */
    fortilink?: pulumi.Input<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * Time interval(minutes) to be included in the inactive devices expiry calculation (mac age-out + inactive-time + periodic scan interval).
     */
    inactiveTimer?: pulumi.Input<number>;
    /**
     * Clear NAC and dynamic devices on switch ports on link down event. Valid values: `disable`, `enable`.
     */
    linkDownFlush?: pulumi.Input<string>;
    /**
     * NAC specific configuration. The structure of `nacPorts` block is documented below.
     */
    nacPorts?: pulumi.Input<inputs.switchcontroller.FortilinksettingsNacPorts>;
    /**
     * FortiLink settings name.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
