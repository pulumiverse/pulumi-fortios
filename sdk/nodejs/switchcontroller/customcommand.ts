// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Configure the FortiGate switch controller to send custom commands to managed FortiSwitch devices.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumiverse/fortios";
 *
 * const trname = new fortios.switchcontroller.Customcommand("trname", {
 *     command: "ls",
 *     commandName: "1",
 * });
 * ```
 *
 * ## Import
 *
 * SwitchController CustomCommand can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:switchcontroller/customcommand:Customcommand labelname {{command_name}}
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:switchcontroller/customcommand:Customcommand labelname {{command_name}}
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Customcommand extends pulumi.CustomResource {
    /**
     * Get an existing Customcommand resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomcommandState, opts?: pulumi.CustomResourceOptions): Customcommand {
        return new Customcommand(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:switchcontroller/customcommand:Customcommand';

    /**
     * Returns true if the given object is an instance of Customcommand.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Customcommand {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Customcommand.__pulumiType;
    }

    /**
     * String of commands to send to FortiSwitch devices (For example (%0a = return key): config switch trunk %0a edit myTrunk %0a set members port1 port2 %0a end %0a).
     */
    public readonly command!: pulumi.Output<string>;
    /**
     * Command name called by the FortiGate switch controller in the execute command.
     */
    public readonly commandName!: pulumi.Output<string>;
    /**
     * Description.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string>;

    /**
     * Create a Customcommand resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomcommandArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomcommandArgs | CustomcommandState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomcommandState | undefined;
            resourceInputs["command"] = state ? state.command : undefined;
            resourceInputs["commandName"] = state ? state.commandName : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as CustomcommandArgs | undefined;
            if ((!args || args.command === undefined) && !opts.urn) {
                throw new Error("Missing required property 'command'");
            }
            resourceInputs["command"] = args ? args.command : undefined;
            resourceInputs["commandName"] = args ? args.commandName : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Customcommand.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Customcommand resources.
 */
export interface CustomcommandState {
    /**
     * String of commands to send to FortiSwitch devices (For example (%0a = return key): config switch trunk %0a edit myTrunk %0a set members port1 port2 %0a end %0a).
     */
    command?: pulumi.Input<string>;
    /**
     * Command name called by the FortiGate switch controller in the execute command.
     */
    commandName?: pulumi.Input<string>;
    /**
     * Description.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Customcommand resource.
 */
export interface CustomcommandArgs {
    /**
     * String of commands to send to FortiSwitch devices (For example (%0a = return key): config switch trunk %0a edit myTrunk %0a set members port1 port2 %0a end %0a).
     */
    command: pulumi.Input<string>;
    /**
     * Command name called by the FortiGate switch controller in the execute command.
     */
    commandName?: pulumi.Input<string>;
    /**
     * Description.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
