// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Configure FortiSwitch QoS 802.1p.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumiverse/fortios";
 *
 * const trname = new fortios.switchcontroller.qos.Dot1pmap("trname", {
 *     priority0: "queue-0",
 *     priority1: "queue-0",
 *     priority2: "queue-0",
 *     priority3: "queue-0",
 *     priority4: "queue-0",
 *     priority5: "queue-0",
 *     priority6: "queue-0",
 *     priority7: "queue-0",
 * });
 * ```
 *
 * ## Import
 *
 * SwitchControllerQos Dot1PMap can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:switchcontroller/qos/dot1pmap:Dot1pmap labelname {{name}}
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:switchcontroller/qos/dot1pmap:Dot1pmap labelname {{name}}
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Dot1pmap extends pulumi.CustomResource {
    /**
     * Get an existing Dot1pmap resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Dot1pmapState, opts?: pulumi.CustomResourceOptions): Dot1pmap {
        return new Dot1pmap(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:switchcontroller/qos/dot1pmap:Dot1pmap';

    /**
     * Returns true if the given object is an instance of Dot1pmap.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Dot1pmap {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Dot1pmap.__pulumiType;
    }

    /**
     * Description of the 802.1p name.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Enable/disable egress priority-tag frame. Valid values: `disable`, `enable`.
     */
    public readonly egressPriTagging!: pulumi.Output<string>;
    /**
     * Dot1p map name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
     */
    public readonly priority0!: pulumi.Output<string>;
    /**
     * COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
     */
    public readonly priority1!: pulumi.Output<string>;
    /**
     * COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
     */
    public readonly priority2!: pulumi.Output<string>;
    /**
     * COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
     */
    public readonly priority3!: pulumi.Output<string>;
    /**
     * COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
     */
    public readonly priority4!: pulumi.Output<string>;
    /**
     * COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
     */
    public readonly priority5!: pulumi.Output<string>;
    /**
     * COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
     */
    public readonly priority6!: pulumi.Output<string>;
    /**
     * COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
     */
    public readonly priority7!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a Dot1pmap resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: Dot1pmapArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Dot1pmapArgs | Dot1pmapState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Dot1pmapState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["egressPriTagging"] = state ? state.egressPriTagging : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["priority0"] = state ? state.priority0 : undefined;
            resourceInputs["priority1"] = state ? state.priority1 : undefined;
            resourceInputs["priority2"] = state ? state.priority2 : undefined;
            resourceInputs["priority3"] = state ? state.priority3 : undefined;
            resourceInputs["priority4"] = state ? state.priority4 : undefined;
            resourceInputs["priority5"] = state ? state.priority5 : undefined;
            resourceInputs["priority6"] = state ? state.priority6 : undefined;
            resourceInputs["priority7"] = state ? state.priority7 : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as Dot1pmapArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["egressPriTagging"] = args ? args.egressPriTagging : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["priority0"] = args ? args.priority0 : undefined;
            resourceInputs["priority1"] = args ? args.priority1 : undefined;
            resourceInputs["priority2"] = args ? args.priority2 : undefined;
            resourceInputs["priority3"] = args ? args.priority3 : undefined;
            resourceInputs["priority4"] = args ? args.priority4 : undefined;
            resourceInputs["priority5"] = args ? args.priority5 : undefined;
            resourceInputs["priority6"] = args ? args.priority6 : undefined;
            resourceInputs["priority7"] = args ? args.priority7 : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Dot1pmap.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Dot1pmap resources.
 */
export interface Dot1pmapState {
    /**
     * Description of the 802.1p name.
     */
    description?: pulumi.Input<string>;
    /**
     * Enable/disable egress priority-tag frame. Valid values: `disable`, `enable`.
     */
    egressPriTagging?: pulumi.Input<string>;
    /**
     * Dot1p map name.
     */
    name?: pulumi.Input<string>;
    /**
     * COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
     */
    priority0?: pulumi.Input<string>;
    /**
     * COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
     */
    priority1?: pulumi.Input<string>;
    /**
     * COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
     */
    priority2?: pulumi.Input<string>;
    /**
     * COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
     */
    priority3?: pulumi.Input<string>;
    /**
     * COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
     */
    priority4?: pulumi.Input<string>;
    /**
     * COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
     */
    priority5?: pulumi.Input<string>;
    /**
     * COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
     */
    priority6?: pulumi.Input<string>;
    /**
     * COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
     */
    priority7?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Dot1pmap resource.
 */
export interface Dot1pmapArgs {
    /**
     * Description of the 802.1p name.
     */
    description?: pulumi.Input<string>;
    /**
     * Enable/disable egress priority-tag frame. Valid values: `disable`, `enable`.
     */
    egressPriTagging?: pulumi.Input<string>;
    /**
     * Dot1p map name.
     */
    name?: pulumi.Input<string>;
    /**
     * COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
     */
    priority0?: pulumi.Input<string>;
    /**
     * COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
     */
    priority1?: pulumi.Input<string>;
    /**
     * COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
     */
    priority2?: pulumi.Input<string>;
    /**
     * COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
     */
    priority3?: pulumi.Input<string>;
    /**
     * COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
     */
    priority4?: pulumi.Input<string>;
    /**
     * COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
     */
    priority5?: pulumi.Input<string>;
    /**
     * COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
     */
    priority6?: pulumi.Input<string>;
    /**
     * COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
     */
    priority7?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
