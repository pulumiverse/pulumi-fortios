// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Configure FortiSwitch Auto-Config QoS policy.
 *
 * ## Import
 *
 * SwitchControllerAutoConfig Policy can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:switchcontroller/autoconfig/policy:Policy labelname {{name}}
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:switchcontroller/autoconfig/policy:Policy labelname {{name}}
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Policy extends pulumi.CustomResource {
    /**
     * Get an existing Policy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PolicyState, opts?: pulumi.CustomResourceOptions): Policy {
        return new Policy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:switchcontroller/autoconfig/policy:Policy';

    /**
     * Returns true if the given object is an instance of Policy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Policy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Policy.__pulumiType;
    }

    /**
     * Enable/disable IGMP flood report. Valid values: `enable`, `disable`.
     */
    public readonly igmpFloodReport!: pulumi.Output<string>;
    /**
     * Enable/disable IGMP flood traffic. Valid values: `enable`, `disable`.
     */
    public readonly igmpFloodTraffic!: pulumi.Output<string>;
    /**
     * Auto-Config QoS policy name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Enable/disable PoE status. Valid values: `enable`, `disable`.
     */
    public readonly poeStatus!: pulumi.Output<string>;
    /**
     * Auto-Config QoS policy.
     */
    public readonly qosPolicy!: pulumi.Output<string>;
    /**
     * Auto-Config storm control policy.
     */
    public readonly stormControlPolicy!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string>;

    /**
     * Create a Policy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: PolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PolicyArgs | PolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PolicyState | undefined;
            resourceInputs["igmpFloodReport"] = state ? state.igmpFloodReport : undefined;
            resourceInputs["igmpFloodTraffic"] = state ? state.igmpFloodTraffic : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["poeStatus"] = state ? state.poeStatus : undefined;
            resourceInputs["qosPolicy"] = state ? state.qosPolicy : undefined;
            resourceInputs["stormControlPolicy"] = state ? state.stormControlPolicy : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as PolicyArgs | undefined;
            resourceInputs["igmpFloodReport"] = args ? args.igmpFloodReport : undefined;
            resourceInputs["igmpFloodTraffic"] = args ? args.igmpFloodTraffic : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["poeStatus"] = args ? args.poeStatus : undefined;
            resourceInputs["qosPolicy"] = args ? args.qosPolicy : undefined;
            resourceInputs["stormControlPolicy"] = args ? args.stormControlPolicy : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Policy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Policy resources.
 */
export interface PolicyState {
    /**
     * Enable/disable IGMP flood report. Valid values: `enable`, `disable`.
     */
    igmpFloodReport?: pulumi.Input<string>;
    /**
     * Enable/disable IGMP flood traffic. Valid values: `enable`, `disable`.
     */
    igmpFloodTraffic?: pulumi.Input<string>;
    /**
     * Auto-Config QoS policy name
     */
    name?: pulumi.Input<string>;
    /**
     * Enable/disable PoE status. Valid values: `enable`, `disable`.
     */
    poeStatus?: pulumi.Input<string>;
    /**
     * Auto-Config QoS policy.
     */
    qosPolicy?: pulumi.Input<string>;
    /**
     * Auto-Config storm control policy.
     */
    stormControlPolicy?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Policy resource.
 */
export interface PolicyArgs {
    /**
     * Enable/disable IGMP flood report. Valid values: `enable`, `disable`.
     */
    igmpFloodReport?: pulumi.Input<string>;
    /**
     * Enable/disable IGMP flood traffic. Valid values: `enable`, `disable`.
     */
    igmpFloodTraffic?: pulumi.Input<string>;
    /**
     * Auto-Config QoS policy name
     */
    name?: pulumi.Input<string>;
    /**
     * Enable/disable PoE status. Valid values: `enable`, `disable`.
     */
    poeStatus?: pulumi.Input<string>;
    /**
     * Auto-Config QoS policy.
     */
    qosPolicy?: pulumi.Input<string>;
    /**
     * Auto-Config storm control policy.
     */
    stormControlPolicy?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
