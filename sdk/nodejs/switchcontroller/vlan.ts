// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Configure VLANs for switch controller. Applies to FortiOS Version `<= 6.2.0`.
 *
 * ## Import
 *
 * SwitchController Vlan can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:switchcontroller/vlan:Vlan labelname {{name}}
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:switchcontroller/vlan:Vlan labelname {{name}}
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Vlan extends pulumi.CustomResource {
    /**
     * Get an existing Vlan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VlanState, opts?: pulumi.CustomResourceOptions): Vlan {
        return new Vlan(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:switchcontroller/vlan:Vlan';

    /**
     * Returns true if the given object is an instance of Vlan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Vlan {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Vlan.__pulumiType;
    }

    /**
     * Authentication. Valid values: `radius`, `usergroup`.
     */
    public readonly auth!: pulumi.Output<string>;
    /**
     * Color of icon on the GUI.
     */
    public readonly color!: pulumi.Output<number>;
    /**
     * Comment.
     */
    public readonly comments!: pulumi.Output<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    /**
     * Switch VLAN name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specify captive portal replacement message override group.
     */
    public readonly portalMessageOverrideGroup!: pulumi.Output<string>;
    /**
     * Individual message overrides. The structure of `portalMessageOverrides` block is documented below.
     */
    public readonly portalMessageOverrides!: pulumi.Output<outputs.switchcontroller.VlanPortalMessageOverrides>;
    /**
     * Authentication radius server.
     */
    public readonly radiusServer!: pulumi.Output<string>;
    /**
     * Security. Valid values: `open`, `captive-portal`, `8021x`.
     */
    public readonly security!: pulumi.Output<string>;
    /**
     * Selected user group. The structure of `selectedUsergroups` block is documented below.
     */
    public readonly selectedUsergroups!: pulumi.Output<outputs.switchcontroller.VlanSelectedUsergroup[] | undefined>;
    /**
     * Authentication usergroup.
     */
    public readonly usergroup!: pulumi.Output<string>;
    /**
     * Virtual domain,
     */
    public readonly vdom!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;
    /**
     * VLAN ID.
     */
    public readonly vlanid!: pulumi.Output<number>;

    /**
     * Create a Vlan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: VlanArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VlanArgs | VlanState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VlanState | undefined;
            resourceInputs["auth"] = state ? state.auth : undefined;
            resourceInputs["color"] = state ? state.color : undefined;
            resourceInputs["comments"] = state ? state.comments : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["portalMessageOverrideGroup"] = state ? state.portalMessageOverrideGroup : undefined;
            resourceInputs["portalMessageOverrides"] = state ? state.portalMessageOverrides : undefined;
            resourceInputs["radiusServer"] = state ? state.radiusServer : undefined;
            resourceInputs["security"] = state ? state.security : undefined;
            resourceInputs["selectedUsergroups"] = state ? state.selectedUsergroups : undefined;
            resourceInputs["usergroup"] = state ? state.usergroup : undefined;
            resourceInputs["vdom"] = state ? state.vdom : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
            resourceInputs["vlanid"] = state ? state.vlanid : undefined;
        } else {
            const args = argsOrState as VlanArgs | undefined;
            resourceInputs["auth"] = args ? args.auth : undefined;
            resourceInputs["color"] = args ? args.color : undefined;
            resourceInputs["comments"] = args ? args.comments : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["portalMessageOverrideGroup"] = args ? args.portalMessageOverrideGroup : undefined;
            resourceInputs["portalMessageOverrides"] = args ? args.portalMessageOverrides : undefined;
            resourceInputs["radiusServer"] = args ? args.radiusServer : undefined;
            resourceInputs["security"] = args ? args.security : undefined;
            resourceInputs["selectedUsergroups"] = args ? args.selectedUsergroups : undefined;
            resourceInputs["usergroup"] = args ? args.usergroup : undefined;
            resourceInputs["vdom"] = args ? args.vdom : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
            resourceInputs["vlanid"] = args ? args.vlanid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Vlan.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Vlan resources.
 */
export interface VlanState {
    /**
     * Authentication. Valid values: `radius`, `usergroup`.
     */
    auth?: pulumi.Input<string>;
    /**
     * Color of icon on the GUI.
     */
    color?: pulumi.Input<number>;
    /**
     * Comment.
     */
    comments?: pulumi.Input<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * Switch VLAN name.
     */
    name?: pulumi.Input<string>;
    /**
     * Specify captive portal replacement message override group.
     */
    portalMessageOverrideGroup?: pulumi.Input<string>;
    /**
     * Individual message overrides. The structure of `portalMessageOverrides` block is documented below.
     */
    portalMessageOverrides?: pulumi.Input<inputs.switchcontroller.VlanPortalMessageOverrides>;
    /**
     * Authentication radius server.
     */
    radiusServer?: pulumi.Input<string>;
    /**
     * Security. Valid values: `open`, `captive-portal`, `8021x`.
     */
    security?: pulumi.Input<string>;
    /**
     * Selected user group. The structure of `selectedUsergroups` block is documented below.
     */
    selectedUsergroups?: pulumi.Input<pulumi.Input<inputs.switchcontroller.VlanSelectedUsergroup>[]>;
    /**
     * Authentication usergroup.
     */
    usergroup?: pulumi.Input<string>;
    /**
     * Virtual domain,
     */
    vdom?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * VLAN ID.
     */
    vlanid?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Vlan resource.
 */
export interface VlanArgs {
    /**
     * Authentication. Valid values: `radius`, `usergroup`.
     */
    auth?: pulumi.Input<string>;
    /**
     * Color of icon on the GUI.
     */
    color?: pulumi.Input<number>;
    /**
     * Comment.
     */
    comments?: pulumi.Input<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * Switch VLAN name.
     */
    name?: pulumi.Input<string>;
    /**
     * Specify captive portal replacement message override group.
     */
    portalMessageOverrideGroup?: pulumi.Input<string>;
    /**
     * Individual message overrides. The structure of `portalMessageOverrides` block is documented below.
     */
    portalMessageOverrides?: pulumi.Input<inputs.switchcontroller.VlanPortalMessageOverrides>;
    /**
     * Authentication radius server.
     */
    radiusServer?: pulumi.Input<string>;
    /**
     * Security. Valid values: `open`, `captive-portal`, `8021x`.
     */
    security?: pulumi.Input<string>;
    /**
     * Selected user group. The structure of `selectedUsergroups` block is documented below.
     */
    selectedUsergroups?: pulumi.Input<pulumi.Input<inputs.switchcontroller.VlanSelectedUsergroup>[]>;
    /**
     * Authentication usergroup.
     */
    usergroup?: pulumi.Input<string>;
    /**
     * Virtual domain,
     */
    vdom?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * VLAN ID.
     */
    vlanid?: pulumi.Input<number>;
}
