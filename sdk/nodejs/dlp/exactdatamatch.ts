// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Configure exact-data-match template used by DLP scan. Applies to FortiOS Version `>= 7.4.2`.
 *
 * ## Import
 *
 * Dlp ExactDataMatch can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:dlp/exactdatamatch:Exactdatamatch labelname {{name}}
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:dlp/exactdatamatch:Exactdatamatch labelname {{name}}
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Exactdatamatch extends pulumi.CustomResource {
    /**
     * Get an existing Exactdatamatch resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ExactdatamatchState, opts?: pulumi.CustomResourceOptions): Exactdatamatch {
        return new Exactdatamatch(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:dlp/exactdatamatch:Exactdatamatch';

    /**
     * Returns true if the given object is an instance of Exactdatamatch.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Exactdatamatch {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Exactdatamatch.__pulumiType;
    }

    /**
     * DLP exact-data-match column types. The structure of `columns` block is documented below.
     */
    public readonly columns!: pulumi.Output<outputs.dlp.ExactdatamatchColumn[] | undefined>;
    /**
     * External resource for exact data match.
     */
    public readonly data!: pulumi.Output<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    /**
     * Name of table containing the exact-data-match template.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Number of optional columns need to match.
     */
    public readonly optional!: pulumi.Output<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a Exactdatamatch resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ExactdatamatchArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ExactdatamatchArgs | ExactdatamatchState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ExactdatamatchState | undefined;
            resourceInputs["columns"] = state ? state.columns : undefined;
            resourceInputs["data"] = state ? state.data : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["optional"] = state ? state.optional : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as ExactdatamatchArgs | undefined;
            resourceInputs["columns"] = args ? args.columns : undefined;
            resourceInputs["data"] = args ? args.data : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["optional"] = args ? args.optional : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Exactdatamatch.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Exactdatamatch resources.
 */
export interface ExactdatamatchState {
    /**
     * DLP exact-data-match column types. The structure of `columns` block is documented below.
     */
    columns?: pulumi.Input<pulumi.Input<inputs.dlp.ExactdatamatchColumn>[]>;
    /**
     * External resource for exact data match.
     */
    data?: pulumi.Input<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * Name of table containing the exact-data-match template.
     */
    name?: pulumi.Input<string>;
    /**
     * Number of optional columns need to match.
     */
    optional?: pulumi.Input<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Exactdatamatch resource.
 */
export interface ExactdatamatchArgs {
    /**
     * DLP exact-data-match column types. The structure of `columns` block is documented below.
     */
    columns?: pulumi.Input<pulumi.Input<inputs.dlp.ExactdatamatchColumn>[]>;
    /**
     * External resource for exact data match.
     */
    data?: pulumi.Input<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * Name of table containing the exact-data-match template.
     */
    name?: pulumi.Input<string>;
    /**
     * Number of optional columns need to match.
     */
    optional?: pulumi.Input<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
