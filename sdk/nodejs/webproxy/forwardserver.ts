// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Configure forward-server addresses.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumiverse/fortios";
 *
 * const trname = new fortios.webproxy.Forwardserver("trname", {
 *     addrType: "fqdn",
 *     healthcheck: "disable",
 *     ip: "0.0.0.0",
 *     monitor: "http://www.google.com",
 *     port: 3128,
 *     serverDownOption: "block",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * WebProxy ForwardServer can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:webproxy/forwardserver:Forwardserver labelname {{name}}
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:webproxy/forwardserver:Forwardserver labelname {{name}}
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Forwardserver extends pulumi.CustomResource {
    /**
     * Get an existing Forwardserver resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ForwardserverState, opts?: pulumi.CustomResourceOptions): Forwardserver {
        return new Forwardserver(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:webproxy/forwardserver:Forwardserver';

    /**
     * Returns true if the given object is an instance of Forwardserver.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Forwardserver {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Forwardserver.__pulumiType;
    }

    /**
     * Address type of the forwarding proxy server: IP or FQDN.
     */
    public readonly addrType!: pulumi.Output<string>;
    /**
     * Comment.
     */
    public readonly comment!: pulumi.Output<string>;
    /**
     * Forward server Fully Qualified Domain Name (FQDN).
     */
    public readonly fqdn!: pulumi.Output<string>;
    /**
     * Enable/disable forward server health checking. Attempts to connect through the remote forwarding server to a destination to verify that the forwarding server is operating normally. Valid values: `disable`, `enable`.
     */
    public readonly healthcheck!: pulumi.Output<string>;
    /**
     * Forward proxy server IP address.
     */
    public readonly ip!: pulumi.Output<string>;
    /**
     * Forward proxy server IPv6 address.
     */
    public readonly ipv6!: pulumi.Output<string>;
    /**
     * Enable/disable use of the of the IP address of the outgoing interface as the client IP address (default = enable) Valid values: `enable`, `disable`.
     */
    public readonly masquerade!: pulumi.Output<string>;
    /**
     * URL for forward server health check monitoring (default = http://www.google.com).
     */
    public readonly monitor!: pulumi.Output<string>;
    /**
     * Server name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * HTTP authentication password.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * Port number that the forwarding server expects to receive HTTP sessions on (1 - 65535, default = 3128).
     */
    public readonly port!: pulumi.Output<number>;
    /**
     * Action to take when the forward server is found to be down: block sessions until the server is back up or pass sessions to their destination. Valid values: `block`, `pass`.
     */
    public readonly serverDownOption!: pulumi.Output<string>;
    /**
     * HTTP authentication user name.
     */
    public readonly username!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a Forwardserver resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ForwardserverArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ForwardserverArgs | ForwardserverState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ForwardserverState | undefined;
            resourceInputs["addrType"] = state ? state.addrType : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["fqdn"] = state ? state.fqdn : undefined;
            resourceInputs["healthcheck"] = state ? state.healthcheck : undefined;
            resourceInputs["ip"] = state ? state.ip : undefined;
            resourceInputs["ipv6"] = state ? state.ipv6 : undefined;
            resourceInputs["masquerade"] = state ? state.masquerade : undefined;
            resourceInputs["monitor"] = state ? state.monitor : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["serverDownOption"] = state ? state.serverDownOption : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as ForwardserverArgs | undefined;
            resourceInputs["addrType"] = args ? args.addrType : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["fqdn"] = args ? args.fqdn : undefined;
            resourceInputs["healthcheck"] = args ? args.healthcheck : undefined;
            resourceInputs["ip"] = args ? args.ip : undefined;
            resourceInputs["ipv6"] = args ? args.ipv6 : undefined;
            resourceInputs["masquerade"] = args ? args.masquerade : undefined;
            resourceInputs["monitor"] = args ? args.monitor : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["serverDownOption"] = args ? args.serverDownOption : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Forwardserver.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Forwardserver resources.
 */
export interface ForwardserverState {
    /**
     * Address type of the forwarding proxy server: IP or FQDN.
     */
    addrType?: pulumi.Input<string>;
    /**
     * Comment.
     */
    comment?: pulumi.Input<string>;
    /**
     * Forward server Fully Qualified Domain Name (FQDN).
     */
    fqdn?: pulumi.Input<string>;
    /**
     * Enable/disable forward server health checking. Attempts to connect through the remote forwarding server to a destination to verify that the forwarding server is operating normally. Valid values: `disable`, `enable`.
     */
    healthcheck?: pulumi.Input<string>;
    /**
     * Forward proxy server IP address.
     */
    ip?: pulumi.Input<string>;
    /**
     * Forward proxy server IPv6 address.
     */
    ipv6?: pulumi.Input<string>;
    /**
     * Enable/disable use of the of the IP address of the outgoing interface as the client IP address (default = enable) Valid values: `enable`, `disable`.
     */
    masquerade?: pulumi.Input<string>;
    /**
     * URL for forward server health check monitoring (default = http://www.google.com).
     */
    monitor?: pulumi.Input<string>;
    /**
     * Server name.
     */
    name?: pulumi.Input<string>;
    /**
     * HTTP authentication password.
     */
    password?: pulumi.Input<string>;
    /**
     * Port number that the forwarding server expects to receive HTTP sessions on (1 - 65535, default = 3128).
     */
    port?: pulumi.Input<number>;
    /**
     * Action to take when the forward server is found to be down: block sessions until the server is back up or pass sessions to their destination. Valid values: `block`, `pass`.
     */
    serverDownOption?: pulumi.Input<string>;
    /**
     * HTTP authentication user name.
     */
    username?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Forwardserver resource.
 */
export interface ForwardserverArgs {
    /**
     * Address type of the forwarding proxy server: IP or FQDN.
     */
    addrType?: pulumi.Input<string>;
    /**
     * Comment.
     */
    comment?: pulumi.Input<string>;
    /**
     * Forward server Fully Qualified Domain Name (FQDN).
     */
    fqdn?: pulumi.Input<string>;
    /**
     * Enable/disable forward server health checking. Attempts to connect through the remote forwarding server to a destination to verify that the forwarding server is operating normally. Valid values: `disable`, `enable`.
     */
    healthcheck?: pulumi.Input<string>;
    /**
     * Forward proxy server IP address.
     */
    ip?: pulumi.Input<string>;
    /**
     * Forward proxy server IPv6 address.
     */
    ipv6?: pulumi.Input<string>;
    /**
     * Enable/disable use of the of the IP address of the outgoing interface as the client IP address (default = enable) Valid values: `enable`, `disable`.
     */
    masquerade?: pulumi.Input<string>;
    /**
     * URL for forward server health check monitoring (default = http://www.google.com).
     */
    monitor?: pulumi.Input<string>;
    /**
     * Server name.
     */
    name?: pulumi.Input<string>;
    /**
     * HTTP authentication password.
     */
    password?: pulumi.Input<string>;
    /**
     * Port number that the forwarding server expects to receive HTTP sessions on (1 - 65535, default = 3128).
     */
    port?: pulumi.Input<number>;
    /**
     * Action to take when the forward server is found to be down: block sessions until the server is back up or pass sessions to their destination. Valid values: `block`, `pass`.
     */
    serverDownOption?: pulumi.Input<string>;
    /**
     * HTTP authentication user name.
     */
    username?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
