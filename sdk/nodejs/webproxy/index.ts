// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { DebugurlArgs, DebugurlState } from "./debugurl";
export type Debugurl = import("./debugurl").Debugurl;
export const Debugurl: typeof import("./debugurl").Debugurl = null as any;
utilities.lazyLoad(exports, ["Debugurl"], () => require("./debugurl"));

export { ExplicitArgs, ExplicitState } from "./explicit";
export type Explicit = import("./explicit").Explicit;
export const Explicit: typeof import("./explicit").Explicit = null as any;
utilities.lazyLoad(exports, ["Explicit"], () => require("./explicit"));

export { FastfallbackArgs, FastfallbackState } from "./fastfallback";
export type Fastfallback = import("./fastfallback").Fastfallback;
export const Fastfallback: typeof import("./fastfallback").Fastfallback = null as any;
utilities.lazyLoad(exports, ["Fastfallback"], () => require("./fastfallback"));

export { ForwardserverArgs, ForwardserverState } from "./forwardserver";
export type Forwardserver = import("./forwardserver").Forwardserver;
export const Forwardserver: typeof import("./forwardserver").Forwardserver = null as any;
utilities.lazyLoad(exports, ["Forwardserver"], () => require("./forwardserver"));

export { ForwardservergroupArgs, ForwardservergroupState } from "./forwardservergroup";
export type Forwardservergroup = import("./forwardservergroup").Forwardservergroup;
export const Forwardservergroup: typeof import("./forwardservergroup").Forwardservergroup = null as any;
utilities.lazyLoad(exports, ["Forwardservergroup"], () => require("./forwardservergroup"));

export { GlobalArgs, GlobalState } from "./global";
export type Global = import("./global").Global;
export const Global: typeof import("./global").Global = null as any;
utilities.lazyLoad(exports, ["Global"], () => require("./global"));

export { ProfileArgs, ProfileState } from "./profile";
export type Profile = import("./profile").Profile;
export const Profile: typeof import("./profile").Profile = null as any;
utilities.lazyLoad(exports, ["Profile"], () => require("./profile"));

export { UrlmatchArgs, UrlmatchState } from "./urlmatch";
export type Urlmatch = import("./urlmatch").Urlmatch;
export const Urlmatch: typeof import("./urlmatch").Urlmatch = null as any;
utilities.lazyLoad(exports, ["Urlmatch"], () => require("./urlmatch"));

export { WispArgs, WispState } from "./wisp";
export type Wisp = import("./wisp").Wisp;
export const Wisp: typeof import("./wisp").Wisp = null as any;
utilities.lazyLoad(exports, ["Wisp"], () => require("./wisp"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "fortios:webproxy/debugurl:Debugurl":
                return new Debugurl(name, <any>undefined, { urn })
            case "fortios:webproxy/explicit:Explicit":
                return new Explicit(name, <any>undefined, { urn })
            case "fortios:webproxy/fastfallback:Fastfallback":
                return new Fastfallback(name, <any>undefined, { urn })
            case "fortios:webproxy/forwardserver:Forwardserver":
                return new Forwardserver(name, <any>undefined, { urn })
            case "fortios:webproxy/forwardservergroup:Forwardservergroup":
                return new Forwardservergroup(name, <any>undefined, { urn })
            case "fortios:webproxy/global:Global":
                return new Global(name, <any>undefined, { urn })
            case "fortios:webproxy/profile:Profile":
                return new Profile(name, <any>undefined, { urn })
            case "fortios:webproxy/urlmatch:Urlmatch":
                return new Urlmatch(name, <any>undefined, { urn })
            case "fortios:webproxy/wisp:Wisp":
                return new Wisp(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("fortios", "webproxy/debugurl", _module)
pulumi.runtime.registerResourceModule("fortios", "webproxy/explicit", _module)
pulumi.runtime.registerResourceModule("fortios", "webproxy/fastfallback", _module)
pulumi.runtime.registerResourceModule("fortios", "webproxy/forwardserver", _module)
pulumi.runtime.registerResourceModule("fortios", "webproxy/forwardservergroup", _module)
pulumi.runtime.registerResourceModule("fortios", "webproxy/global", _module)
pulumi.runtime.registerResourceModule("fortios", "webproxy/profile", _module)
pulumi.runtime.registerResourceModule("fortios", "webproxy/urlmatch", _module)
pulumi.runtime.registerResourceModule("fortios", "webproxy/wisp", _module)
