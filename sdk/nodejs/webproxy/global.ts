// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Configure Web proxy global settings.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumiverse/fortios";
 *
 * const trname = new fortios.webproxy.Global("trname", {
 *     fastPolicyMatch: "enable",
 *     forwardProxyAuth: "disable",
 *     forwardServerAffinityTimeout: 30,
 *     learnClientIp: "disable",
 *     maxMessageLength: 32,
 *     maxRequestLength: 4,
 *     maxWafBodyCacheLength: 32,
 *     proxyFqdn: "default.fqdn",
 *     sslCaCert: "Fortinet_CA_SSL",
 *     sslCert: "Fortinet_Factory",
 *     strictWebCheck: "disable",
 *     tunnelNonHttp: "enable",
 *     unknownHttpVersion: "best-effort",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * WebProxy Global can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:webproxy/global:Global labelname WebProxyGlobal
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:webproxy/global:Global labelname WebProxyGlobal
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Global extends pulumi.CustomResource {
    /**
     * Get an existing Global resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GlobalState, opts?: pulumi.CustomResourceOptions): Global {
        return new Global(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:webproxy/global:Global';

    /**
     * Returns true if the given object is an instance of Global.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Global {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Global.__pulumiType;
    }

    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * Enable/disable fast matching algorithm for explicit and transparent proxy policy. Valid values: `enable`, `disable`.
     */
    public readonly fastPolicyMatch!: pulumi.Output<string>;
    /**
     * Enable/disable forwarding proxy authentication headers. Valid values: `enable`, `disable`.
     */
    public readonly forwardProxyAuth!: pulumi.Output<string>;
    /**
     * Period of time before the source IP's traffic is no longer assigned to the forwarding server (6 - 60 min, default = 30).
     */
    public readonly forwardServerAffinityTimeout!: pulumi.Output<number>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    /**
     * Enable/disable LDAP user cache for explicit and transparent proxy user. Valid values: `enable`, `disable`.
     */
    public readonly ldapUserCache!: pulumi.Output<string>;
    /**
     * Enable/disable learning the client's IP address from headers. Valid values: `enable`, `disable`.
     */
    public readonly learnClientIp!: pulumi.Output<string>;
    /**
     * Learn client IP address from the specified headers. Valid values: `true-client-ip`, `x-real-ip`, `x-forwarded-for`.
     */
    public readonly learnClientIpFromHeader!: pulumi.Output<string>;
    /**
     * IPv6 Source address name (srcaddr or srcaddr6 must be set). The structure of `learnClientIpSrcaddr6` block is documented below.
     */
    public readonly learnClientIpSrcaddr6s!: pulumi.Output<outputs.webproxy.GlobalLearnClientIpSrcaddr6[] | undefined>;
    /**
     * Source address name (srcaddr or srcaddr6 must be set). The structure of `learnClientIpSrcaddr` block is documented below.
     */
    public readonly learnClientIpSrcaddrs!: pulumi.Output<outputs.webproxy.GlobalLearnClientIpSrcaddr[] | undefined>;
    /**
     * Enable/disable always log application type in traffic log. Valid values: `enable`, `disable`.
     */
    public readonly logAppId!: pulumi.Output<string>;
    /**
     * Enable/disable forward server name logging in forward traffic log. Valid values: `enable`, `disable`.
     */
    public readonly logForwardServer!: pulumi.Output<string>;
    /**
     * Enable/disable logging sessions that are pending on policy matching. Valid values: `enable`, `disable`.
     */
    public readonly logPolicyPending!: pulumi.Output<string>;
    /**
     * Maximum length of HTTP message, not including body (16 - 256 Kbytes, default = 32).
     */
    public readonly maxMessageLength!: pulumi.Output<number>;
    /**
     * Maximum length of HTTP request line (2 - 64 Kbytes, default = 4).
     */
    public readonly maxRequestLength!: pulumi.Output<number>;
    /**
     * Maximum length of HTTP messages processed by Web Application Firewall (WAF) (10 - 1024 Kbytes, default = 32).
     */
    public readonly maxWafBodyCacheLength!: pulumi.Output<number>;
    /**
     * Enable/disable deep inspection for application level category policy matching. Valid values: `enable`, `disable`.
     */
    public readonly policyCategoryDeepInspect!: pulumi.Output<string>;
    /**
     * Fully Qualified Domain Name (FQDN) that clients connect to (default = default.fqdn) to connect to the explicit web proxy.
     */
    public readonly proxyFqdn!: pulumi.Output<string>;
    /**
     * IPv4 source addresses to exempt proxy affinity.
     */
    public readonly srcAffinityExemptAddr!: pulumi.Output<string>;
    /**
     * IPv6 source addresses to exempt proxy affinity.
     */
    public readonly srcAffinityExemptAddr6!: pulumi.Output<string>;
    /**
     * SSL CA certificate for SSL interception.
     */
    public readonly sslCaCert!: pulumi.Output<string>;
    /**
     * SSL certificate for SSL interception.
     */
    public readonly sslCert!: pulumi.Output<string>;
    /**
     * Enable/disable strict web checking to block web sites that send incorrect headers that don't conform to HTTP 1.1. Valid values: `enable`, `disable`.
     */
    public readonly strictWebCheck!: pulumi.Output<string>;
    /**
     * Enable/disable allowing non-HTTP traffic. Allowed non-HTTP traffic is tunneled. Valid values: `enable`, `disable`.
     */
    public readonly tunnelNonHttp!: pulumi.Output<string>;
    /**
     * Action to take when an unknown version of HTTP is encountered: reject, allow (tunnel), or proceed with best-effort. Valid values: `reject`, `tunnel`, `best-effort`.
     */
    public readonly unknownHttpVersion!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;
    /**
     * Name of the web proxy profile to apply when explicit proxy traffic is allowed by default and traffic is accepted that does not match an explicit proxy policy.
     */
    public readonly webproxyProfile!: pulumi.Output<string>;

    /**
     * Create a Global resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GlobalArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GlobalArgs | GlobalState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GlobalState | undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["fastPolicyMatch"] = state ? state.fastPolicyMatch : undefined;
            resourceInputs["forwardProxyAuth"] = state ? state.forwardProxyAuth : undefined;
            resourceInputs["forwardServerAffinityTimeout"] = state ? state.forwardServerAffinityTimeout : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["ldapUserCache"] = state ? state.ldapUserCache : undefined;
            resourceInputs["learnClientIp"] = state ? state.learnClientIp : undefined;
            resourceInputs["learnClientIpFromHeader"] = state ? state.learnClientIpFromHeader : undefined;
            resourceInputs["learnClientIpSrcaddr6s"] = state ? state.learnClientIpSrcaddr6s : undefined;
            resourceInputs["learnClientIpSrcaddrs"] = state ? state.learnClientIpSrcaddrs : undefined;
            resourceInputs["logAppId"] = state ? state.logAppId : undefined;
            resourceInputs["logForwardServer"] = state ? state.logForwardServer : undefined;
            resourceInputs["logPolicyPending"] = state ? state.logPolicyPending : undefined;
            resourceInputs["maxMessageLength"] = state ? state.maxMessageLength : undefined;
            resourceInputs["maxRequestLength"] = state ? state.maxRequestLength : undefined;
            resourceInputs["maxWafBodyCacheLength"] = state ? state.maxWafBodyCacheLength : undefined;
            resourceInputs["policyCategoryDeepInspect"] = state ? state.policyCategoryDeepInspect : undefined;
            resourceInputs["proxyFqdn"] = state ? state.proxyFqdn : undefined;
            resourceInputs["srcAffinityExemptAddr"] = state ? state.srcAffinityExemptAddr : undefined;
            resourceInputs["srcAffinityExemptAddr6"] = state ? state.srcAffinityExemptAddr6 : undefined;
            resourceInputs["sslCaCert"] = state ? state.sslCaCert : undefined;
            resourceInputs["sslCert"] = state ? state.sslCert : undefined;
            resourceInputs["strictWebCheck"] = state ? state.strictWebCheck : undefined;
            resourceInputs["tunnelNonHttp"] = state ? state.tunnelNonHttp : undefined;
            resourceInputs["unknownHttpVersion"] = state ? state.unknownHttpVersion : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
            resourceInputs["webproxyProfile"] = state ? state.webproxyProfile : undefined;
        } else {
            const args = argsOrState as GlobalArgs | undefined;
            if ((!args || args.proxyFqdn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'proxyFqdn'");
            }
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["fastPolicyMatch"] = args ? args.fastPolicyMatch : undefined;
            resourceInputs["forwardProxyAuth"] = args ? args.forwardProxyAuth : undefined;
            resourceInputs["forwardServerAffinityTimeout"] = args ? args.forwardServerAffinityTimeout : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["ldapUserCache"] = args ? args.ldapUserCache : undefined;
            resourceInputs["learnClientIp"] = args ? args.learnClientIp : undefined;
            resourceInputs["learnClientIpFromHeader"] = args ? args.learnClientIpFromHeader : undefined;
            resourceInputs["learnClientIpSrcaddr6s"] = args ? args.learnClientIpSrcaddr6s : undefined;
            resourceInputs["learnClientIpSrcaddrs"] = args ? args.learnClientIpSrcaddrs : undefined;
            resourceInputs["logAppId"] = args ? args.logAppId : undefined;
            resourceInputs["logForwardServer"] = args ? args.logForwardServer : undefined;
            resourceInputs["logPolicyPending"] = args ? args.logPolicyPending : undefined;
            resourceInputs["maxMessageLength"] = args ? args.maxMessageLength : undefined;
            resourceInputs["maxRequestLength"] = args ? args.maxRequestLength : undefined;
            resourceInputs["maxWafBodyCacheLength"] = args ? args.maxWafBodyCacheLength : undefined;
            resourceInputs["policyCategoryDeepInspect"] = args ? args.policyCategoryDeepInspect : undefined;
            resourceInputs["proxyFqdn"] = args ? args.proxyFqdn : undefined;
            resourceInputs["srcAffinityExemptAddr"] = args ? args.srcAffinityExemptAddr : undefined;
            resourceInputs["srcAffinityExemptAddr6"] = args ? args.srcAffinityExemptAddr6 : undefined;
            resourceInputs["sslCaCert"] = args ? args.sslCaCert : undefined;
            resourceInputs["sslCert"] = args ? args.sslCert : undefined;
            resourceInputs["strictWebCheck"] = args ? args.strictWebCheck : undefined;
            resourceInputs["tunnelNonHttp"] = args ? args.tunnelNonHttp : undefined;
            resourceInputs["unknownHttpVersion"] = args ? args.unknownHttpVersion : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
            resourceInputs["webproxyProfile"] = args ? args.webproxyProfile : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Global.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Global resources.
 */
export interface GlobalState {
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Enable/disable fast matching algorithm for explicit and transparent proxy policy. Valid values: `enable`, `disable`.
     */
    fastPolicyMatch?: pulumi.Input<string>;
    /**
     * Enable/disable forwarding proxy authentication headers. Valid values: `enable`, `disable`.
     */
    forwardProxyAuth?: pulumi.Input<string>;
    /**
     * Period of time before the source IP's traffic is no longer assigned to the forwarding server (6 - 60 min, default = 30).
     */
    forwardServerAffinityTimeout?: pulumi.Input<number>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * Enable/disable LDAP user cache for explicit and transparent proxy user. Valid values: `enable`, `disable`.
     */
    ldapUserCache?: pulumi.Input<string>;
    /**
     * Enable/disable learning the client's IP address from headers. Valid values: `enable`, `disable`.
     */
    learnClientIp?: pulumi.Input<string>;
    /**
     * Learn client IP address from the specified headers. Valid values: `true-client-ip`, `x-real-ip`, `x-forwarded-for`.
     */
    learnClientIpFromHeader?: pulumi.Input<string>;
    /**
     * IPv6 Source address name (srcaddr or srcaddr6 must be set). The structure of `learnClientIpSrcaddr6` block is documented below.
     */
    learnClientIpSrcaddr6s?: pulumi.Input<pulumi.Input<inputs.webproxy.GlobalLearnClientIpSrcaddr6>[]>;
    /**
     * Source address name (srcaddr or srcaddr6 must be set). The structure of `learnClientIpSrcaddr` block is documented below.
     */
    learnClientIpSrcaddrs?: pulumi.Input<pulumi.Input<inputs.webproxy.GlobalLearnClientIpSrcaddr>[]>;
    /**
     * Enable/disable always log application type in traffic log. Valid values: `enable`, `disable`.
     */
    logAppId?: pulumi.Input<string>;
    /**
     * Enable/disable forward server name logging in forward traffic log. Valid values: `enable`, `disable`.
     */
    logForwardServer?: pulumi.Input<string>;
    /**
     * Enable/disable logging sessions that are pending on policy matching. Valid values: `enable`, `disable`.
     */
    logPolicyPending?: pulumi.Input<string>;
    /**
     * Maximum length of HTTP message, not including body (16 - 256 Kbytes, default = 32).
     */
    maxMessageLength?: pulumi.Input<number>;
    /**
     * Maximum length of HTTP request line (2 - 64 Kbytes, default = 4).
     */
    maxRequestLength?: pulumi.Input<number>;
    /**
     * Maximum length of HTTP messages processed by Web Application Firewall (WAF) (10 - 1024 Kbytes, default = 32).
     */
    maxWafBodyCacheLength?: pulumi.Input<number>;
    /**
     * Enable/disable deep inspection for application level category policy matching. Valid values: `enable`, `disable`.
     */
    policyCategoryDeepInspect?: pulumi.Input<string>;
    /**
     * Fully Qualified Domain Name (FQDN) that clients connect to (default = default.fqdn) to connect to the explicit web proxy.
     */
    proxyFqdn?: pulumi.Input<string>;
    /**
     * IPv4 source addresses to exempt proxy affinity.
     */
    srcAffinityExemptAddr?: pulumi.Input<string>;
    /**
     * IPv6 source addresses to exempt proxy affinity.
     */
    srcAffinityExemptAddr6?: pulumi.Input<string>;
    /**
     * SSL CA certificate for SSL interception.
     */
    sslCaCert?: pulumi.Input<string>;
    /**
     * SSL certificate for SSL interception.
     */
    sslCert?: pulumi.Input<string>;
    /**
     * Enable/disable strict web checking to block web sites that send incorrect headers that don't conform to HTTP 1.1. Valid values: `enable`, `disable`.
     */
    strictWebCheck?: pulumi.Input<string>;
    /**
     * Enable/disable allowing non-HTTP traffic. Allowed non-HTTP traffic is tunneled. Valid values: `enable`, `disable`.
     */
    tunnelNonHttp?: pulumi.Input<string>;
    /**
     * Action to take when an unknown version of HTTP is encountered: reject, allow (tunnel), or proceed with best-effort. Valid values: `reject`, `tunnel`, `best-effort`.
     */
    unknownHttpVersion?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Name of the web proxy profile to apply when explicit proxy traffic is allowed by default and traffic is accepted that does not match an explicit proxy policy.
     */
    webproxyProfile?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Global resource.
 */
export interface GlobalArgs {
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Enable/disable fast matching algorithm for explicit and transparent proxy policy. Valid values: `enable`, `disable`.
     */
    fastPolicyMatch?: pulumi.Input<string>;
    /**
     * Enable/disable forwarding proxy authentication headers. Valid values: `enable`, `disable`.
     */
    forwardProxyAuth?: pulumi.Input<string>;
    /**
     * Period of time before the source IP's traffic is no longer assigned to the forwarding server (6 - 60 min, default = 30).
     */
    forwardServerAffinityTimeout?: pulumi.Input<number>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * Enable/disable LDAP user cache for explicit and transparent proxy user. Valid values: `enable`, `disable`.
     */
    ldapUserCache?: pulumi.Input<string>;
    /**
     * Enable/disable learning the client's IP address from headers. Valid values: `enable`, `disable`.
     */
    learnClientIp?: pulumi.Input<string>;
    /**
     * Learn client IP address from the specified headers. Valid values: `true-client-ip`, `x-real-ip`, `x-forwarded-for`.
     */
    learnClientIpFromHeader?: pulumi.Input<string>;
    /**
     * IPv6 Source address name (srcaddr or srcaddr6 must be set). The structure of `learnClientIpSrcaddr6` block is documented below.
     */
    learnClientIpSrcaddr6s?: pulumi.Input<pulumi.Input<inputs.webproxy.GlobalLearnClientIpSrcaddr6>[]>;
    /**
     * Source address name (srcaddr or srcaddr6 must be set). The structure of `learnClientIpSrcaddr` block is documented below.
     */
    learnClientIpSrcaddrs?: pulumi.Input<pulumi.Input<inputs.webproxy.GlobalLearnClientIpSrcaddr>[]>;
    /**
     * Enable/disable always log application type in traffic log. Valid values: `enable`, `disable`.
     */
    logAppId?: pulumi.Input<string>;
    /**
     * Enable/disable forward server name logging in forward traffic log. Valid values: `enable`, `disable`.
     */
    logForwardServer?: pulumi.Input<string>;
    /**
     * Enable/disable logging sessions that are pending on policy matching. Valid values: `enable`, `disable`.
     */
    logPolicyPending?: pulumi.Input<string>;
    /**
     * Maximum length of HTTP message, not including body (16 - 256 Kbytes, default = 32).
     */
    maxMessageLength?: pulumi.Input<number>;
    /**
     * Maximum length of HTTP request line (2 - 64 Kbytes, default = 4).
     */
    maxRequestLength?: pulumi.Input<number>;
    /**
     * Maximum length of HTTP messages processed by Web Application Firewall (WAF) (10 - 1024 Kbytes, default = 32).
     */
    maxWafBodyCacheLength?: pulumi.Input<number>;
    /**
     * Enable/disable deep inspection for application level category policy matching. Valid values: `enable`, `disable`.
     */
    policyCategoryDeepInspect?: pulumi.Input<string>;
    /**
     * Fully Qualified Domain Name (FQDN) that clients connect to (default = default.fqdn) to connect to the explicit web proxy.
     */
    proxyFqdn: pulumi.Input<string>;
    /**
     * IPv4 source addresses to exempt proxy affinity.
     */
    srcAffinityExemptAddr?: pulumi.Input<string>;
    /**
     * IPv6 source addresses to exempt proxy affinity.
     */
    srcAffinityExemptAddr6?: pulumi.Input<string>;
    /**
     * SSL CA certificate for SSL interception.
     */
    sslCaCert?: pulumi.Input<string>;
    /**
     * SSL certificate for SSL interception.
     */
    sslCert?: pulumi.Input<string>;
    /**
     * Enable/disable strict web checking to block web sites that send incorrect headers that don't conform to HTTP 1.1. Valid values: `enable`, `disable`.
     */
    strictWebCheck?: pulumi.Input<string>;
    /**
     * Enable/disable allowing non-HTTP traffic. Allowed non-HTTP traffic is tunneled. Valid values: `enable`, `disable`.
     */
    tunnelNonHttp?: pulumi.Input<string>;
    /**
     * Action to take when an unknown version of HTTP is encountered: reject, allow (tunnel), or proceed with best-effort. Valid values: `reject`, `tunnel`, `best-effort`.
     */
    unknownHttpVersion?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Name of the web proxy profile to apply when explicit proxy traffic is allowed by default and traffic is accepted that does not match an explicit proxy policy.
     */
    webproxyProfile?: pulumi.Input<string>;
}
