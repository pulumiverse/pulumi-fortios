// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Configure explicit Web proxy settings.
 *
 * ## Import
 *
 * WebProxy Explicit can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:webproxy/explicit:Explicit labelname WebProxyExplicit
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:webproxy/explicit:Explicit labelname WebProxyExplicit
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Explicit extends pulumi.CustomResource {
    /**
     * Get an existing Explicit resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ExplicitState, opts?: pulumi.CustomResourceOptions): Explicit {
        return new Explicit(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:webproxy/explicit:Explicit';

    /**
     * Returns true if the given object is an instance of Explicit.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Explicit {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Explicit.__pulumiType;
    }

    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * Accept incoming FTP-over-HTTP requests on one or more ports (0 - 65535, default = 0; use the same as HTTP).
     */
    public readonly ftpIncomingPort!: pulumi.Output<string>;
    /**
     * Enable to proxy FTP-over-HTTP sessions sent from a web browser. Valid values: `enable`, `disable`.
     */
    public readonly ftpOverHttp!: pulumi.Output<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    /**
     * HTTP connection mode (default = static). Valid values: `static`, `multiplex`, `serverpool`.
     */
    public readonly httpConnectionMode!: pulumi.Output<string>;
    /**
     * Accept incoming HTTP requests on one or more ports (0 - 65535, default = 8080).
     */
    public readonly httpIncomingPort!: pulumi.Output<string>;
    /**
     * Accept incoming HTTPS requests on one or more ports (0 - 65535, default = 0, use the same as HTTP).
     */
    public readonly httpsIncomingPort!: pulumi.Output<string>;
    /**
     * Enable/disable sending the client a replacement message for HTTPS requests. Valid values: `enable`, `disable`.
     */
    public readonly httpsReplacementMessage!: pulumi.Output<string>;
    /**
     * Restrict the explicit HTTP proxy to only accept sessions from this IP address. An interface must have this IP address.
     */
    public readonly incomingIp!: pulumi.Output<string>;
    /**
     * Restrict the explicit web proxy to only accept sessions from this IPv6 address. An interface must have this IPv6 address.
     */
    public readonly incomingIp6!: pulumi.Output<string>;
    /**
     * Enable/disable allowing an IPv6 web proxy destination in policies and all IPv6 related entries in this command. Valid values: `enable`, `disable`.
     */
    public readonly ipv6Status!: pulumi.Output<string>;
    /**
     * Enable/disable displaying a replacement message when a server error is detected. Valid values: `enable`, `disable`.
     */
    public readonly messageUponServerError!: pulumi.Output<string>;
    /**
     * Outgoing HTTP requests will have this IP address as their source address. An interface must have this IP address.
     */
    public readonly outgoingIp!: pulumi.Output<string>;
    /**
     * Outgoing HTTP requests will leave this IPv6. Multiple interfaces can be specified. Interfaces must have these IPv6 addresses.
     */
    public readonly outgoingIp6!: pulumi.Output<string>;
    /**
     * PAC file contents enclosed in quotes (maximum of 256K bytes).
     */
    public readonly pacFileData!: pulumi.Output<string>;
    /**
     * Pac file name.
     */
    public readonly pacFileName!: pulumi.Output<string>;
    /**
     * Port number that PAC traffic from client web browsers uses to connect to the explicit web proxy (0 - 65535, default = 0; use the same as HTTP).
     */
    public readonly pacFileServerPort!: pulumi.Output<string>;
    /**
     * Enable/disable Proxy Auto-Configuration (PAC) for users of this explicit proxy profile. Valid values: `enable`, `disable`.
     */
    public readonly pacFileServerStatus!: pulumi.Output<string>;
    /**
     * Enable/disable to get Proxy Auto-Configuration (PAC) through HTTPS. Valid values: `enable`, `disable`.
     */
    public readonly pacFileThroughHttps!: pulumi.Output<string>;
    /**
     * PAC file access URL.
     */
    public readonly pacFileUrl!: pulumi.Output<string>;
    /**
     * PAC policies. The structure of `pacPolicy` block is documented below.
     */
    public readonly pacPolicies!: pulumi.Output<outputs.webproxy.ExplicitPacPolicy[] | undefined>;
    /**
     * Prefer resolving addresses using the configured IPv4 or IPv6 DNS server (default = ipv4). Valid values: `ipv4`, `ipv6`.
     */
    public readonly prefDnsResult!: pulumi.Output<string>;
    /**
     * Authentication realm used to identify the explicit web proxy (maximum of 63 characters).
     */
    public readonly realm!: pulumi.Output<string>;
    /**
     * Accept or deny explicit web proxy sessions when no web proxy firewall policy exists. Valid values: `accept`, `deny`.
     */
    public readonly secDefaultAction!: pulumi.Output<string>;
    /**
     * Enable/disable/require the secure web proxy for HTTP and HTTPS session. Valid values: `disable`, `enable`, `secure`.
     */
    public readonly secureWebProxy!: pulumi.Output<string>;
    /**
     * Name of certificates for secure web proxy. The structure of `secureWebProxyCert` block is documented below.
     */
    public readonly secureWebProxyCerts!: pulumi.Output<outputs.webproxy.ExplicitSecureWebProxyCert[] | undefined>;
    /**
     * Enable/disable the SOCKS proxy. Valid values: `enable`, `disable`.
     */
    public readonly socks!: pulumi.Output<string>;
    /**
     * Accept incoming SOCKS proxy requests on one or more ports (0 - 65535, default = 0; use the same as HTTP).
     */
    public readonly socksIncomingPort!: pulumi.Output<string>;
    /**
     * Relative strength of encryption algorithms accepted in HTTPS deep scan: high, medium, or low. Valid values: `high`, `medium`, `low`.
     */
    public readonly sslAlgorithm!: pulumi.Output<string>;
    /**
     * Bit-size of Diffie-Hellman (DH) prime used in DHE-RSA negotiation (default = 2048). Valid values: `768`, `1024`, `1536`, `2048`.
     */
    public readonly sslDhBits!: pulumi.Output<string>;
    /**
     * Enable/disable the explicit Web proxy for HTTP and HTTPS session. Valid values: `enable`, `disable`.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * Enable/disable strict guest user checking by the explicit web proxy. Valid values: `enable`, `disable`.
     */
    public readonly strictGuest!: pulumi.Output<string>;
    /**
     * Enable/disable logging timed-out authentication requests. Valid values: `enable`, `disable`.
     */
    public readonly traceAuthNoRsp!: pulumi.Output<string>;
    /**
     * Either reject unknown HTTP traffic as malformed or handle unknown HTTP traffic as best as the proxy server can.
     */
    public readonly unknownHttpVersion!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a Explicit resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ExplicitArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ExplicitArgs | ExplicitState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ExplicitState | undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["ftpIncomingPort"] = state ? state.ftpIncomingPort : undefined;
            resourceInputs["ftpOverHttp"] = state ? state.ftpOverHttp : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["httpConnectionMode"] = state ? state.httpConnectionMode : undefined;
            resourceInputs["httpIncomingPort"] = state ? state.httpIncomingPort : undefined;
            resourceInputs["httpsIncomingPort"] = state ? state.httpsIncomingPort : undefined;
            resourceInputs["httpsReplacementMessage"] = state ? state.httpsReplacementMessage : undefined;
            resourceInputs["incomingIp"] = state ? state.incomingIp : undefined;
            resourceInputs["incomingIp6"] = state ? state.incomingIp6 : undefined;
            resourceInputs["ipv6Status"] = state ? state.ipv6Status : undefined;
            resourceInputs["messageUponServerError"] = state ? state.messageUponServerError : undefined;
            resourceInputs["outgoingIp"] = state ? state.outgoingIp : undefined;
            resourceInputs["outgoingIp6"] = state ? state.outgoingIp6 : undefined;
            resourceInputs["pacFileData"] = state ? state.pacFileData : undefined;
            resourceInputs["pacFileName"] = state ? state.pacFileName : undefined;
            resourceInputs["pacFileServerPort"] = state ? state.pacFileServerPort : undefined;
            resourceInputs["pacFileServerStatus"] = state ? state.pacFileServerStatus : undefined;
            resourceInputs["pacFileThroughHttps"] = state ? state.pacFileThroughHttps : undefined;
            resourceInputs["pacFileUrl"] = state ? state.pacFileUrl : undefined;
            resourceInputs["pacPolicies"] = state ? state.pacPolicies : undefined;
            resourceInputs["prefDnsResult"] = state ? state.prefDnsResult : undefined;
            resourceInputs["realm"] = state ? state.realm : undefined;
            resourceInputs["secDefaultAction"] = state ? state.secDefaultAction : undefined;
            resourceInputs["secureWebProxy"] = state ? state.secureWebProxy : undefined;
            resourceInputs["secureWebProxyCerts"] = state ? state.secureWebProxyCerts : undefined;
            resourceInputs["socks"] = state ? state.socks : undefined;
            resourceInputs["socksIncomingPort"] = state ? state.socksIncomingPort : undefined;
            resourceInputs["sslAlgorithm"] = state ? state.sslAlgorithm : undefined;
            resourceInputs["sslDhBits"] = state ? state.sslDhBits : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["strictGuest"] = state ? state.strictGuest : undefined;
            resourceInputs["traceAuthNoRsp"] = state ? state.traceAuthNoRsp : undefined;
            resourceInputs["unknownHttpVersion"] = state ? state.unknownHttpVersion : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as ExplicitArgs | undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["ftpIncomingPort"] = args ? args.ftpIncomingPort : undefined;
            resourceInputs["ftpOverHttp"] = args ? args.ftpOverHttp : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["httpConnectionMode"] = args ? args.httpConnectionMode : undefined;
            resourceInputs["httpIncomingPort"] = args ? args.httpIncomingPort : undefined;
            resourceInputs["httpsIncomingPort"] = args ? args.httpsIncomingPort : undefined;
            resourceInputs["httpsReplacementMessage"] = args ? args.httpsReplacementMessage : undefined;
            resourceInputs["incomingIp"] = args ? args.incomingIp : undefined;
            resourceInputs["incomingIp6"] = args ? args.incomingIp6 : undefined;
            resourceInputs["ipv6Status"] = args ? args.ipv6Status : undefined;
            resourceInputs["messageUponServerError"] = args ? args.messageUponServerError : undefined;
            resourceInputs["outgoingIp"] = args ? args.outgoingIp : undefined;
            resourceInputs["outgoingIp6"] = args ? args.outgoingIp6 : undefined;
            resourceInputs["pacFileData"] = args ? args.pacFileData : undefined;
            resourceInputs["pacFileName"] = args ? args.pacFileName : undefined;
            resourceInputs["pacFileServerPort"] = args ? args.pacFileServerPort : undefined;
            resourceInputs["pacFileServerStatus"] = args ? args.pacFileServerStatus : undefined;
            resourceInputs["pacFileThroughHttps"] = args ? args.pacFileThroughHttps : undefined;
            resourceInputs["pacFileUrl"] = args ? args.pacFileUrl : undefined;
            resourceInputs["pacPolicies"] = args ? args.pacPolicies : undefined;
            resourceInputs["prefDnsResult"] = args ? args.prefDnsResult : undefined;
            resourceInputs["realm"] = args ? args.realm : undefined;
            resourceInputs["secDefaultAction"] = args ? args.secDefaultAction : undefined;
            resourceInputs["secureWebProxy"] = args ? args.secureWebProxy : undefined;
            resourceInputs["secureWebProxyCerts"] = args ? args.secureWebProxyCerts : undefined;
            resourceInputs["socks"] = args ? args.socks : undefined;
            resourceInputs["socksIncomingPort"] = args ? args.socksIncomingPort : undefined;
            resourceInputs["sslAlgorithm"] = args ? args.sslAlgorithm : undefined;
            resourceInputs["sslDhBits"] = args ? args.sslDhBits : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["strictGuest"] = args ? args.strictGuest : undefined;
            resourceInputs["traceAuthNoRsp"] = args ? args.traceAuthNoRsp : undefined;
            resourceInputs["unknownHttpVersion"] = args ? args.unknownHttpVersion : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Explicit.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Explicit resources.
 */
export interface ExplicitState {
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Accept incoming FTP-over-HTTP requests on one or more ports (0 - 65535, default = 0; use the same as HTTP).
     */
    ftpIncomingPort?: pulumi.Input<string>;
    /**
     * Enable to proxy FTP-over-HTTP sessions sent from a web browser. Valid values: `enable`, `disable`.
     */
    ftpOverHttp?: pulumi.Input<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * HTTP connection mode (default = static). Valid values: `static`, `multiplex`, `serverpool`.
     */
    httpConnectionMode?: pulumi.Input<string>;
    /**
     * Accept incoming HTTP requests on one or more ports (0 - 65535, default = 8080).
     */
    httpIncomingPort?: pulumi.Input<string>;
    /**
     * Accept incoming HTTPS requests on one or more ports (0 - 65535, default = 0, use the same as HTTP).
     */
    httpsIncomingPort?: pulumi.Input<string>;
    /**
     * Enable/disable sending the client a replacement message for HTTPS requests. Valid values: `enable`, `disable`.
     */
    httpsReplacementMessage?: pulumi.Input<string>;
    /**
     * Restrict the explicit HTTP proxy to only accept sessions from this IP address. An interface must have this IP address.
     */
    incomingIp?: pulumi.Input<string>;
    /**
     * Restrict the explicit web proxy to only accept sessions from this IPv6 address. An interface must have this IPv6 address.
     */
    incomingIp6?: pulumi.Input<string>;
    /**
     * Enable/disable allowing an IPv6 web proxy destination in policies and all IPv6 related entries in this command. Valid values: `enable`, `disable`.
     */
    ipv6Status?: pulumi.Input<string>;
    /**
     * Enable/disable displaying a replacement message when a server error is detected. Valid values: `enable`, `disable`.
     */
    messageUponServerError?: pulumi.Input<string>;
    /**
     * Outgoing HTTP requests will have this IP address as their source address. An interface must have this IP address.
     */
    outgoingIp?: pulumi.Input<string>;
    /**
     * Outgoing HTTP requests will leave this IPv6. Multiple interfaces can be specified. Interfaces must have these IPv6 addresses.
     */
    outgoingIp6?: pulumi.Input<string>;
    /**
     * PAC file contents enclosed in quotes (maximum of 256K bytes).
     */
    pacFileData?: pulumi.Input<string>;
    /**
     * Pac file name.
     */
    pacFileName?: pulumi.Input<string>;
    /**
     * Port number that PAC traffic from client web browsers uses to connect to the explicit web proxy (0 - 65535, default = 0; use the same as HTTP).
     */
    pacFileServerPort?: pulumi.Input<string>;
    /**
     * Enable/disable Proxy Auto-Configuration (PAC) for users of this explicit proxy profile. Valid values: `enable`, `disable`.
     */
    pacFileServerStatus?: pulumi.Input<string>;
    /**
     * Enable/disable to get Proxy Auto-Configuration (PAC) through HTTPS. Valid values: `enable`, `disable`.
     */
    pacFileThroughHttps?: pulumi.Input<string>;
    /**
     * PAC file access URL.
     */
    pacFileUrl?: pulumi.Input<string>;
    /**
     * PAC policies. The structure of `pacPolicy` block is documented below.
     */
    pacPolicies?: pulumi.Input<pulumi.Input<inputs.webproxy.ExplicitPacPolicy>[]>;
    /**
     * Prefer resolving addresses using the configured IPv4 or IPv6 DNS server (default = ipv4). Valid values: `ipv4`, `ipv6`.
     */
    prefDnsResult?: pulumi.Input<string>;
    /**
     * Authentication realm used to identify the explicit web proxy (maximum of 63 characters).
     */
    realm?: pulumi.Input<string>;
    /**
     * Accept or deny explicit web proxy sessions when no web proxy firewall policy exists. Valid values: `accept`, `deny`.
     */
    secDefaultAction?: pulumi.Input<string>;
    /**
     * Enable/disable/require the secure web proxy for HTTP and HTTPS session. Valid values: `disable`, `enable`, `secure`.
     */
    secureWebProxy?: pulumi.Input<string>;
    /**
     * Name of certificates for secure web proxy. The structure of `secureWebProxyCert` block is documented below.
     */
    secureWebProxyCerts?: pulumi.Input<pulumi.Input<inputs.webproxy.ExplicitSecureWebProxyCert>[]>;
    /**
     * Enable/disable the SOCKS proxy. Valid values: `enable`, `disable`.
     */
    socks?: pulumi.Input<string>;
    /**
     * Accept incoming SOCKS proxy requests on one or more ports (0 - 65535, default = 0; use the same as HTTP).
     */
    socksIncomingPort?: pulumi.Input<string>;
    /**
     * Relative strength of encryption algorithms accepted in HTTPS deep scan: high, medium, or low. Valid values: `high`, `medium`, `low`.
     */
    sslAlgorithm?: pulumi.Input<string>;
    /**
     * Bit-size of Diffie-Hellman (DH) prime used in DHE-RSA negotiation (default = 2048). Valid values: `768`, `1024`, `1536`, `2048`.
     */
    sslDhBits?: pulumi.Input<string>;
    /**
     * Enable/disable the explicit Web proxy for HTTP and HTTPS session. Valid values: `enable`, `disable`.
     */
    status?: pulumi.Input<string>;
    /**
     * Enable/disable strict guest user checking by the explicit web proxy. Valid values: `enable`, `disable`.
     */
    strictGuest?: pulumi.Input<string>;
    /**
     * Enable/disable logging timed-out authentication requests. Valid values: `enable`, `disable`.
     */
    traceAuthNoRsp?: pulumi.Input<string>;
    /**
     * Either reject unknown HTTP traffic as malformed or handle unknown HTTP traffic as best as the proxy server can.
     */
    unknownHttpVersion?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Explicit resource.
 */
export interface ExplicitArgs {
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Accept incoming FTP-over-HTTP requests on one or more ports (0 - 65535, default = 0; use the same as HTTP).
     */
    ftpIncomingPort?: pulumi.Input<string>;
    /**
     * Enable to proxy FTP-over-HTTP sessions sent from a web browser. Valid values: `enable`, `disable`.
     */
    ftpOverHttp?: pulumi.Input<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * HTTP connection mode (default = static). Valid values: `static`, `multiplex`, `serverpool`.
     */
    httpConnectionMode?: pulumi.Input<string>;
    /**
     * Accept incoming HTTP requests on one or more ports (0 - 65535, default = 8080).
     */
    httpIncomingPort?: pulumi.Input<string>;
    /**
     * Accept incoming HTTPS requests on one or more ports (0 - 65535, default = 0, use the same as HTTP).
     */
    httpsIncomingPort?: pulumi.Input<string>;
    /**
     * Enable/disable sending the client a replacement message for HTTPS requests. Valid values: `enable`, `disable`.
     */
    httpsReplacementMessage?: pulumi.Input<string>;
    /**
     * Restrict the explicit HTTP proxy to only accept sessions from this IP address. An interface must have this IP address.
     */
    incomingIp?: pulumi.Input<string>;
    /**
     * Restrict the explicit web proxy to only accept sessions from this IPv6 address. An interface must have this IPv6 address.
     */
    incomingIp6?: pulumi.Input<string>;
    /**
     * Enable/disable allowing an IPv6 web proxy destination in policies and all IPv6 related entries in this command. Valid values: `enable`, `disable`.
     */
    ipv6Status?: pulumi.Input<string>;
    /**
     * Enable/disable displaying a replacement message when a server error is detected. Valid values: `enable`, `disable`.
     */
    messageUponServerError?: pulumi.Input<string>;
    /**
     * Outgoing HTTP requests will have this IP address as their source address. An interface must have this IP address.
     */
    outgoingIp?: pulumi.Input<string>;
    /**
     * Outgoing HTTP requests will leave this IPv6. Multiple interfaces can be specified. Interfaces must have these IPv6 addresses.
     */
    outgoingIp6?: pulumi.Input<string>;
    /**
     * PAC file contents enclosed in quotes (maximum of 256K bytes).
     */
    pacFileData?: pulumi.Input<string>;
    /**
     * Pac file name.
     */
    pacFileName?: pulumi.Input<string>;
    /**
     * Port number that PAC traffic from client web browsers uses to connect to the explicit web proxy (0 - 65535, default = 0; use the same as HTTP).
     */
    pacFileServerPort?: pulumi.Input<string>;
    /**
     * Enable/disable Proxy Auto-Configuration (PAC) for users of this explicit proxy profile. Valid values: `enable`, `disable`.
     */
    pacFileServerStatus?: pulumi.Input<string>;
    /**
     * Enable/disable to get Proxy Auto-Configuration (PAC) through HTTPS. Valid values: `enable`, `disable`.
     */
    pacFileThroughHttps?: pulumi.Input<string>;
    /**
     * PAC file access URL.
     */
    pacFileUrl?: pulumi.Input<string>;
    /**
     * PAC policies. The structure of `pacPolicy` block is documented below.
     */
    pacPolicies?: pulumi.Input<pulumi.Input<inputs.webproxy.ExplicitPacPolicy>[]>;
    /**
     * Prefer resolving addresses using the configured IPv4 or IPv6 DNS server (default = ipv4). Valid values: `ipv4`, `ipv6`.
     */
    prefDnsResult?: pulumi.Input<string>;
    /**
     * Authentication realm used to identify the explicit web proxy (maximum of 63 characters).
     */
    realm?: pulumi.Input<string>;
    /**
     * Accept or deny explicit web proxy sessions when no web proxy firewall policy exists. Valid values: `accept`, `deny`.
     */
    secDefaultAction?: pulumi.Input<string>;
    /**
     * Enable/disable/require the secure web proxy for HTTP and HTTPS session. Valid values: `disable`, `enable`, `secure`.
     */
    secureWebProxy?: pulumi.Input<string>;
    /**
     * Name of certificates for secure web proxy. The structure of `secureWebProxyCert` block is documented below.
     */
    secureWebProxyCerts?: pulumi.Input<pulumi.Input<inputs.webproxy.ExplicitSecureWebProxyCert>[]>;
    /**
     * Enable/disable the SOCKS proxy. Valid values: `enable`, `disable`.
     */
    socks?: pulumi.Input<string>;
    /**
     * Accept incoming SOCKS proxy requests on one or more ports (0 - 65535, default = 0; use the same as HTTP).
     */
    socksIncomingPort?: pulumi.Input<string>;
    /**
     * Relative strength of encryption algorithms accepted in HTTPS deep scan: high, medium, or low. Valid values: `high`, `medium`, `low`.
     */
    sslAlgorithm?: pulumi.Input<string>;
    /**
     * Bit-size of Diffie-Hellman (DH) prime used in DHE-RSA negotiation (default = 2048). Valid values: `768`, `1024`, `1536`, `2048`.
     */
    sslDhBits?: pulumi.Input<string>;
    /**
     * Enable/disable the explicit Web proxy for HTTP and HTTPS session. Valid values: `enable`, `disable`.
     */
    status?: pulumi.Input<string>;
    /**
     * Enable/disable strict guest user checking by the explicit web proxy. Valid values: `enable`, `disable`.
     */
    strictGuest?: pulumi.Input<string>;
    /**
     * Enable/disable logging timed-out authentication requests. Valid values: `enable`, `disable`.
     */
    traceAuthNoRsp?: pulumi.Input<string>;
    /**
     * Either reject unknown HTTP traffic as malformed or handle unknown HTTP traffic as best as the proxy server can.
     */
    unknownHttpVersion?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
