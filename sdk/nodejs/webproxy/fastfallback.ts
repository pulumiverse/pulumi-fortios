// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Proxy destination connection fast-fallback. Applies to FortiOS Version `>= 7.4.1`.
 *
 * ## Import
 *
 * WebProxy FastFallback can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:webproxy/fastfallback:Fastfallback labelname {{name}}
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:webproxy/fastfallback:Fastfallback labelname {{name}}
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Fastfallback extends pulumi.CustomResource {
    /**
     * Get an existing Fastfallback resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FastfallbackState, opts?: pulumi.CustomResourceOptions): Fastfallback {
        return new Fastfallback(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:webproxy/fastfallback:Fastfallback';

    /**
     * Returns true if the given object is an instance of Fastfallback.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Fastfallback {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Fastfallback.__pulumiType;
    }

    /**
     * Connection mode for multiple destinations. Valid values: `sequentially`, `simultaneously`.
     */
    public readonly connectionMode!: pulumi.Output<string>;
    /**
     * Number of milliseconds to wait before starting another connection (200 - 1800000, default = 200). For sequential connection-mode only.
     */
    public readonly connectionTimeout!: pulumi.Output<number>;
    /**
     * Configure a name for the fast-fallback entry.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Connection protocols for multiple destinations. Valid values: `IPv4-first`, `IPv6-first`, `IPv4-only`, `IPv6-only`.
     */
    public readonly protocol!: pulumi.Output<string>;
    /**
     * Enable/disable the fast-fallback entry. Valid values: `enable`, `disable`.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a Fastfallback resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FastfallbackArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FastfallbackArgs | FastfallbackState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FastfallbackState | undefined;
            resourceInputs["connectionMode"] = state ? state.connectionMode : undefined;
            resourceInputs["connectionTimeout"] = state ? state.connectionTimeout : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as FastfallbackArgs | undefined;
            resourceInputs["connectionMode"] = args ? args.connectionMode : undefined;
            resourceInputs["connectionTimeout"] = args ? args.connectionTimeout : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Fastfallback.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Fastfallback resources.
 */
export interface FastfallbackState {
    /**
     * Connection mode for multiple destinations. Valid values: `sequentially`, `simultaneously`.
     */
    connectionMode?: pulumi.Input<string>;
    /**
     * Number of milliseconds to wait before starting another connection (200 - 1800000, default = 200). For sequential connection-mode only.
     */
    connectionTimeout?: pulumi.Input<number>;
    /**
     * Configure a name for the fast-fallback entry.
     */
    name?: pulumi.Input<string>;
    /**
     * Connection protocols for multiple destinations. Valid values: `IPv4-first`, `IPv6-first`, `IPv4-only`, `IPv6-only`.
     */
    protocol?: pulumi.Input<string>;
    /**
     * Enable/disable the fast-fallback entry. Valid values: `enable`, `disable`.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Fastfallback resource.
 */
export interface FastfallbackArgs {
    /**
     * Connection mode for multiple destinations. Valid values: `sequentially`, `simultaneously`.
     */
    connectionMode?: pulumi.Input<string>;
    /**
     * Number of milliseconds to wait before starting another connection (200 - 1800000, default = 200). For sequential connection-mode only.
     */
    connectionTimeout?: pulumi.Input<number>;
    /**
     * Configure a name for the fast-fallback entry.
     */
    name?: pulumi.Input<string>;
    /**
     * Connection protocols for multiple destinations. Valid values: `IPv4-first`, `IPv6-first`, `IPv4-only`, `IPv6-only`.
     */
    protocol?: pulumi.Input<string>;
    /**
     * Enable/disable the fast-fallback entry. Valid values: `enable`, `disable`.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
