// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to configure IPv4 IP address pools of FortiOS.
 *
 * !> **Warning:** The resource will be deprecated and replaced by new resource `fortios.firewall.Ippool`, we recommend that you use the new resource.
 *
 * ## Example Usage
 *
 * ### Overload Ippool
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumiverse/fortios";
 *
 * const s1 = new fortios.firewall.ObjectIppool("s1", {
 *     arpReply: "enable",
 *     comments: "fdsaf",
 *     endip: "22.0.0.0",
 *     startip: "11.0.0.0",
 *     type: "overload",
 * });
 * ```
 *
 * ### One-To-One Ippool
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumiverse/fortios";
 *
 * const s2 = new fortios.firewall.ObjectIppool("s2", {
 *     arpReply: "enable",
 *     comments: "fdsaf",
 *     endip: "222.0.0.0",
 *     startip: "121.0.0.0",
 *     type: "one-to-one",
 * });
 * ```
 */
export class ObjectIppool extends pulumi.CustomResource {
    /**
     * Get an existing ObjectIppool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectIppoolState, opts?: pulumi.CustomResourceOptions): ObjectIppool {
        return new ObjectIppool(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:firewall/objectIppool:ObjectIppool';

    /**
     * Returns true if the given object is an instance of ObjectIppool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectIppool {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectIppool.__pulumiType;
    }

    /**
     * Enable/disable replying to ARP requests when an IP Pool is added to a policy.
     */
    public readonly arpReply!: pulumi.Output<string>;
    /**
     * Comment.
     */
    public readonly comments!: pulumi.Output<string | undefined>;
    /**
     * Final IPv4 address (inclusive) in the range for the address pool (format xxx.xxx.xxx.xxx).
     */
    public readonly endip!: pulumi.Output<string>;
    /**
     * IP pool name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * First IPv4 address (inclusive) in the range for the address pool (format xxx.xxx.xxx.xxx).
     */
    public readonly startip!: pulumi.Output<string>;
    /**
     * IP pool type(Support overload and one-to-one).
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a ObjectIppool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ObjectIppoolArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectIppoolArgs | ObjectIppoolState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectIppoolState | undefined;
            resourceInputs["arpReply"] = state ? state.arpReply : undefined;
            resourceInputs["comments"] = state ? state.comments : undefined;
            resourceInputs["endip"] = state ? state.endip : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["startip"] = state ? state.startip : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as ObjectIppoolArgs | undefined;
            if ((!args || args.endip === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endip'");
            }
            if ((!args || args.startip === undefined) && !opts.urn) {
                throw new Error("Missing required property 'startip'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["arpReply"] = args ? args.arpReply : undefined;
            resourceInputs["comments"] = args ? args.comments : undefined;
            resourceInputs["endip"] = args ? args.endip : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["startip"] = args ? args.startip : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectIppool.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ObjectIppool resources.
 */
export interface ObjectIppoolState {
    /**
     * Enable/disable replying to ARP requests when an IP Pool is added to a policy.
     */
    arpReply?: pulumi.Input<string>;
    /**
     * Comment.
     */
    comments?: pulumi.Input<string>;
    /**
     * Final IPv4 address (inclusive) in the range for the address pool (format xxx.xxx.xxx.xxx).
     */
    endip?: pulumi.Input<string>;
    /**
     * IP pool name.
     */
    name?: pulumi.Input<string>;
    /**
     * First IPv4 address (inclusive) in the range for the address pool (format xxx.xxx.xxx.xxx).
     */
    startip?: pulumi.Input<string>;
    /**
     * IP pool type(Support overload and one-to-one).
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectIppool resource.
 */
export interface ObjectIppoolArgs {
    /**
     * Enable/disable replying to ARP requests when an IP Pool is added to a policy.
     */
    arpReply?: pulumi.Input<string>;
    /**
     * Comment.
     */
    comments?: pulumi.Input<string>;
    /**
     * Final IPv4 address (inclusive) in the range for the address pool (format xxx.xxx.xxx.xxx).
     */
    endip: pulumi.Input<string>;
    /**
     * IP pool name.
     */
    name?: pulumi.Input<string>;
    /**
     * First IPv4 address (inclusive) in the range for the address pool (format xxx.xxx.xxx.xxx).
     */
    startip: pulumi.Input<string>;
    /**
     * IP pool type(Support overload and one-to-one).
     */
    type: pulumi.Input<string>;
}
