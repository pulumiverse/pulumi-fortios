// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Configure IPv4 address groups.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumiverse/fortios";
 *
 * const trname1 = new fortios.firewall.Address("trname1", {
 *     allowRouting: "disable",
 *     cacheTtl: 0,
 *     color: 0,
 *     endIp: "255.0.0.0",
 *     startIp: "12.0.0.0",
 *     subnet: "12.0.0.0 255.0.0.0",
 *     type: "ipmask",
 *     visibility: "enable",
 *     wildcard: "12.0.0.0 255.0.0.0",
 * });
 * const trname = new fortios.firewall.Addrgrp("trname", {
 *     allowRouting: "disable",
 *     color: 0,
 *     exclude: "disable",
 *     visibility: "enable",
 *     members: [{
 *         name: trname1.name,
 *     }],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * Firewall Addrgrp can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:firewall/addrgrp:Addrgrp labelname {{name}}
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:firewall/addrgrp:Addrgrp labelname {{name}}
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Addrgrp extends pulumi.CustomResource {
    /**
     * Get an existing Addrgrp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AddrgrpState, opts?: pulumi.CustomResourceOptions): Addrgrp {
        return new Addrgrp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:firewall/addrgrp:Addrgrp';

    /**
     * Returns true if the given object is an instance of Addrgrp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Addrgrp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Addrgrp.__pulumiType;
    }

    /**
     * Enable/disable use of this group in the static route configuration. Valid values: `enable`, `disable`.
     */
    public readonly allowRouting!: pulumi.Output<string>;
    /**
     * Address group category. Valid values: `default`, `ztna-ems-tag`, `ztna-geo-tag`.
     */
    public readonly category!: pulumi.Output<string>;
    /**
     * Color of icon on the GUI.
     */
    public readonly color!: pulumi.Output<number>;
    /**
     * Comment.
     */
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * Enable/disable address exclusion. Valid values: `enable`, `disable`.
     */
    public readonly exclude!: pulumi.Output<string>;
    /**
     * Address exclusion member. The structure of `excludeMember` block is documented below.
     */
    public readonly excludeMembers!: pulumi.Output<outputs.firewall.AddrgrpExcludeMember[] | undefined>;
    /**
     * Security Fabric global object setting. Valid values: `enable`, `disable`.
     */
    public readonly fabricObject!: pulumi.Output<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    /**
     * Address objects contained within the group. The structure of `member` block is documented below.
     */
    public readonly members!: pulumi.Output<outputs.firewall.AddrgrpMember[]>;
    /**
     * Address group name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Config object tagging. The structure of `tagging` block is documented below.
     */
    public readonly taggings!: pulumi.Output<outputs.firewall.AddrgrpTagging[] | undefined>;
    /**
     * Address group type. Valid values: `default`, `folder`.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
     */
    public readonly uuid!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;
    /**
     * Enable/disable address visibility in the GUI. Valid values: `enable`, `disable`.
     */
    public readonly visibility!: pulumi.Output<string>;

    /**
     * Create a Addrgrp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AddrgrpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AddrgrpArgs | AddrgrpState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AddrgrpState | undefined;
            resourceInputs["allowRouting"] = state ? state.allowRouting : undefined;
            resourceInputs["category"] = state ? state.category : undefined;
            resourceInputs["color"] = state ? state.color : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["exclude"] = state ? state.exclude : undefined;
            resourceInputs["excludeMembers"] = state ? state.excludeMembers : undefined;
            resourceInputs["fabricObject"] = state ? state.fabricObject : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["members"] = state ? state.members : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["taggings"] = state ? state.taggings : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
            resourceInputs["visibility"] = state ? state.visibility : undefined;
        } else {
            const args = argsOrState as AddrgrpArgs | undefined;
            if ((!args || args.members === undefined) && !opts.urn) {
                throw new Error("Missing required property 'members'");
            }
            resourceInputs["allowRouting"] = args ? args.allowRouting : undefined;
            resourceInputs["category"] = args ? args.category : undefined;
            resourceInputs["color"] = args ? args.color : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["exclude"] = args ? args.exclude : undefined;
            resourceInputs["excludeMembers"] = args ? args.excludeMembers : undefined;
            resourceInputs["fabricObject"] = args ? args.fabricObject : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["members"] = args ? args.members : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["taggings"] = args ? args.taggings : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
            resourceInputs["visibility"] = args ? args.visibility : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Addrgrp.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Addrgrp resources.
 */
export interface AddrgrpState {
    /**
     * Enable/disable use of this group in the static route configuration. Valid values: `enable`, `disable`.
     */
    allowRouting?: pulumi.Input<string>;
    /**
     * Address group category. Valid values: `default`, `ztna-ems-tag`, `ztna-geo-tag`.
     */
    category?: pulumi.Input<string>;
    /**
     * Color of icon on the GUI.
     */
    color?: pulumi.Input<number>;
    /**
     * Comment.
     */
    comment?: pulumi.Input<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Enable/disable address exclusion. Valid values: `enable`, `disable`.
     */
    exclude?: pulumi.Input<string>;
    /**
     * Address exclusion member. The structure of `excludeMember` block is documented below.
     */
    excludeMembers?: pulumi.Input<pulumi.Input<inputs.firewall.AddrgrpExcludeMember>[]>;
    /**
     * Security Fabric global object setting. Valid values: `enable`, `disable`.
     */
    fabricObject?: pulumi.Input<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * Address objects contained within the group. The structure of `member` block is documented below.
     */
    members?: pulumi.Input<pulumi.Input<inputs.firewall.AddrgrpMember>[]>;
    /**
     * Address group name.
     */
    name?: pulumi.Input<string>;
    /**
     * Config object tagging. The structure of `tagging` block is documented below.
     */
    taggings?: pulumi.Input<pulumi.Input<inputs.firewall.AddrgrpTagging>[]>;
    /**
     * Address group type. Valid values: `default`, `folder`.
     */
    type?: pulumi.Input<string>;
    /**
     * Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
     */
    uuid?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Enable/disable address visibility in the GUI. Valid values: `enable`, `disable`.
     */
    visibility?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Addrgrp resource.
 */
export interface AddrgrpArgs {
    /**
     * Enable/disable use of this group in the static route configuration. Valid values: `enable`, `disable`.
     */
    allowRouting?: pulumi.Input<string>;
    /**
     * Address group category. Valid values: `default`, `ztna-ems-tag`, `ztna-geo-tag`.
     */
    category?: pulumi.Input<string>;
    /**
     * Color of icon on the GUI.
     */
    color?: pulumi.Input<number>;
    /**
     * Comment.
     */
    comment?: pulumi.Input<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Enable/disable address exclusion. Valid values: `enable`, `disable`.
     */
    exclude?: pulumi.Input<string>;
    /**
     * Address exclusion member. The structure of `excludeMember` block is documented below.
     */
    excludeMembers?: pulumi.Input<pulumi.Input<inputs.firewall.AddrgrpExcludeMember>[]>;
    /**
     * Security Fabric global object setting. Valid values: `enable`, `disable`.
     */
    fabricObject?: pulumi.Input<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * Address objects contained within the group. The structure of `member` block is documented below.
     */
    members: pulumi.Input<pulumi.Input<inputs.firewall.AddrgrpMember>[]>;
    /**
     * Address group name.
     */
    name?: pulumi.Input<string>;
    /**
     * Config object tagging. The structure of `tagging` block is documented below.
     */
    taggings?: pulumi.Input<pulumi.Input<inputs.firewall.AddrgrpTagging>[]>;
    /**
     * Address group type. Valid values: `default`, `folder`.
     */
    type?: pulumi.Input<string>;
    /**
     * Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
     */
    uuid?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Enable/disable address visibility in the GUI. Valid values: `enable`, `disable`.
     */
    visibility?: pulumi.Input<string>;
}
