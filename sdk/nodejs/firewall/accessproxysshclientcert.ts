// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Configure Access Proxy SSH client certificate. Applies to FortiOS Version `>= 7.0.1`.
 *
 * ## Import
 *
 * Firewall AccessProxySshClientCert can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:firewall/accessproxysshclientcert:Accessproxysshclientcert labelname {{name}}
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:firewall/accessproxysshclientcert:Accessproxysshclientcert labelname {{name}}
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Accessproxysshclientcert extends pulumi.CustomResource {
    /**
     * Get an existing Accessproxysshclientcert resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccessproxysshclientcertState, opts?: pulumi.CustomResourceOptions): Accessproxysshclientcert {
        return new Accessproxysshclientcert(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:firewall/accessproxysshclientcert:Accessproxysshclientcert';

    /**
     * Returns true if the given object is an instance of Accessproxysshclientcert.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Accessproxysshclientcert {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Accessproxysshclientcert.__pulumiType;
    }

    /**
     * Name of the SSH server public key authentication CA.
     */
    public readonly authCa!: pulumi.Output<string>;
    /**
     * Configure certificate extension for user certificate. The structure of `certExtension` block is documented below.
     */
    public readonly certExtensions!: pulumi.Output<outputs.firewall.AccessproxysshclientcertCertExtension[] | undefined>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    /**
     * SSH client certificate name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Enable/disable appending permit-agent-forwarding certificate extension. Valid values: `enable`, `disable`.
     */
    public readonly permitAgentForwarding!: pulumi.Output<string>;
    /**
     * Enable/disable appending permit-port-forwarding certificate extension. Valid values: `enable`, `disable`.
     */
    public readonly permitPortForwarding!: pulumi.Output<string>;
    /**
     * Enable/disable appending permit-pty certificate extension. Valid values: `enable`, `disable`.
     */
    public readonly permitPty!: pulumi.Output<string>;
    /**
     * Enable/disable appending permit-user-rc certificate extension. Valid values: `enable`, `disable`.
     */
    public readonly permitUserRc!: pulumi.Output<string>;
    /**
     * Enable/disable appending permit-x11-forwarding certificate extension. Valid values: `enable`, `disable`.
     */
    public readonly permitX11Forwarding!: pulumi.Output<string>;
    /**
     * Enable/disable appending source-address certificate critical option. This option ensure certificate only accepted from FortiGate source address. Valid values: `enable`, `disable`.
     */
    public readonly sourceAddress!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a Accessproxysshclientcert resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AccessproxysshclientcertArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccessproxysshclientcertArgs | AccessproxysshclientcertState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccessproxysshclientcertState | undefined;
            resourceInputs["authCa"] = state ? state.authCa : undefined;
            resourceInputs["certExtensions"] = state ? state.certExtensions : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["permitAgentForwarding"] = state ? state.permitAgentForwarding : undefined;
            resourceInputs["permitPortForwarding"] = state ? state.permitPortForwarding : undefined;
            resourceInputs["permitPty"] = state ? state.permitPty : undefined;
            resourceInputs["permitUserRc"] = state ? state.permitUserRc : undefined;
            resourceInputs["permitX11Forwarding"] = state ? state.permitX11Forwarding : undefined;
            resourceInputs["sourceAddress"] = state ? state.sourceAddress : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as AccessproxysshclientcertArgs | undefined;
            resourceInputs["authCa"] = args ? args.authCa : undefined;
            resourceInputs["certExtensions"] = args ? args.certExtensions : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["permitAgentForwarding"] = args ? args.permitAgentForwarding : undefined;
            resourceInputs["permitPortForwarding"] = args ? args.permitPortForwarding : undefined;
            resourceInputs["permitPty"] = args ? args.permitPty : undefined;
            resourceInputs["permitUserRc"] = args ? args.permitUserRc : undefined;
            resourceInputs["permitX11Forwarding"] = args ? args.permitX11Forwarding : undefined;
            resourceInputs["sourceAddress"] = args ? args.sourceAddress : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Accessproxysshclientcert.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Accessproxysshclientcert resources.
 */
export interface AccessproxysshclientcertState {
    /**
     * Name of the SSH server public key authentication CA.
     */
    authCa?: pulumi.Input<string>;
    /**
     * Configure certificate extension for user certificate. The structure of `certExtension` block is documented below.
     */
    certExtensions?: pulumi.Input<pulumi.Input<inputs.firewall.AccessproxysshclientcertCertExtension>[]>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * SSH client certificate name.
     */
    name?: pulumi.Input<string>;
    /**
     * Enable/disable appending permit-agent-forwarding certificate extension. Valid values: `enable`, `disable`.
     */
    permitAgentForwarding?: pulumi.Input<string>;
    /**
     * Enable/disable appending permit-port-forwarding certificate extension. Valid values: `enable`, `disable`.
     */
    permitPortForwarding?: pulumi.Input<string>;
    /**
     * Enable/disable appending permit-pty certificate extension. Valid values: `enable`, `disable`.
     */
    permitPty?: pulumi.Input<string>;
    /**
     * Enable/disable appending permit-user-rc certificate extension. Valid values: `enable`, `disable`.
     */
    permitUserRc?: pulumi.Input<string>;
    /**
     * Enable/disable appending permit-x11-forwarding certificate extension. Valid values: `enable`, `disable`.
     */
    permitX11Forwarding?: pulumi.Input<string>;
    /**
     * Enable/disable appending source-address certificate critical option. This option ensure certificate only accepted from FortiGate source address. Valid values: `enable`, `disable`.
     */
    sourceAddress?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Accessproxysshclientcert resource.
 */
export interface AccessproxysshclientcertArgs {
    /**
     * Name of the SSH server public key authentication CA.
     */
    authCa?: pulumi.Input<string>;
    /**
     * Configure certificate extension for user certificate. The structure of `certExtension` block is documented below.
     */
    certExtensions?: pulumi.Input<pulumi.Input<inputs.firewall.AccessproxysshclientcertCertExtension>[]>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * SSH client certificate name.
     */
    name?: pulumi.Input<string>;
    /**
     * Enable/disable appending permit-agent-forwarding certificate extension. Valid values: `enable`, `disable`.
     */
    permitAgentForwarding?: pulumi.Input<string>;
    /**
     * Enable/disable appending permit-port-forwarding certificate extension. Valid values: `enable`, `disable`.
     */
    permitPortForwarding?: pulumi.Input<string>;
    /**
     * Enable/disable appending permit-pty certificate extension. Valid values: `enable`, `disable`.
     */
    permitPty?: pulumi.Input<string>;
    /**
     * Enable/disable appending permit-user-rc certificate extension. Valid values: `enable`, `disable`.
     */
    permitUserRc?: pulumi.Input<string>;
    /**
     * Enable/disable appending permit-x11-forwarding certificate extension. Valid values: `enable`, `disable`.
     */
    permitX11Forwarding?: pulumi.Input<string>;
    /**
     * Enable/disable appending source-address certificate critical option. This option ensure certificate only accepted from FortiGate source address. Valid values: `enable`, `disable`.
     */
    sourceAddress?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
