// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Configure on-demand packet sniffer. Applies to FortiOS Version `>= 7.4.4`.
 *
 * ## Import
 *
 * Firewall OnDemandSniffer can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:firewall/ondemandsniffer:Ondemandsniffer labelname {{name}}
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:firewall/ondemandsniffer:Ondemandsniffer labelname {{name}}
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Ondemandsniffer extends pulumi.CustomResource {
    /**
     * Get an existing Ondemandsniffer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OndemandsnifferState, opts?: pulumi.CustomResourceOptions): Ondemandsniffer {
        return new Ondemandsniffer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:firewall/ondemandsniffer:Ondemandsniffer';

    /**
     * Returns true if the given object is an instance of Ondemandsniffer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ondemandsniffer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ondemandsniffer.__pulumiType;
    }

    /**
     * Advanced freeform filter that will be used over existing filter settings if set. Can only be used by super admin.
     */
    public readonly advancedFilter!: pulumi.Output<string | undefined>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwise, conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    /**
     * IPv4 or IPv6 hosts to filter in this traffic sniffer. The structure of `hosts` block is documented below.
     */
    public readonly hosts!: pulumi.Output<outputs.firewall.OndemandsnifferHost[] | undefined>;
    /**
     * Interface name that on-demand packet sniffer will take place.
     */
    public readonly interface!: pulumi.Output<string>;
    /**
     * Maximum number of packets to capture per on-demand packet sniffer.
     */
    public readonly maxPacketCount!: pulumi.Output<number>;
    /**
     * On-demand packet sniffer name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Include non-IP packets. Valid values: `enable`, `disable`.
     */
    public readonly nonIpPacket!: pulumi.Output<string>;
    /**
     * Ports to filter for in this traffic sniffer. The structure of `ports` block is documented below.
     */
    public readonly ports!: pulumi.Output<outputs.firewall.OndemandsnifferPort[] | undefined>;
    /**
     * Protocols to filter in this traffic sniffer. The structure of `protocols` block is documented below.
     */
    public readonly protocols!: pulumi.Output<outputs.firewall.OndemandsnifferProtocol[] | undefined>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string>;

    /**
     * Create a Ondemandsniffer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: OndemandsnifferArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OndemandsnifferArgs | OndemandsnifferState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OndemandsnifferState | undefined;
            resourceInputs["advancedFilter"] = state ? state.advancedFilter : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["hosts"] = state ? state.hosts : undefined;
            resourceInputs["interface"] = state ? state.interface : undefined;
            resourceInputs["maxPacketCount"] = state ? state.maxPacketCount : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nonIpPacket"] = state ? state.nonIpPacket : undefined;
            resourceInputs["ports"] = state ? state.ports : undefined;
            resourceInputs["protocols"] = state ? state.protocols : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as OndemandsnifferArgs | undefined;
            resourceInputs["advancedFilter"] = args ? args.advancedFilter : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["hosts"] = args ? args.hosts : undefined;
            resourceInputs["interface"] = args ? args.interface : undefined;
            resourceInputs["maxPacketCount"] = args ? args.maxPacketCount : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nonIpPacket"] = args ? args.nonIpPacket : undefined;
            resourceInputs["ports"] = args ? args.ports : undefined;
            resourceInputs["protocols"] = args ? args.protocols : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Ondemandsniffer.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Ondemandsniffer resources.
 */
export interface OndemandsnifferState {
    /**
     * Advanced freeform filter that will be used over existing filter settings if set. Can only be used by super admin.
     */
    advancedFilter?: pulumi.Input<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwise, conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * IPv4 or IPv6 hosts to filter in this traffic sniffer. The structure of `hosts` block is documented below.
     */
    hosts?: pulumi.Input<pulumi.Input<inputs.firewall.OndemandsnifferHost>[]>;
    /**
     * Interface name that on-demand packet sniffer will take place.
     */
    interface?: pulumi.Input<string>;
    /**
     * Maximum number of packets to capture per on-demand packet sniffer.
     */
    maxPacketCount?: pulumi.Input<number>;
    /**
     * On-demand packet sniffer name.
     */
    name?: pulumi.Input<string>;
    /**
     * Include non-IP packets. Valid values: `enable`, `disable`.
     */
    nonIpPacket?: pulumi.Input<string>;
    /**
     * Ports to filter for in this traffic sniffer. The structure of `ports` block is documented below.
     */
    ports?: pulumi.Input<pulumi.Input<inputs.firewall.OndemandsnifferPort>[]>;
    /**
     * Protocols to filter in this traffic sniffer. The structure of `protocols` block is documented below.
     */
    protocols?: pulumi.Input<pulumi.Input<inputs.firewall.OndemandsnifferProtocol>[]>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Ondemandsniffer resource.
 */
export interface OndemandsnifferArgs {
    /**
     * Advanced freeform filter that will be used over existing filter settings if set. Can only be used by super admin.
     */
    advancedFilter?: pulumi.Input<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwise, conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * IPv4 or IPv6 hosts to filter in this traffic sniffer. The structure of `hosts` block is documented below.
     */
    hosts?: pulumi.Input<pulumi.Input<inputs.firewall.OndemandsnifferHost>[]>;
    /**
     * Interface name that on-demand packet sniffer will take place.
     */
    interface?: pulumi.Input<string>;
    /**
     * Maximum number of packets to capture per on-demand packet sniffer.
     */
    maxPacketCount?: pulumi.Input<number>;
    /**
     * On-demand packet sniffer name.
     */
    name?: pulumi.Input<string>;
    /**
     * Include non-IP packets. Valid values: `enable`, `disable`.
     */
    nonIpPacket?: pulumi.Input<string>;
    /**
     * Ports to filter for in this traffic sniffer. The structure of `ports` block is documented below.
     */
    ports?: pulumi.Input<pulumi.Input<inputs.firewall.OndemandsnifferPort>[]>;
    /**
     * Protocols to filter in this traffic sniffer. The structure of `protocols` block is documented below.
     */
    protocols?: pulumi.Input<pulumi.Input<inputs.firewall.OndemandsnifferProtocol>[]>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
