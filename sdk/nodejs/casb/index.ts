// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ProfileArgs, ProfileState } from "./profile";
export type Profile = import("./profile").Profile;
export const Profile: typeof import("./profile").Profile = null as any;
utilities.lazyLoad(exports, ["Profile"], () => require("./profile"));

export { SaasapplicationArgs, SaasapplicationState } from "./saasapplication";
export type Saasapplication = import("./saasapplication").Saasapplication;
export const Saasapplication: typeof import("./saasapplication").Saasapplication = null as any;
utilities.lazyLoad(exports, ["Saasapplication"], () => require("./saasapplication"));

export { UseractivityArgs, UseractivityState } from "./useractivity";
export type Useractivity = import("./useractivity").Useractivity;
export const Useractivity: typeof import("./useractivity").Useractivity = null as any;
utilities.lazyLoad(exports, ["Useractivity"], () => require("./useractivity"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "fortios:casb/profile:Profile":
                return new Profile(name, <any>undefined, { urn })
            case "fortios:casb/saasapplication:Saasapplication":
                return new Saasapplication(name, <any>undefined, { urn })
            case "fortios:casb/useractivity:Useractivity":
                return new Useractivity(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("fortios", "casb/profile", _module)
pulumi.runtime.registerResourceModule("fortios", "casb/saasapplication", _module)
pulumi.runtime.registerResourceModule("fortios", "casb/useractivity", _module)
