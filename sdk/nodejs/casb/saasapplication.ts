// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Configure CASB SaaS application. Applies to FortiOS Version `>= 7.4.1`.
 *
 * ## Import
 *
 * Casb SaasApplication can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:casb/saasapplication:Saasapplication labelname {{name}}
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:casb/saasapplication:Saasapplication labelname {{name}}
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Saasapplication extends pulumi.CustomResource {
    /**
     * Get an existing Saasapplication resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SaasapplicationState, opts?: pulumi.CustomResourceOptions): Saasapplication {
        return new Saasapplication(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:casb/saasapplication:Saasapplication';

    /**
     * Returns true if the given object is an instance of Saasapplication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Saasapplication {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Saasapplication.__pulumiType;
    }

    /**
     * SaaS application signature name.
     */
    public readonly casbName!: pulumi.Output<string>;
    /**
     * SaaS application description.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * SaaS application domain list. The structure of `domains` block is documented below.
     */
    public readonly domains!: pulumi.Output<outputs.casb.SaasapplicationDomain[] | undefined>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    /**
     * SaaS application name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Enable/disable setting. Valid values: `enable`, `disable`.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * SaaS application type. Valid values: `built-in`, `customized`.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
     */
    public readonly uuid!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a Saasapplication resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SaasapplicationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SaasapplicationArgs | SaasapplicationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SaasapplicationState | undefined;
            resourceInputs["casbName"] = state ? state.casbName : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domains"] = state ? state.domains : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as SaasapplicationArgs | undefined;
            resourceInputs["casbName"] = args ? args.casbName : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["domains"] = args ? args.domains : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Saasapplication.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Saasapplication resources.
 */
export interface SaasapplicationState {
    /**
     * SaaS application signature name.
     */
    casbName?: pulumi.Input<string>;
    /**
     * SaaS application description.
     */
    description?: pulumi.Input<string>;
    /**
     * SaaS application domain list. The structure of `domains` block is documented below.
     */
    domains?: pulumi.Input<pulumi.Input<inputs.casb.SaasapplicationDomain>[]>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * SaaS application name.
     */
    name?: pulumi.Input<string>;
    /**
     * Enable/disable setting. Valid values: `enable`, `disable`.
     */
    status?: pulumi.Input<string>;
    /**
     * SaaS application type. Valid values: `built-in`, `customized`.
     */
    type?: pulumi.Input<string>;
    /**
     * Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
     */
    uuid?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Saasapplication resource.
 */
export interface SaasapplicationArgs {
    /**
     * SaaS application signature name.
     */
    casbName?: pulumi.Input<string>;
    /**
     * SaaS application description.
     */
    description?: pulumi.Input<string>;
    /**
     * SaaS application domain list. The structure of `domains` block is documented below.
     */
    domains?: pulumi.Input<pulumi.Input<inputs.casb.SaasapplicationDomain>[]>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * SaaS application name.
     */
    name?: pulumi.Input<string>;
    /**
     * Enable/disable setting. Valid values: `enable`, `disable`.
     */
    status?: pulumi.Input<string>;
    /**
     * SaaS application type. Valid values: `built-in`, `customized`.
     */
    type?: pulumi.Input<string>;
    /**
     * Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
     */
    uuid?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
