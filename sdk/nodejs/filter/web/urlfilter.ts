// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as utilities from "../../utilities";

/**
 * Configure URL filter lists.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumiverse/fortios";
 *
 * const trname = new fortios.filter.web.Urlfilter("trname", {
 *     fosid: 1,
 *     ipAddrBlock: "enable",
 *     oneArmIpsUrlfilter: "enable",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * Webfilter Urlfilter can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:filter/web/urlfilter:Urlfilter labelname {{fosid}}
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:filter/web/urlfilter:Urlfilter labelname {{fosid}}
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Urlfilter extends pulumi.CustomResource {
    /**
     * Get an existing Urlfilter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UrlfilterState, opts?: pulumi.CustomResourceOptions): Urlfilter {
        return new Urlfilter(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:filter/web/urlfilter:Urlfilter';

    /**
     * Returns true if the given object is an instance of Urlfilter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Urlfilter {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Urlfilter.__pulumiType;
    }

    /**
     * Optional comments.
     */
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * URL filter entries. The structure of `entries` block is documented below.
     */
    public readonly entries!: pulumi.Output<outputs.filter.web.UrlfilterEntry[] | undefined>;
    /**
     * ID.
     */
    public readonly fosid!: pulumi.Output<number>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    /**
     * Enable/disable matching of IPv4 mapped IPv6 URLs. Valid values: `enable`, `disable`.
     */
    public readonly ip4MappedIp6!: pulumi.Output<string>;
    /**
     * Enable/disable blocking URLs when the hostname appears as an IP address. Valid values: `enable`, `disable`.
     */
    public readonly ipAddrBlock!: pulumi.Output<string>;
    /**
     * Name of URL filter list.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Enable/disable DNS resolver for one-arm IPS URL filter operation. Valid values: `enable`, `disable`.
     */
    public readonly oneArmIpsUrlfilter!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a Urlfilter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UrlfilterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UrlfilterArgs | UrlfilterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UrlfilterState | undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["entries"] = state ? state.entries : undefined;
            resourceInputs["fosid"] = state ? state.fosid : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["ip4MappedIp6"] = state ? state.ip4MappedIp6 : undefined;
            resourceInputs["ipAddrBlock"] = state ? state.ipAddrBlock : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["oneArmIpsUrlfilter"] = state ? state.oneArmIpsUrlfilter : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as UrlfilterArgs | undefined;
            if ((!args || args.fosid === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fosid'");
            }
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["entries"] = args ? args.entries : undefined;
            resourceInputs["fosid"] = args ? args.fosid : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["ip4MappedIp6"] = args ? args.ip4MappedIp6 : undefined;
            resourceInputs["ipAddrBlock"] = args ? args.ipAddrBlock : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["oneArmIpsUrlfilter"] = args ? args.oneArmIpsUrlfilter : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Urlfilter.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Urlfilter resources.
 */
export interface UrlfilterState {
    /**
     * Optional comments.
     */
    comment?: pulumi.Input<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * URL filter entries. The structure of `entries` block is documented below.
     */
    entries?: pulumi.Input<pulumi.Input<inputs.filter.web.UrlfilterEntry>[]>;
    /**
     * ID.
     */
    fosid?: pulumi.Input<number>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * Enable/disable matching of IPv4 mapped IPv6 URLs. Valid values: `enable`, `disable`.
     */
    ip4MappedIp6?: pulumi.Input<string>;
    /**
     * Enable/disable blocking URLs when the hostname appears as an IP address. Valid values: `enable`, `disable`.
     */
    ipAddrBlock?: pulumi.Input<string>;
    /**
     * Name of URL filter list.
     */
    name?: pulumi.Input<string>;
    /**
     * Enable/disable DNS resolver for one-arm IPS URL filter operation. Valid values: `enable`, `disable`.
     */
    oneArmIpsUrlfilter?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Urlfilter resource.
 */
export interface UrlfilterArgs {
    /**
     * Optional comments.
     */
    comment?: pulumi.Input<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * URL filter entries. The structure of `entries` block is documented below.
     */
    entries?: pulumi.Input<pulumi.Input<inputs.filter.web.UrlfilterEntry>[]>;
    /**
     * ID.
     */
    fosid: pulumi.Input<number>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * Enable/disable matching of IPv4 mapped IPv6 URLs. Valid values: `enable`, `disable`.
     */
    ip4MappedIp6?: pulumi.Input<string>;
    /**
     * Enable/disable blocking URLs when the hostname appears as an IP address. Valid values: `enable`, `disable`.
     */
    ipAddrBlock?: pulumi.Input<string>;
    /**
     * Name of URL filter list.
     */
    name?: pulumi.Input<string>;
    /**
     * Enable/disable DNS resolver for one-arm IPS URL filter operation. Valid values: `enable`, `disable`.
     */
    oneArmIpsUrlfilter?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
