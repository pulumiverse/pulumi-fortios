// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Configure FortiGuard - AntiSpam. Applies to FortiOS Version `<= 6.2.0`.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumiverse/fortios";
 *
 * const trname = new fortios.filter.spam.Fortishield("trname", {
 *     spamSubmitForce: "enable",
 *     spamSubmitSrv: "www.nospammer.net",
 *     spamSubmitTxt2htm: "enable",
 * });
 * ```
 *
 * ## Import
 *
 * Spamfilter Fortishield can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:filter/spam/fortishield:Fortishield labelname SpamfilterFortishield
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:filter/spam/fortishield:Fortishield labelname SpamfilterFortishield
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Fortishield extends pulumi.CustomResource {
    /**
     * Get an existing Fortishield resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FortishieldState, opts?: pulumi.CustomResourceOptions): Fortishield {
        return new Fortishield(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:filter/spam/fortishield:Fortishield';

    /**
     * Returns true if the given object is an instance of Fortishield.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Fortishield {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Fortishield.__pulumiType;
    }

    /**
     * Enable/disable force insertion of a new mime entity for the submission text. Valid values: `enable`, `disable`.
     */
    public readonly spamSubmitForce!: pulumi.Output<string>;
    /**
     * Hostname of the spam submission server.
     */
    public readonly spamSubmitSrv!: pulumi.Output<string>;
    /**
     * Enable/disable conversion of text email to HTML email. Valid values: `enable`, `disable`.
     */
    public readonly spamSubmitTxt2htm!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a Fortishield resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FortishieldArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FortishieldArgs | FortishieldState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FortishieldState | undefined;
            resourceInputs["spamSubmitForce"] = state ? state.spamSubmitForce : undefined;
            resourceInputs["spamSubmitSrv"] = state ? state.spamSubmitSrv : undefined;
            resourceInputs["spamSubmitTxt2htm"] = state ? state.spamSubmitTxt2htm : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as FortishieldArgs | undefined;
            resourceInputs["spamSubmitForce"] = args ? args.spamSubmitForce : undefined;
            resourceInputs["spamSubmitSrv"] = args ? args.spamSubmitSrv : undefined;
            resourceInputs["spamSubmitTxt2htm"] = args ? args.spamSubmitTxt2htm : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Fortishield.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Fortishield resources.
 */
export interface FortishieldState {
    /**
     * Enable/disable force insertion of a new mime entity for the submission text. Valid values: `enable`, `disable`.
     */
    spamSubmitForce?: pulumi.Input<string>;
    /**
     * Hostname of the spam submission server.
     */
    spamSubmitSrv?: pulumi.Input<string>;
    /**
     * Enable/disable conversion of text email to HTML email. Valid values: `enable`, `disable`.
     */
    spamSubmitTxt2htm?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Fortishield resource.
 */
export interface FortishieldArgs {
    /**
     * Enable/disable force insertion of a new mime entity for the submission text. Valid values: `enable`, `disable`.
     */
    spamSubmitForce?: pulumi.Input<string>;
    /**
     * Hostname of the spam submission server.
     */
    spamSubmitSrv?: pulumi.Input<string>;
    /**
     * Enable/disable conversion of text email to HTML email. Valid values: `enable`, `disable`.
     */
    spamSubmitTxt2htm?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
