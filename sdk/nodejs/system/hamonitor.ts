// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Configure HA monitor.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumiverse/fortios";
 *
 * const trname = new fortios.system.Hamonitor("trname", {
 *     monitorVlan: "disable",
 *     vlanHbInterval: 5,
 *     vlanHbLostThreshold: 3,
 * });
 * ```
 *
 * ## Import
 *
 * System HaMonitor can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:system/hamonitor:Hamonitor labelname SystemHaMonitor
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:system/hamonitor:Hamonitor labelname SystemHaMonitor
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Hamonitor extends pulumi.CustomResource {
    /**
     * Get an existing Hamonitor resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HamonitorState, opts?: pulumi.CustomResourceOptions): Hamonitor {
        return new Hamonitor(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:system/hamonitor:Hamonitor';

    /**
     * Returns true if the given object is an instance of Hamonitor.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Hamonitor {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Hamonitor.__pulumiType;
    }

    /**
     * Enable/disable monitor VLAN interfaces. Valid values: `enable`, `disable`.
     */
    public readonly monitorVlan!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string>;
    /**
     * Configure heartbeat interval (seconds).
     */
    public readonly vlanHbInterval!: pulumi.Output<number>;
    /**
     * VLAN lost heartbeat threshold (1 - 60).
     */
    public readonly vlanHbLostThreshold!: pulumi.Output<number>;

    /**
     * Create a Hamonitor resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: HamonitorArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HamonitorArgs | HamonitorState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HamonitorState | undefined;
            resourceInputs["monitorVlan"] = state ? state.monitorVlan : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
            resourceInputs["vlanHbInterval"] = state ? state.vlanHbInterval : undefined;
            resourceInputs["vlanHbLostThreshold"] = state ? state.vlanHbLostThreshold : undefined;
        } else {
            const args = argsOrState as HamonitorArgs | undefined;
            resourceInputs["monitorVlan"] = args ? args.monitorVlan : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
            resourceInputs["vlanHbInterval"] = args ? args.vlanHbInterval : undefined;
            resourceInputs["vlanHbLostThreshold"] = args ? args.vlanHbLostThreshold : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Hamonitor.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Hamonitor resources.
 */
export interface HamonitorState {
    /**
     * Enable/disable monitor VLAN interfaces. Valid values: `enable`, `disable`.
     */
    monitorVlan?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Configure heartbeat interval (seconds).
     */
    vlanHbInterval?: pulumi.Input<number>;
    /**
     * VLAN lost heartbeat threshold (1 - 60).
     */
    vlanHbLostThreshold?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Hamonitor resource.
 */
export interface HamonitorArgs {
    /**
     * Enable/disable monitor VLAN interfaces. Valid values: `enable`, `disable`.
     */
    monitorVlan?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Configure heartbeat interval (seconds).
     */
    vlanHbInterval?: pulumi.Input<number>;
    /**
     * VLAN lost heartbeat threshold (1 - 60).
     */
    vlanHbLostThreshold?: pulumi.Input<number>;
}
