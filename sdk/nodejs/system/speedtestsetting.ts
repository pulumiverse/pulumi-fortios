// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Configure speed test setting. Applies to FortiOS Version `7.2.6,7.4.1,7.4.2`.
 *
 * ## Import
 *
 * System SpeedTestSetting can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:system/speedtestsetting:Speedtestsetting labelname SystemSpeedTestSetting
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:system/speedtestsetting:Speedtestsetting labelname SystemSpeedTestSetting
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Speedtestsetting extends pulumi.CustomResource {
    /**
     * Get an existing Speedtestsetting resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SpeedtestsettingState, opts?: pulumi.CustomResourceOptions): Speedtestsetting {
        return new Speedtestsetting(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:system/speedtestsetting:Speedtestsetting';

    /**
     * Returns true if the given object is an instance of Speedtestsetting.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Speedtestsetting {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Speedtestsetting.__pulumiType;
    }

    /**
     * Speed test latency threshold in milliseconds (0 - 2000, default = 60) for the Auto mode. If the latency exceeds this threshold, the speed test will use the UDP protocol; otherwise, it will use the TCP protocol.
     */
    public readonly latencyThreshold!: pulumi.Output<number>;
    /**
     * Number of parallel client streams (1 - 64, default = 4) for the TCP protocol to run during the speed test.
     */
    public readonly multipleTcpStream!: pulumi.Output<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a Speedtestsetting resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SpeedtestsettingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SpeedtestsettingArgs | SpeedtestsettingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SpeedtestsettingState | undefined;
            resourceInputs["latencyThreshold"] = state ? state.latencyThreshold : undefined;
            resourceInputs["multipleTcpStream"] = state ? state.multipleTcpStream : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as SpeedtestsettingArgs | undefined;
            resourceInputs["latencyThreshold"] = args ? args.latencyThreshold : undefined;
            resourceInputs["multipleTcpStream"] = args ? args.multipleTcpStream : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Speedtestsetting.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Speedtestsetting resources.
 */
export interface SpeedtestsettingState {
    /**
     * Speed test latency threshold in milliseconds (0 - 2000, default = 60) for the Auto mode. If the latency exceeds this threshold, the speed test will use the UDP protocol; otherwise, it will use the TCP protocol.
     */
    latencyThreshold?: pulumi.Input<number>;
    /**
     * Number of parallel client streams (1 - 64, default = 4) for the TCP protocol to run during the speed test.
     */
    multipleTcpStream?: pulumi.Input<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Speedtestsetting resource.
 */
export interface SpeedtestsettingArgs {
    /**
     * Speed test latency threshold in milliseconds (0 - 2000, default = 60) for the Auto mode. If the latency exceeds this threshold, the speed test will use the UDP protocol; otherwise, it will use the TCP protocol.
     */
    latencyThreshold?: pulumi.Input<number>;
    /**
     * Number of parallel client streams (1 - 64, default = 4) for the TCP protocol to run during the speed test.
     */
    multipleTcpStream?: pulumi.Input<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
