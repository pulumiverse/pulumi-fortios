// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Configure external resource.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumiverse/fortios";
 *
 * const trname = new fortios.system.Externalresource("trname", {
 *     category: 199,
 *     refreshRate: 5,
 *     resource: "https://tmpxxxxx.com",
 *     status: "enable",
 *     type: "category",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * System ExternalResource can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:system/externalresource:Externalresource labelname {{name}}
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:system/externalresource:Externalresource labelname {{name}}
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Externalresource extends pulumi.CustomResource {
    /**
     * Get an existing Externalresource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ExternalresourceState, opts?: pulumi.CustomResourceOptions): Externalresource {
        return new Externalresource(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:system/externalresource:Externalresource';

    /**
     * Returns true if the given object is an instance of Externalresource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Externalresource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Externalresource.__pulumiType;
    }

    /**
     * User resource category.
     */
    public readonly category!: pulumi.Output<number>;
    /**
     * Comment.
     */
    public readonly comments!: pulumi.Output<string | undefined>;
    /**
     * Specify outgoing interface to reach server.
     */
    public readonly interface!: pulumi.Output<string>;
    /**
     * Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
     */
    public readonly interfaceSelectMethod!: pulumi.Output<string>;
    /**
     * External resource name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * HTTP basic authentication password.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * Time interval to refresh external resource (1 - 43200 min, default = 5 min).
     */
    public readonly refreshRate!: pulumi.Output<number>;
    /**
     * URI of external resource.
     */
    public readonly resource!: pulumi.Output<string>;
    /**
     * Certificate verification option. Valid values: `none`, `basic`, `full`.
     */
    public readonly serverIdentityCheck!: pulumi.Output<string>;
    /**
     * Source IPv4 address used to communicate with server.
     */
    public readonly sourceIp!: pulumi.Output<string>;
    /**
     * Enable/disable user resource. Valid values: `enable`, `disable`.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * User resource type.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * External resource update method. Valid values: `feed`, `push`.
     */
    public readonly updateMethod!: pulumi.Output<string>;
    /**
     * Override HTTP User-Agent header used when retrieving this external resource.
     */
    public readonly userAgent!: pulumi.Output<string>;
    /**
     * HTTP basic authentication user name.
     */
    public readonly username!: pulumi.Output<string>;
    /**
     * Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
     */
    public readonly uuid!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a Externalresource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ExternalresourceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ExternalresourceArgs | ExternalresourceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ExternalresourceState | undefined;
            resourceInputs["category"] = state ? state.category : undefined;
            resourceInputs["comments"] = state ? state.comments : undefined;
            resourceInputs["interface"] = state ? state.interface : undefined;
            resourceInputs["interfaceSelectMethod"] = state ? state.interfaceSelectMethod : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["refreshRate"] = state ? state.refreshRate : undefined;
            resourceInputs["resource"] = state ? state.resource : undefined;
            resourceInputs["serverIdentityCheck"] = state ? state.serverIdentityCheck : undefined;
            resourceInputs["sourceIp"] = state ? state.sourceIp : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["updateMethod"] = state ? state.updateMethod : undefined;
            resourceInputs["userAgent"] = state ? state.userAgent : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as ExternalresourceArgs | undefined;
            if ((!args || args.refreshRate === undefined) && !opts.urn) {
                throw new Error("Missing required property 'refreshRate'");
            }
            if ((!args || args.resource === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resource'");
            }
            resourceInputs["category"] = args ? args.category : undefined;
            resourceInputs["comments"] = args ? args.comments : undefined;
            resourceInputs["interface"] = args ? args.interface : undefined;
            resourceInputs["interfaceSelectMethod"] = args ? args.interfaceSelectMethod : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["refreshRate"] = args ? args.refreshRate : undefined;
            resourceInputs["resource"] = args ? args.resource : undefined;
            resourceInputs["serverIdentityCheck"] = args ? args.serverIdentityCheck : undefined;
            resourceInputs["sourceIp"] = args ? args.sourceIp : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["updateMethod"] = args ? args.updateMethod : undefined;
            resourceInputs["userAgent"] = args ? args.userAgent : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Externalresource.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Externalresource resources.
 */
export interface ExternalresourceState {
    /**
     * User resource category.
     */
    category?: pulumi.Input<number>;
    /**
     * Comment.
     */
    comments?: pulumi.Input<string>;
    /**
     * Specify outgoing interface to reach server.
     */
    interface?: pulumi.Input<string>;
    /**
     * Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
     */
    interfaceSelectMethod?: pulumi.Input<string>;
    /**
     * External resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * HTTP basic authentication password.
     */
    password?: pulumi.Input<string>;
    /**
     * Time interval to refresh external resource (1 - 43200 min, default = 5 min).
     */
    refreshRate?: pulumi.Input<number>;
    /**
     * URI of external resource.
     */
    resource?: pulumi.Input<string>;
    /**
     * Certificate verification option. Valid values: `none`, `basic`, `full`.
     */
    serverIdentityCheck?: pulumi.Input<string>;
    /**
     * Source IPv4 address used to communicate with server.
     */
    sourceIp?: pulumi.Input<string>;
    /**
     * Enable/disable user resource. Valid values: `enable`, `disable`.
     */
    status?: pulumi.Input<string>;
    /**
     * User resource type.
     */
    type?: pulumi.Input<string>;
    /**
     * External resource update method. Valid values: `feed`, `push`.
     */
    updateMethod?: pulumi.Input<string>;
    /**
     * Override HTTP User-Agent header used when retrieving this external resource.
     */
    userAgent?: pulumi.Input<string>;
    /**
     * HTTP basic authentication user name.
     */
    username?: pulumi.Input<string>;
    /**
     * Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
     */
    uuid?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Externalresource resource.
 */
export interface ExternalresourceArgs {
    /**
     * User resource category.
     */
    category?: pulumi.Input<number>;
    /**
     * Comment.
     */
    comments?: pulumi.Input<string>;
    /**
     * Specify outgoing interface to reach server.
     */
    interface?: pulumi.Input<string>;
    /**
     * Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
     */
    interfaceSelectMethod?: pulumi.Input<string>;
    /**
     * External resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * HTTP basic authentication password.
     */
    password?: pulumi.Input<string>;
    /**
     * Time interval to refresh external resource (1 - 43200 min, default = 5 min).
     */
    refreshRate: pulumi.Input<number>;
    /**
     * URI of external resource.
     */
    resource: pulumi.Input<string>;
    /**
     * Certificate verification option. Valid values: `none`, `basic`, `full`.
     */
    serverIdentityCheck?: pulumi.Input<string>;
    /**
     * Source IPv4 address used to communicate with server.
     */
    sourceIp?: pulumi.Input<string>;
    /**
     * Enable/disable user resource. Valid values: `enable`, `disable`.
     */
    status?: pulumi.Input<string>;
    /**
     * User resource type.
     */
    type?: pulumi.Input<string>;
    /**
     * External resource update method. Valid values: `feed`, `push`.
     */
    updateMethod?: pulumi.Input<string>;
    /**
     * Override HTTP User-Agent header used when retrieving this external resource.
     */
    userAgent?: pulumi.Input<string>;
    /**
     * HTTP basic authentication user name.
     */
    username?: pulumi.Input<string>;
    /**
     * Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
     */
    uuid?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
