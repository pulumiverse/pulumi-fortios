// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * System ApiUser can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:system/apiuser:Apiuser labelname {{name}}
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:system/apiuser:Apiuser labelname {{name}}
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Apiuser extends pulumi.CustomResource {
    /**
     * Get an existing Apiuser resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApiuserState, opts?: pulumi.CustomResourceOptions): Apiuser {
        return new Apiuser(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:system/apiuser:Apiuser';

    /**
     * Returns true if the given object is an instance of Apiuser.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Apiuser {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Apiuser.__pulumiType;
    }

    /**
     * Admin user access profile.
     */
    public readonly accprofile!: pulumi.Output<string>;
    /**
     * Admin user password.
     */
    public readonly apiKey!: pulumi.Output<string | undefined>;
    /**
     * Comment.
     */
    public readonly comments!: pulumi.Output<string | undefined>;
    /**
     * Value for Access-Control-Allow-Origin on API responses. Avoid using '*' if possible.
     */
    public readonly corsAllowOrigin!: pulumi.Output<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    /**
     * User name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Enable/disable peer authentication. Valid values: `enable`, `disable`.
     */
    public readonly peerAuth!: pulumi.Output<string>;
    /**
     * Peer group name.
     */
    public readonly peerGroup!: pulumi.Output<string>;
    /**
     * Schedule name.
     */
    public readonly schedule!: pulumi.Output<string>;
    /**
     * Trusthost. The structure of `trusthost` block is documented below.
     */
    public readonly trusthosts!: pulumi.Output<outputs.system.ApiuserTrusthost[] | undefined>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;
    /**
     * Virtual domains. The structure of `vdom` block is documented below.
     */
    public readonly vdoms!: pulumi.Output<outputs.system.ApiuserVdom[] | undefined>;

    /**
     * Create a Apiuser resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApiuserArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApiuserArgs | ApiuserState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApiuserState | undefined;
            resourceInputs["accprofile"] = state ? state.accprofile : undefined;
            resourceInputs["apiKey"] = state ? state.apiKey : undefined;
            resourceInputs["comments"] = state ? state.comments : undefined;
            resourceInputs["corsAllowOrigin"] = state ? state.corsAllowOrigin : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["peerAuth"] = state ? state.peerAuth : undefined;
            resourceInputs["peerGroup"] = state ? state.peerGroup : undefined;
            resourceInputs["schedule"] = state ? state.schedule : undefined;
            resourceInputs["trusthosts"] = state ? state.trusthosts : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
            resourceInputs["vdoms"] = state ? state.vdoms : undefined;
        } else {
            const args = argsOrState as ApiuserArgs | undefined;
            if ((!args || args.accprofile === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accprofile'");
            }
            resourceInputs["accprofile"] = args ? args.accprofile : undefined;
            resourceInputs["apiKey"] = args?.apiKey ? pulumi.secret(args.apiKey) : undefined;
            resourceInputs["comments"] = args ? args.comments : undefined;
            resourceInputs["corsAllowOrigin"] = args ? args.corsAllowOrigin : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["peerAuth"] = args ? args.peerAuth : undefined;
            resourceInputs["peerGroup"] = args ? args.peerGroup : undefined;
            resourceInputs["schedule"] = args ? args.schedule : undefined;
            resourceInputs["trusthosts"] = args ? args.trusthosts : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
            resourceInputs["vdoms"] = args ? args.vdoms : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["apiKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Apiuser.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Apiuser resources.
 */
export interface ApiuserState {
    /**
     * Admin user access profile.
     */
    accprofile?: pulumi.Input<string>;
    /**
     * Admin user password.
     */
    apiKey?: pulumi.Input<string>;
    /**
     * Comment.
     */
    comments?: pulumi.Input<string>;
    /**
     * Value for Access-Control-Allow-Origin on API responses. Avoid using '*' if possible.
     */
    corsAllowOrigin?: pulumi.Input<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * User name.
     */
    name?: pulumi.Input<string>;
    /**
     * Enable/disable peer authentication. Valid values: `enable`, `disable`.
     */
    peerAuth?: pulumi.Input<string>;
    /**
     * Peer group name.
     */
    peerGroup?: pulumi.Input<string>;
    /**
     * Schedule name.
     */
    schedule?: pulumi.Input<string>;
    /**
     * Trusthost. The structure of `trusthost` block is documented below.
     */
    trusthosts?: pulumi.Input<pulumi.Input<inputs.system.ApiuserTrusthost>[]>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Virtual domains. The structure of `vdom` block is documented below.
     */
    vdoms?: pulumi.Input<pulumi.Input<inputs.system.ApiuserVdom>[]>;
}

/**
 * The set of arguments for constructing a Apiuser resource.
 */
export interface ApiuserArgs {
    /**
     * Admin user access profile.
     */
    accprofile: pulumi.Input<string>;
    /**
     * Admin user password.
     */
    apiKey?: pulumi.Input<string>;
    /**
     * Comment.
     */
    comments?: pulumi.Input<string>;
    /**
     * Value for Access-Control-Allow-Origin on API responses. Avoid using '*' if possible.
     */
    corsAllowOrigin?: pulumi.Input<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * User name.
     */
    name?: pulumi.Input<string>;
    /**
     * Enable/disable peer authentication. Valid values: `enable`, `disable`.
     */
    peerAuth?: pulumi.Input<string>;
    /**
     * Peer group name.
     */
    peerGroup?: pulumi.Input<string>;
    /**
     * Schedule name.
     */
    schedule?: pulumi.Input<string>;
    /**
     * Trusthost. The structure of `trusthost` block is documented below.
     */
    trusthosts?: pulumi.Input<pulumi.Input<inputs.system.ApiuserTrusthost>[]>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Virtual domains. The structure of `vdom` block is documented below.
     */
    vdoms?: pulumi.Input<pulumi.Input<inputs.system.ApiuserVdom>[]>;
}
