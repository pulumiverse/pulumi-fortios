// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to get information on fortios system dns
 */
export function getDns(args?: GetDnsArgs, opts?: pulumi.InvokeOptions): Promise<GetDnsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortios:system/getDns:getDns", {
        "vdomparam": args.vdomparam,
    }, opts);
}

/**
 * A collection of arguments for invoking getDns.
 */
export interface GetDnsArgs {
    /**
     * Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: string;
}

/**
 * A collection of values returned by getDns.
 */
export interface GetDnsResult {
    /**
     * Alternate primary DNS server. (This is not used as a failover DNS server.)
     */
    readonly altPrimary: string;
    /**
     * Alternate secondary DNS server. (This is not used as a failover DNS server.)
     */
    readonly altSecondary: string;
    /**
     * Enable/disable response from the DNS server when a record is not in cache.
     */
    readonly cacheNotfoundResponses: string;
    /**
     * Maximum number of records in the DNS cache.
     */
    readonly dnsCacheLimit: number;
    /**
     * Duration in seconds that the DNS cache retains information.
     */
    readonly dnsCacheTtl: number;
    /**
     * Enable/disable/enforce DNS over TLS.
     */
    readonly dnsOverTls: string;
    /**
     * DNS search domain list separated by space (maximum 8 domains)
     */
    readonly domains: outputs.system.GetDnsDomain[];
    /**
     * FQDN cache time to live in seconds (0 - 86400, default = 0).
     */
    readonly fqdnCacheTtl: number;
    /**
     * FQDN cache maximum refresh time in seconds (3600 - 86400, default = 3600).
     */
    readonly fqdnMaxRefresh: number;
    /**
     * FQDN cache minimum refresh time in seconds (10 - 3600, default = 60).
     */
    readonly fqdnMinRefresh: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Specify outgoing interface to reach server.
     */
    readonly interface: string;
    /**
     * Specify how to select outgoing interface to reach server.
     */
    readonly interfaceSelectMethod: string;
    /**
     * Primary DNS server IPv6 address.
     */
    readonly ip6Primary: string;
    /**
     * Secondary DNS server IPv6 address.
     */
    readonly ip6Secondary: string;
    /**
     * Local DNS log setting.
     */
    readonly log: string;
    /**
     * Primary DNS server IP address.
     */
    readonly primary: string;
    /**
     * DNS protocols.
     */
    readonly protocol: string;
    /**
     * Number of times to retry (0 - 5).
     */
    readonly retry: number;
    /**
     * Secondary DNS server IP address.
     */
    readonly secondary: string;
    /**
     * DNS server host name list. The structure of `serverHostname` block is documented below.
     */
    readonly serverHostnames: outputs.system.GetDnsServerHostname[];
    /**
     * Specify how configured servers are prioritized.
     */
    readonly serverSelectMethod: string;
    /**
     * IP address used by the DNS server as its source IP.
     */
    readonly sourceIp: string;
    /**
     * Name of local certificate for SSL connections.
     */
    readonly sslCertificate: string;
    /**
     * DNS query timeout interval in seconds (1 - 10).
     */
    readonly timeout: number;
    readonly vdomparam?: string;
}
/**
 * Use this data source to get information on fortios system dns
 */
export function getDnsOutput(args?: GetDnsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDnsResult> {
    return pulumi.output(args).apply((a: any) => getDns(a, opts))
}

/**
 * A collection of arguments for invoking getDns.
 */
export interface GetDnsOutputArgs {
    /**
     * Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
