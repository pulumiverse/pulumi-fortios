// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Configure GRE tunnel.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumiverse/fortios";
 *
 * const trname = new fortios.system.Gretunnel("trname", {
 *     checksumReception: "disable",
 *     checksumTransmission: "disable",
 *     dscpCopying: "disable",
 *     "interface": "port3",
 *     ipVersion: "4",
 *     keepaliveFailtimes: 10,
 *     keepaliveInterval: 0,
 *     keyInbound: 0,
 *     keyOutbound: 0,
 *     localGw: "3.3.3.3",
 *     localGw6: "::",
 *     remoteGw: "1.1.1.1",
 *     remoteGw6: "::",
 *     sequenceNumberReception: "disable",
 *     sequenceNumberTransmission: "enable",
 * });
 * ```
 *
 * ## Import
 *
 * System GreTunnel can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:system/gretunnel:Gretunnel labelname {{name}}
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:system/gretunnel:Gretunnel labelname {{name}}
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Gretunnel extends pulumi.CustomResource {
    /**
     * Get an existing Gretunnel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GretunnelState, opts?: pulumi.CustomResourceOptions): Gretunnel {
        return new Gretunnel(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:system/gretunnel:Gretunnel';

    /**
     * Returns true if the given object is an instance of Gretunnel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Gretunnel {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Gretunnel.__pulumiType;
    }

    /**
     * Enable/disable validating checksums in received GRE packets. Valid values: `disable`, `enable`.
     */
    public readonly checksumReception!: pulumi.Output<string>;
    /**
     * Enable/disable including checksums in transmitted GRE packets. Valid values: `disable`, `enable`.
     */
    public readonly checksumTransmission!: pulumi.Output<string>;
    /**
     * DiffServ setting to be applied to GRE tunnel outer IP header.
     */
    public readonly diffservcode!: pulumi.Output<string>;
    /**
     * Enable/disable DSCP copying. Valid values: `disable`, `enable`.
     */
    public readonly dscpCopying!: pulumi.Output<string>;
    /**
     * Interface name.
     */
    public readonly interface!: pulumi.Output<string>;
    /**
     * IP version to use for VPN interface. Valid values: `4`, `6`.
     */
    public readonly ipVersion!: pulumi.Output<string>;
    /**
     * Number of consecutive unreturned keepalive messages before a GRE connection is considered down (1 - 255).
     */
    public readonly keepaliveFailtimes!: pulumi.Output<number>;
    /**
     * Keepalive message interval (0 - 32767, 0 = disabled).
     */
    public readonly keepaliveInterval!: pulumi.Output<number>;
    /**
     * Require received GRE packets contain this key (0 - 4294967295).
     */
    public readonly keyInbound!: pulumi.Output<number>;
    /**
     * Include this key in transmitted GRE packets (0 - 4294967295).
     */
    public readonly keyOutbound!: pulumi.Output<number>;
    /**
     * IP address of the local gateway.
     */
    public readonly localGw!: pulumi.Output<string>;
    /**
     * IPv6 address of the local gateway.
     */
    public readonly localGw6!: pulumi.Output<string>;
    /**
     * Tunnel name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * IP address of the remote gateway.
     */
    public readonly remoteGw!: pulumi.Output<string>;
    /**
     * IPv6 address of the remote gateway.
     */
    public readonly remoteGw6!: pulumi.Output<string>;
    /**
     * Enable/disable validating sequence numbers in received GRE packets. Valid values: `disable`, `enable`.
     */
    public readonly sequenceNumberReception!: pulumi.Output<string>;
    /**
     * Enable/disable including of sequence numbers in transmitted GRE packets. Valid values: `disable`, `enable`.
     */
    public readonly sequenceNumberTransmission!: pulumi.Output<string>;
    /**
     * Enable/disable use of SD-WAN to reach remote gateway. Valid values: `disable`, `enable`.
     */
    public readonly useSdwan!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string>;

    /**
     * Create a Gretunnel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GretunnelArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GretunnelArgs | GretunnelState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GretunnelState | undefined;
            resourceInputs["checksumReception"] = state ? state.checksumReception : undefined;
            resourceInputs["checksumTransmission"] = state ? state.checksumTransmission : undefined;
            resourceInputs["diffservcode"] = state ? state.diffservcode : undefined;
            resourceInputs["dscpCopying"] = state ? state.dscpCopying : undefined;
            resourceInputs["interface"] = state ? state.interface : undefined;
            resourceInputs["ipVersion"] = state ? state.ipVersion : undefined;
            resourceInputs["keepaliveFailtimes"] = state ? state.keepaliveFailtimes : undefined;
            resourceInputs["keepaliveInterval"] = state ? state.keepaliveInterval : undefined;
            resourceInputs["keyInbound"] = state ? state.keyInbound : undefined;
            resourceInputs["keyOutbound"] = state ? state.keyOutbound : undefined;
            resourceInputs["localGw"] = state ? state.localGw : undefined;
            resourceInputs["localGw6"] = state ? state.localGw6 : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["remoteGw"] = state ? state.remoteGw : undefined;
            resourceInputs["remoteGw6"] = state ? state.remoteGw6 : undefined;
            resourceInputs["sequenceNumberReception"] = state ? state.sequenceNumberReception : undefined;
            resourceInputs["sequenceNumberTransmission"] = state ? state.sequenceNumberTransmission : undefined;
            resourceInputs["useSdwan"] = state ? state.useSdwan : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as GretunnelArgs | undefined;
            if ((!args || args.localGw === undefined) && !opts.urn) {
                throw new Error("Missing required property 'localGw'");
            }
            if ((!args || args.remoteGw === undefined) && !opts.urn) {
                throw new Error("Missing required property 'remoteGw'");
            }
            resourceInputs["checksumReception"] = args ? args.checksumReception : undefined;
            resourceInputs["checksumTransmission"] = args ? args.checksumTransmission : undefined;
            resourceInputs["diffservcode"] = args ? args.diffservcode : undefined;
            resourceInputs["dscpCopying"] = args ? args.dscpCopying : undefined;
            resourceInputs["interface"] = args ? args.interface : undefined;
            resourceInputs["ipVersion"] = args ? args.ipVersion : undefined;
            resourceInputs["keepaliveFailtimes"] = args ? args.keepaliveFailtimes : undefined;
            resourceInputs["keepaliveInterval"] = args ? args.keepaliveInterval : undefined;
            resourceInputs["keyInbound"] = args ? args.keyInbound : undefined;
            resourceInputs["keyOutbound"] = args ? args.keyOutbound : undefined;
            resourceInputs["localGw"] = args ? args.localGw : undefined;
            resourceInputs["localGw6"] = args ? args.localGw6 : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["remoteGw"] = args ? args.remoteGw : undefined;
            resourceInputs["remoteGw6"] = args ? args.remoteGw6 : undefined;
            resourceInputs["sequenceNumberReception"] = args ? args.sequenceNumberReception : undefined;
            resourceInputs["sequenceNumberTransmission"] = args ? args.sequenceNumberTransmission : undefined;
            resourceInputs["useSdwan"] = args ? args.useSdwan : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Gretunnel.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Gretunnel resources.
 */
export interface GretunnelState {
    /**
     * Enable/disable validating checksums in received GRE packets. Valid values: `disable`, `enable`.
     */
    checksumReception?: pulumi.Input<string>;
    /**
     * Enable/disable including checksums in transmitted GRE packets. Valid values: `disable`, `enable`.
     */
    checksumTransmission?: pulumi.Input<string>;
    /**
     * DiffServ setting to be applied to GRE tunnel outer IP header.
     */
    diffservcode?: pulumi.Input<string>;
    /**
     * Enable/disable DSCP copying. Valid values: `disable`, `enable`.
     */
    dscpCopying?: pulumi.Input<string>;
    /**
     * Interface name.
     */
    interface?: pulumi.Input<string>;
    /**
     * IP version to use for VPN interface. Valid values: `4`, `6`.
     */
    ipVersion?: pulumi.Input<string>;
    /**
     * Number of consecutive unreturned keepalive messages before a GRE connection is considered down (1 - 255).
     */
    keepaliveFailtimes?: pulumi.Input<number>;
    /**
     * Keepalive message interval (0 - 32767, 0 = disabled).
     */
    keepaliveInterval?: pulumi.Input<number>;
    /**
     * Require received GRE packets contain this key (0 - 4294967295).
     */
    keyInbound?: pulumi.Input<number>;
    /**
     * Include this key in transmitted GRE packets (0 - 4294967295).
     */
    keyOutbound?: pulumi.Input<number>;
    /**
     * IP address of the local gateway.
     */
    localGw?: pulumi.Input<string>;
    /**
     * IPv6 address of the local gateway.
     */
    localGw6?: pulumi.Input<string>;
    /**
     * Tunnel name.
     */
    name?: pulumi.Input<string>;
    /**
     * IP address of the remote gateway.
     */
    remoteGw?: pulumi.Input<string>;
    /**
     * IPv6 address of the remote gateway.
     */
    remoteGw6?: pulumi.Input<string>;
    /**
     * Enable/disable validating sequence numbers in received GRE packets. Valid values: `disable`, `enable`.
     */
    sequenceNumberReception?: pulumi.Input<string>;
    /**
     * Enable/disable including of sequence numbers in transmitted GRE packets. Valid values: `disable`, `enable`.
     */
    sequenceNumberTransmission?: pulumi.Input<string>;
    /**
     * Enable/disable use of SD-WAN to reach remote gateway. Valid values: `disable`, `enable`.
     */
    useSdwan?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Gretunnel resource.
 */
export interface GretunnelArgs {
    /**
     * Enable/disable validating checksums in received GRE packets. Valid values: `disable`, `enable`.
     */
    checksumReception?: pulumi.Input<string>;
    /**
     * Enable/disable including checksums in transmitted GRE packets. Valid values: `disable`, `enable`.
     */
    checksumTransmission?: pulumi.Input<string>;
    /**
     * DiffServ setting to be applied to GRE tunnel outer IP header.
     */
    diffservcode?: pulumi.Input<string>;
    /**
     * Enable/disable DSCP copying. Valid values: `disable`, `enable`.
     */
    dscpCopying?: pulumi.Input<string>;
    /**
     * Interface name.
     */
    interface?: pulumi.Input<string>;
    /**
     * IP version to use for VPN interface. Valid values: `4`, `6`.
     */
    ipVersion?: pulumi.Input<string>;
    /**
     * Number of consecutive unreturned keepalive messages before a GRE connection is considered down (1 - 255).
     */
    keepaliveFailtimes?: pulumi.Input<number>;
    /**
     * Keepalive message interval (0 - 32767, 0 = disabled).
     */
    keepaliveInterval?: pulumi.Input<number>;
    /**
     * Require received GRE packets contain this key (0 - 4294967295).
     */
    keyInbound?: pulumi.Input<number>;
    /**
     * Include this key in transmitted GRE packets (0 - 4294967295).
     */
    keyOutbound?: pulumi.Input<number>;
    /**
     * IP address of the local gateway.
     */
    localGw: pulumi.Input<string>;
    /**
     * IPv6 address of the local gateway.
     */
    localGw6?: pulumi.Input<string>;
    /**
     * Tunnel name.
     */
    name?: pulumi.Input<string>;
    /**
     * IP address of the remote gateway.
     */
    remoteGw: pulumi.Input<string>;
    /**
     * IPv6 address of the remote gateway.
     */
    remoteGw6?: pulumi.Input<string>;
    /**
     * Enable/disable validating sequence numbers in received GRE packets. Valid values: `disable`, `enable`.
     */
    sequenceNumberReception?: pulumi.Input<string>;
    /**
     * Enable/disable including of sequence numbers in transmitted GRE packets. Valid values: `disable`, `enable`.
     */
    sequenceNumberTransmission?: pulumi.Input<string>;
    /**
     * Enable/disable use of SD-WAN to reach remote gateway. Valid values: `disable`, `enable`.
     */
    useSdwan?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
