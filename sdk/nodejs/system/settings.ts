// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Configure VDOM settings.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumiverse/fortios";
 *
 * const trname = new fortios.system.Settings("trname", {
 *     allowLinkdownPath: "disable",
 *     guiWebfilter: "enable",
 *     opmode: "nat",
 *     sipSslPort: 5061,
 *     status: "enable",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * System Settings can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:system/settings:Settings labelname SystemSettings
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:system/settings:Settings labelname SystemSettings
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Settings extends pulumi.CustomResource {
    /**
     * Get an existing Settings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SettingsState, opts?: pulumi.CustomResourceOptions): Settings {
        return new Settings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:system/settings:Settings';

    /**
     * Returns true if the given object is an instance of Settings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Settings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Settings.__pulumiType;
    }

    /**
     * Enable/disable link down path. Valid values: `enable`, `disable`.
     */
    public readonly allowLinkdownPath!: pulumi.Output<string>;
    /**
     * Enable/disable allowing interface subnets to use overlapping IP addresses. Valid values: `enable`, `disable`.
     */
    public readonly allowSubnetOverlap!: pulumi.Output<string>;
    /**
     * Enable/disable application bandwidth tracking. Valid values: `disable`, `enable`.
     */
    public readonly applicationBandwidthTracking!: pulumi.Output<string>;
    /**
     * Enable/disable IPv4 asymmetric routing. Valid values: `enable`, `disable`.
     */
    public readonly asymroute!: pulumi.Output<string>;
    /**
     * Enable/disable asymmetric IPv6 routing. Valid values: `enable`, `disable`.
     */
    public readonly asymroute6!: pulumi.Output<string>;
    /**
     * Enable/disable asymmetric ICMPv6 routing. Valid values: `enable`, `disable`.
     */
    public readonly asymroute6Icmp!: pulumi.Output<string>;
    /**
     * Enable/disable ICMP asymmetric routing. Valid values: `enable`, `disable`.
     */
    public readonly asymrouteIcmp!: pulumi.Output<string>;
    /**
     * Enable/disable auxiliary session. Valid values: `enable`, `disable`.
     */
    public readonly auxiliarySession!: pulumi.Output<string>;
    /**
     * Enable/disable Bi-directional Forwarding Detection (BFD) on all interfaces. Valid values: `enable`, `disable`.
     */
    public readonly bfd!: pulumi.Output<string>;
    /**
     * BFD desired minimal transmit interval (1 - 100000 ms, default = 50).
     */
    public readonly bfdDesiredMinTx!: pulumi.Output<number>;
    /**
     * BFD detection multiplier (1 - 50, default = 3).
     */
    public readonly bfdDetectMult!: pulumi.Output<number>;
    /**
     * Enable to not enforce verifying the source port of BFD Packets. Valid values: `enable`, `disable`.
     */
    public readonly bfdDontEnforceSrcPort!: pulumi.Output<string>;
    /**
     * BFD required minimal receive interval (1 - 100000 ms, default = 50).
     */
    public readonly bfdRequiredMinRx!: pulumi.Output<number>;
    /**
     * Enable/disable blocking of land attacks. Valid values: `disable`, `enable`.
     */
    public readonly blockLandAttack!: pulumi.Output<string>;
    /**
     * Enable/disable central NAT. Valid values: `enable`, `disable`.
     */
    public readonly centralNat!: pulumi.Output<string>;
    /**
     * VDOM comments.
     */
    public readonly comments!: pulumi.Output<string | undefined>;
    /**
     * Enable/disable PCI DSS compliance checking. Valid values: `enable`, `disable`.
     */
    public readonly complianceCheck!: pulumi.Output<string>;
    /**
     * Consolidated firewall mode.
     */
    public readonly consolidatedFirewallMode!: pulumi.Output<string>;
    /**
     * Enable/disable policy service enforcement based on application default ports. Valid values: `enable`, `disable`.
     */
    public readonly defaultAppPortAsService!: pulumi.Output<string>;
    /**
     * Default policy expiry in days (0 - 365 days, default = 30).
     */
    public readonly defaultPolicyExpiryDays!: pulumi.Output<number>;
    /**
     * Configure how the FortiGate handles VoIP traffic when a policy that accepts the traffic doesn't include a VoIP profile. Valid values: `proxy-based`, `kernel-helper-based`.
     */
    public readonly defaultVoipAlgMode!: pulumi.Output<string>;
    /**
     * Enable/disable denying TCP by sending an ICMP communication prohibited packet. Valid values: `enable`, `disable`.
     */
    public readonly denyTcpWithIcmp!: pulumi.Output<string>;
    /**
     * Enable/disable detection of unknown ESP packets (default = enable). Valid values: `enable`, `disable`.
     */
    public readonly detectUnknownEsp!: pulumi.Output<string>;
    /**
     * Interface to use for management access for NAT mode.
     */
    public readonly device!: pulumi.Output<string>;
    /**
     * DHCPv6 server IPv6 address.
     */
    public readonly dhcp6ServerIp!: pulumi.Output<string>;
    /**
     * Enable/disable the DHCP Proxy. Valid values: `enable`, `disable`.
     */
    public readonly dhcpProxy!: pulumi.Output<string>;
    /**
     * Specify outgoing interface to reach server.
     */
    public readonly dhcpProxyInterface!: pulumi.Output<string>;
    /**
     * Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
     */
    public readonly dhcpProxyInterfaceSelectMethod!: pulumi.Output<string>;
    /**
     * DHCP Server IPv4 address.
     */
    public readonly dhcpServerIp!: pulumi.Output<string>;
    /**
     * Timeout for discovered devices (1 - 365 days, default = 28).
     */
    public readonly discoveredDeviceTimeout!: pulumi.Output<number>;
    /**
     * Enable/disable dirty session check caused by dynamic address updates. Valid values: `enable`, `disable`.
     */
    public readonly dynAddrSessionCheck!: pulumi.Output<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * Maximum number of Equal Cost Multi-Path (ECMP) next-hops. Set to 1 to disable ECMP routing (1 - 100, default = 10).
     */
    public readonly ecmpMaxPaths!: pulumi.Output<number>;
    /**
     * Enable/disable using DNS to validate email addresses collected by a captive portal. Valid values: `disable`, `enable`.
     */
    public readonly emailPortalCheckDns!: pulumi.Output<string>;
    /**
     * Enable/disable dirty session check caused by external resource updates. Valid values: `enable`, `disable`.
     */
    public readonly extResourceSessionCheck!: pulumi.Output<string>;
    /**
     * Select how to manage sessions affected by firewall policy configuration changes. Valid values: `check-all`, `check-new`, `check-policy-option`.
     */
    public readonly firewallSessionDirty!: pulumi.Output<string>;
    /**
     * Enable/disable dirty session check caused by FQDN updates. Valid values: `enable`, `disable`.
     */
    public readonly fqdnSessionCheck!: pulumi.Output<string>;
    /**
     * Enable/disable checking for a matching policy each time hairpin traffic goes through the FortiGate. Valid values: `enable`, `disable`.
     */
    public readonly fwSessionHairpin!: pulumi.Output<string>;
    /**
     * Transparent mode IPv4 default gateway IP address.
     */
    public readonly gateway!: pulumi.Output<string>;
    /**
     * Transparent mode IPv4 default gateway IP address.
     */
    public readonly gateway6!: pulumi.Output<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    /**
     * Enable/disable advanced policy configuration on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiAdvancedPolicy!: pulumi.Output<string>;
    /**
     * Enable/disable advanced wireless features in GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiAdvancedWirelessFeatures!: pulumi.Output<string>;
    /**
     * Enable/disable the requirement for policy naming on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiAllowUnnamedPolicy!: pulumi.Output<string>;
    /**
     * Enable/disable AntiVirus on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiAntivirus!: pulumi.Output<string>;
    /**
     * Enable/disable FortiAP profiles on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiApProfile!: pulumi.Output<string>;
    /**
     * Enable/disable application control on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiApplicationControl!: pulumi.Output<string>;
    /**
     * Enable/disable Inline-CASB on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiCasb!: pulumi.Output<string>;
    /**
     * Default columns to display for policy lists on GUI. The structure of `guiDefaultPolicyColumns` block is documented below.
     */
    public readonly guiDefaultPolicyColumns!: pulumi.Output<outputs.system.SettingsGuiDefaultPolicyColumn[] | undefined>;
    /**
     * Enable/disable advanced DHCP options on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiDhcpAdvanced!: pulumi.Output<string>;
    /**
     * Enable/disable DLP on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiDlp!: pulumi.Output<string>;
    /**
     * Enable/disable Data Leak Prevention on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiDlpProfile!: pulumi.Output<string>;
    /**
     * Enable/disable DNS database settings on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiDnsDatabase!: pulumi.Output<string>;
    /**
     * Enable/disable DNS Filtering on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiDnsfilter!: pulumi.Output<string>;
    /**
     * Enable/disable Domain and IP Reputation on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiDomainIpReputation!: pulumi.Output<string>;
    /**
     * Enable/disable DoS policies on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiDosPolicy!: pulumi.Output<string>;
    /**
     * Enable/disable Create dynamic addresses to manage known devices. Valid values: `enable`, `disable`.
     */
    public readonly guiDynamicDeviceOsId!: pulumi.Output<string>;
    /**
     * Enable/disable RADIUS Single Sign On (RSSO) on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiDynamicProfileDisplay!: pulumi.Output<string>;
    /**
     * Enable/disable dynamic routing on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiDynamicRouting!: pulumi.Output<string>;
    /**
     * Enable/disable email collection on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiEmailCollection!: pulumi.Output<string>;
    /**
     * Enable/disable endpoint control on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiEndpointControl!: pulumi.Output<string>;
    /**
     * Enable/disable advanced endpoint control options on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiEndpointControlAdvanced!: pulumi.Output<string>;
    /**
     * Enforce change summaries for select tables in the GUI. Valid values: `disable`, `require`, `optional`.
     */
    public readonly guiEnforceChangeSummary!: pulumi.Output<string>;
    /**
     * Enable/disable the explicit proxy on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiExplicitProxy!: pulumi.Output<string>;
    /**
     * Enable/disable File-filter on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiFileFilter!: pulumi.Output<string>;
    /**
     * Enable/disable FortiAP split tunneling on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiFortiapSplitTunneling!: pulumi.Output<string>;
    /**
     * Enable/disable FortiExtender on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiFortiextenderController!: pulumi.Output<string>;
    /**
     * Enable/disable ICAP on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiIcap!: pulumi.Output<string>;
    /**
     * Enable/disable implicit firewall policies on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiImplicitPolicy!: pulumi.Output<string>;
    /**
     * Enable/disable IPS on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiIps!: pulumi.Output<string>;
    /**
     * Enable/disable server load balancing on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiLoadBalance!: pulumi.Output<string>;
    /**
     * Enable/disable Local-In policies on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiLocalInPolicy!: pulumi.Output<string>;
    /**
     * Enable/disable local reports on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiLocalReports!: pulumi.Output<string>;
    /**
     * Enable/disable multicast firewall policies on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiMulticastPolicy!: pulumi.Output<string>;
    /**
     * Enable/disable adding multiple interfaces to a policy on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiMultipleInterfacePolicy!: pulumi.Output<string>;
    /**
     * Enable/disable multiple UTM profiles on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiMultipleUtmProfiles!: pulumi.Output<string>;
    /**
     * Enable/disable NAT46 and NAT64 settings on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiNat4664!: pulumi.Output<string>;
    /**
     * Enable/disable object colors on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiObjectColors!: pulumi.Output<string>;
    /**
     * Enable/disable Show Operational Technology Purdue Model. Valid values: `enable`, `disable`.
     */
    public readonly guiOt!: pulumi.Output<string>;
    /**
     * Enable/disable policy disclaimer on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiPerPolicyDisclaimer!: pulumi.Output<string>;
    /**
     * Enable/disable policy-based IPsec VPN on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiPolicyBasedIpsec!: pulumi.Output<string>;
    /**
     * Enable/disable policy disclaimer on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiPolicyDisclaimer!: pulumi.Output<string>;
    /**
     * Enable/disable firewall policy learning mode on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiPolicyLearning!: pulumi.Output<string>;
    /**
     * Enable/disable the proxy features on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiProxyInspection!: pulumi.Output<string>;
    /**
     * Enable/disable replacement message groups on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiReplacementMessageGroups!: pulumi.Output<string>;
    /**
     * Enable/disable route-tag addresses on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiRouteTagAddressCreation!: pulumi.Output<string>;
    /**
     * Enable/disable Security Profile Groups on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiSecurityProfileGroup!: pulumi.Output<string>;
    /**
     * Enable/disable Antispam on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiSpamfilter!: pulumi.Output<string>;
    /**
     * Enable/disable SSL-VPN settings pages on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiSslvpn!: pulumi.Output<string>;
    /**
     * Enable/disable SSL-VPN personal bookmark management on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiSslvpnPersonalBookmarks!: pulumi.Output<string>;
    /**
     * Enable/disable SSL-VPN realms on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiSslvpnRealms!: pulumi.Output<string>;
    /**
     * Enable/disable the switch controller on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiSwitchController!: pulumi.Output<string>;
    /**
     * Enable/disable threat weight on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiThreatWeight!: pulumi.Output<string>;
    /**
     * Enable/disable traffic shaping on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiTrafficShaping!: pulumi.Output<string>;
    /**
     * Enable/disable Video filtering on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiVideofilter!: pulumi.Output<string>;
    /**
     * Enable/disable Virtual Patching on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiVirtualPatchProfile!: pulumi.Output<string>;
    /**
     * Enable/disable VoIP profiles on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiVoipProfile!: pulumi.Output<string>;
    /**
     * Enable/disable VPN tunnels on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiVpn!: pulumi.Output<string>;
    /**
     * Enable/disable Web Application Firewall on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiWafProfile!: pulumi.Output<string>;
    /**
     * Enable/disable SD-WAN on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiWanLoadBalancing!: pulumi.Output<string>;
    /**
     * Enable/disable WAN Optimization and Web Caching on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiWanoptCache!: pulumi.Output<string>;
    /**
     * Enable/disable Web filtering on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiWebfilter!: pulumi.Output<string>;
    /**
     * Enable/disable advanced web filtering on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiWebfilterAdvanced!: pulumi.Output<string>;
    /**
     * Enable/disable the wireless controller on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiWirelessController!: pulumi.Output<string>;
    /**
     * Enable/disable Zero Trust Network Access features on the GUI. Valid values: `enable`, `disable`.
     */
    public readonly guiZtna!: pulumi.Output<string>;
    /**
     * Enable/disable H323 direct model. Valid values: `disable`, `enable`.
     */
    public readonly h323DirectModel!: pulumi.Output<string>;
    /**
     * Offload HTTP traffic to FortiWeb or FortiCache. Valid values: `fortiweb`, `forticache`.
     */
    public readonly httpExternalDest!: pulumi.Output<string>;
    /**
     * Configure IKE ASN.1 Distinguished Name format conventions. Valid values: `with-space`, `no-space`.
     */
    public readonly ikeDnFormat!: pulumi.Output<string>;
    /**
     * UDP port for IKE/IPsec traffic in NAT-T mode (default 4500).
     */
    public readonly ikeNattPort!: pulumi.Output<number>;
    /**
     * Enable/disable IKE Policy Based Routing (PBR). Valid values: `enable`, `disable`.
     */
    public readonly ikePolicyRoute!: pulumi.Output<string>;
    /**
     * UDP port for IKE/IPsec traffic (default 500).
     */
    public readonly ikePort!: pulumi.Output<number>;
    /**
     * Enable/disable IKE quick crash detection (RFC 6290). Valid values: `enable`, `disable`.
     */
    public readonly ikeQuickCrashDetect!: pulumi.Output<string>;
    /**
     * Enable/disable IKEv2 session resumption (RFC 5723). Valid values: `enable`, `disable`.
     */
    public readonly ikeSessionResume!: pulumi.Output<string>;
    /**
     * TCP port for IKE/IPsec traffic (default 4500).
     */
    public readonly ikeTcpPort!: pulumi.Output<number>;
    /**
     * Enable/disable implicitly allowing DNS traffic. Valid values: `enable`, `disable`.
     */
    public readonly implicitAllowDns!: pulumi.Output<string>;
    /**
     * Inspection mode (proxy-based or flow-based). Valid values: `proxy`, `flow`.
     */
    public readonly inspectionMode!: pulumi.Output<string>;
    /**
     * Enable/disable Internet Service database caching. Valid values: `disable`, `enable`.
     */
    public readonly internetServiceDatabaseCache!: pulumi.Output<string>;
    /**
     * IP address and netmask.
     */
    public readonly ip!: pulumi.Output<string>;
    /**
     * IPv6 address prefix for NAT mode.
     */
    public readonly ip6!: pulumi.Output<string>;
    /**
     * Controller IP address or FQDN to connect.
     */
    public readonly lanExtensionControllerAddr!: pulumi.Output<string>;
    /**
     * Enable/disable link down access traffic. Valid values: `enable`, `disable`.
     */
    public readonly linkDownAccess!: pulumi.Output<string>;
    /**
     * Enable/disable Link Layer Discovery Protocol (LLDP) reception for this VDOM or apply global settings to this VDOM. Valid values: `enable`, `disable`, `global`.
     */
    public readonly lldpReception!: pulumi.Output<string>;
    /**
     * Enable/disable Link Layer Discovery Protocol (LLDP) transmission for this VDOM or apply global settings to this VDOM. Valid values: `enable`, `disable`, `global`.
     */
    public readonly lldpTransmission!: pulumi.Output<string>;
    /**
     * Local location ID in the form of an IPv4 address.
     */
    public readonly locationId!: pulumi.Output<string>;
    /**
     * Duration of MAC addresses in Transparent mode (300 - 8640000 sec, default = 300).
     */
    public readonly macTtl!: pulumi.Output<number>;
    /**
     * Transparent mode IPv4 management IP address and netmask.
     */
    public readonly manageip!: pulumi.Output<string>;
    /**
     * Transparent mode IPv6 management IP address and netmask.
     */
    public readonly manageip6!: pulumi.Output<string>;
    /**
     * Enable/disable multicast forwarding. Valid values: `enable`, `disable`.
     */
    public readonly multicastForward!: pulumi.Output<string>;
    /**
     * Enable/disable allowing multicast traffic through the FortiGate without a policy check. Valid values: `enable`, `disable`.
     */
    public readonly multicastSkipPolicy!: pulumi.Output<string>;
    /**
     * Enable/disable preventing the FortiGate from changing the TTL for forwarded multicast packets. Valid values: `enable`, `disable`.
     */
    public readonly multicastTtlNotchange!: pulumi.Output<string>;
    /**
     * Enable/disable mandatory IPv4 packet forwarding in NAT46. Valid values: `enable`, `disable`.
     */
    public readonly nat46ForceIpv4PacketForwarding!: pulumi.Output<string>;
    /**
     * Enable/disable NAT46 IPv6 fragment header generation. Valid values: `enable`, `disable`.
     */
    public readonly nat46GenerateIpv6FragmentHeader!: pulumi.Output<string>;
    /**
     * Enable/disable mandatory IPv6 packet forwarding in NAT64. Valid values: `enable`, `disable`.
     */
    public readonly nat64ForceIpv6PacketForwarding!: pulumi.Output<string>;
    /**
     * Next Generation Firewall (NGFW) mode. Valid values: `profile-based`, `policy-based`.
     */
    public readonly ngfwMode!: pulumi.Output<string>;
    /**
     * Firewall operation mode (NAT or Transparent). Valid values: `nat`, `transparent`.
     */
    public readonly opmode!: pulumi.Output<string>;
    /**
     * Enable/disable action to take on PRP trailer. Valid values: `enable`, `disable`.
     */
    public readonly prpTrailerAction!: pulumi.Output<string>;
    /**
     * TCP port the SCCP proxy monitors for SCCP traffic (0 - 65535, default = 2000).
     */
    public readonly sccpPort!: pulumi.Output<number>;
    /**
     * Enable/disable SCTP session creation without SCTP INIT. Valid values: `enable`, `disable`.
     */
    public readonly sctpSessionWithoutInit!: pulumi.Output<string>;
    /**
     * Enable/disable including denied session in the session table. Valid values: `enable`, `disable`.
     */
    public readonly sesDeniedTraffic!: pulumi.Output<string>;
    /**
     * Enable/disable the SIP kernel session helper to create an expectation for port 5060. Valid values: `enable`, `disable`.
     */
    public readonly sipExpectation!: pulumi.Output<string>;
    /**
     * Enable/disable the SIP session helper to process SIP sessions unless SIP sessions are accepted by the SIP application layer gateway (ALG). Valid values: `enable`, `disable`.
     */
    public readonly sipHelper!: pulumi.Output<string>;
    /**
     * Enable/disable recording the original SIP source IP address when NAT is used. Valid values: `enable`, `disable`.
     */
    public readonly sipNatTrace!: pulumi.Output<string>;
    /**
     * TCP port the SIP proxy monitors for SIP SSL/TLS traffic (0 - 65535, default = 5061).
     */
    public readonly sipSslPort!: pulumi.Output<number>;
    /**
     * TCP port the SIP proxy monitors for SIP traffic (0 - 65535, default = 5060).
     */
    public readonly sipTcpPort!: pulumi.Output<number>;
    /**
     * UDP port the SIP proxy monitors for SIP traffic (0 - 65535, default = 5060).
     */
    public readonly sipUdpPort!: pulumi.Output<number>;
    /**
     * Enable/disable source NAT (SNAT) for hairpin traffic. Valid values: `enable`, `disable`.
     */
    public readonly snatHairpinTraffic!: pulumi.Output<string>;
    /**
     * Profile for SSL/SSH inspection.
     */
    public readonly sslSshProfile!: pulumi.Output<string>;
    /**
     * Enable/disable this VDOM. Valid values: `enable`, `disable`.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * Enable/disable strict source verification. Valid values: `enable`, `disable`.
     */
    public readonly strictSrcCheck!: pulumi.Output<string>;
    /**
     * Enable/disable allowing TCP session without SYN flags. Valid values: `enable`, `disable`.
     */
    public readonly tcpSessionWithoutSyn!: pulumi.Output<string>;
    /**
     * Enable/disable converting antispam tags to UTF-8 for better non-ASCII character support. Valid values: `enable`, `disable`.
     */
    public readonly utf8SpamTagging!: pulumi.Output<string>;
    /**
     * IPv4 Equal-cost multi-path (ECMP) routing and load balancing mode. Valid values: `source-ip-based`, `weight-based`, `usage-based`, `source-dest-ip-based`.
     */
    public readonly v4EcmpMode!: pulumi.Output<string>;
    /**
     * VDOM type (traffic or admin).
     */
    public readonly vdomType!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;
    /**
     * Enable/disable periodic VPN log statistics for one or more types of VPN. Separate names with a space. Valid values: `ipsec`, `pptp`, `l2tp`, `ssl`.
     */
    public readonly vpnStatsLog!: pulumi.Output<string>;
    /**
     * Period to send VPN log statistics (0 or 60 - 86400 sec).
     */
    public readonly vpnStatsPeriod!: pulumi.Output<number>;
    /**
     * Enable/disable WCCP cache engine. Valid values: `enable`, `disable`.
     */
    public readonly wccpCacheEngine!: pulumi.Output<string>;

    /**
     * Create a Settings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SettingsArgs | SettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SettingsState | undefined;
            resourceInputs["allowLinkdownPath"] = state ? state.allowLinkdownPath : undefined;
            resourceInputs["allowSubnetOverlap"] = state ? state.allowSubnetOverlap : undefined;
            resourceInputs["applicationBandwidthTracking"] = state ? state.applicationBandwidthTracking : undefined;
            resourceInputs["asymroute"] = state ? state.asymroute : undefined;
            resourceInputs["asymroute6"] = state ? state.asymroute6 : undefined;
            resourceInputs["asymroute6Icmp"] = state ? state.asymroute6Icmp : undefined;
            resourceInputs["asymrouteIcmp"] = state ? state.asymrouteIcmp : undefined;
            resourceInputs["auxiliarySession"] = state ? state.auxiliarySession : undefined;
            resourceInputs["bfd"] = state ? state.bfd : undefined;
            resourceInputs["bfdDesiredMinTx"] = state ? state.bfdDesiredMinTx : undefined;
            resourceInputs["bfdDetectMult"] = state ? state.bfdDetectMult : undefined;
            resourceInputs["bfdDontEnforceSrcPort"] = state ? state.bfdDontEnforceSrcPort : undefined;
            resourceInputs["bfdRequiredMinRx"] = state ? state.bfdRequiredMinRx : undefined;
            resourceInputs["blockLandAttack"] = state ? state.blockLandAttack : undefined;
            resourceInputs["centralNat"] = state ? state.centralNat : undefined;
            resourceInputs["comments"] = state ? state.comments : undefined;
            resourceInputs["complianceCheck"] = state ? state.complianceCheck : undefined;
            resourceInputs["consolidatedFirewallMode"] = state ? state.consolidatedFirewallMode : undefined;
            resourceInputs["defaultAppPortAsService"] = state ? state.defaultAppPortAsService : undefined;
            resourceInputs["defaultPolicyExpiryDays"] = state ? state.defaultPolicyExpiryDays : undefined;
            resourceInputs["defaultVoipAlgMode"] = state ? state.defaultVoipAlgMode : undefined;
            resourceInputs["denyTcpWithIcmp"] = state ? state.denyTcpWithIcmp : undefined;
            resourceInputs["detectUnknownEsp"] = state ? state.detectUnknownEsp : undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["dhcp6ServerIp"] = state ? state.dhcp6ServerIp : undefined;
            resourceInputs["dhcpProxy"] = state ? state.dhcpProxy : undefined;
            resourceInputs["dhcpProxyInterface"] = state ? state.dhcpProxyInterface : undefined;
            resourceInputs["dhcpProxyInterfaceSelectMethod"] = state ? state.dhcpProxyInterfaceSelectMethod : undefined;
            resourceInputs["dhcpServerIp"] = state ? state.dhcpServerIp : undefined;
            resourceInputs["discoveredDeviceTimeout"] = state ? state.discoveredDeviceTimeout : undefined;
            resourceInputs["dynAddrSessionCheck"] = state ? state.dynAddrSessionCheck : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["ecmpMaxPaths"] = state ? state.ecmpMaxPaths : undefined;
            resourceInputs["emailPortalCheckDns"] = state ? state.emailPortalCheckDns : undefined;
            resourceInputs["extResourceSessionCheck"] = state ? state.extResourceSessionCheck : undefined;
            resourceInputs["firewallSessionDirty"] = state ? state.firewallSessionDirty : undefined;
            resourceInputs["fqdnSessionCheck"] = state ? state.fqdnSessionCheck : undefined;
            resourceInputs["fwSessionHairpin"] = state ? state.fwSessionHairpin : undefined;
            resourceInputs["gateway"] = state ? state.gateway : undefined;
            resourceInputs["gateway6"] = state ? state.gateway6 : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["guiAdvancedPolicy"] = state ? state.guiAdvancedPolicy : undefined;
            resourceInputs["guiAdvancedWirelessFeatures"] = state ? state.guiAdvancedWirelessFeatures : undefined;
            resourceInputs["guiAllowUnnamedPolicy"] = state ? state.guiAllowUnnamedPolicy : undefined;
            resourceInputs["guiAntivirus"] = state ? state.guiAntivirus : undefined;
            resourceInputs["guiApProfile"] = state ? state.guiApProfile : undefined;
            resourceInputs["guiApplicationControl"] = state ? state.guiApplicationControl : undefined;
            resourceInputs["guiCasb"] = state ? state.guiCasb : undefined;
            resourceInputs["guiDefaultPolicyColumns"] = state ? state.guiDefaultPolicyColumns : undefined;
            resourceInputs["guiDhcpAdvanced"] = state ? state.guiDhcpAdvanced : undefined;
            resourceInputs["guiDlp"] = state ? state.guiDlp : undefined;
            resourceInputs["guiDlpProfile"] = state ? state.guiDlpProfile : undefined;
            resourceInputs["guiDnsDatabase"] = state ? state.guiDnsDatabase : undefined;
            resourceInputs["guiDnsfilter"] = state ? state.guiDnsfilter : undefined;
            resourceInputs["guiDomainIpReputation"] = state ? state.guiDomainIpReputation : undefined;
            resourceInputs["guiDosPolicy"] = state ? state.guiDosPolicy : undefined;
            resourceInputs["guiDynamicDeviceOsId"] = state ? state.guiDynamicDeviceOsId : undefined;
            resourceInputs["guiDynamicProfileDisplay"] = state ? state.guiDynamicProfileDisplay : undefined;
            resourceInputs["guiDynamicRouting"] = state ? state.guiDynamicRouting : undefined;
            resourceInputs["guiEmailCollection"] = state ? state.guiEmailCollection : undefined;
            resourceInputs["guiEndpointControl"] = state ? state.guiEndpointControl : undefined;
            resourceInputs["guiEndpointControlAdvanced"] = state ? state.guiEndpointControlAdvanced : undefined;
            resourceInputs["guiEnforceChangeSummary"] = state ? state.guiEnforceChangeSummary : undefined;
            resourceInputs["guiExplicitProxy"] = state ? state.guiExplicitProxy : undefined;
            resourceInputs["guiFileFilter"] = state ? state.guiFileFilter : undefined;
            resourceInputs["guiFortiapSplitTunneling"] = state ? state.guiFortiapSplitTunneling : undefined;
            resourceInputs["guiFortiextenderController"] = state ? state.guiFortiextenderController : undefined;
            resourceInputs["guiIcap"] = state ? state.guiIcap : undefined;
            resourceInputs["guiImplicitPolicy"] = state ? state.guiImplicitPolicy : undefined;
            resourceInputs["guiIps"] = state ? state.guiIps : undefined;
            resourceInputs["guiLoadBalance"] = state ? state.guiLoadBalance : undefined;
            resourceInputs["guiLocalInPolicy"] = state ? state.guiLocalInPolicy : undefined;
            resourceInputs["guiLocalReports"] = state ? state.guiLocalReports : undefined;
            resourceInputs["guiMulticastPolicy"] = state ? state.guiMulticastPolicy : undefined;
            resourceInputs["guiMultipleInterfacePolicy"] = state ? state.guiMultipleInterfacePolicy : undefined;
            resourceInputs["guiMultipleUtmProfiles"] = state ? state.guiMultipleUtmProfiles : undefined;
            resourceInputs["guiNat4664"] = state ? state.guiNat4664 : undefined;
            resourceInputs["guiObjectColors"] = state ? state.guiObjectColors : undefined;
            resourceInputs["guiOt"] = state ? state.guiOt : undefined;
            resourceInputs["guiPerPolicyDisclaimer"] = state ? state.guiPerPolicyDisclaimer : undefined;
            resourceInputs["guiPolicyBasedIpsec"] = state ? state.guiPolicyBasedIpsec : undefined;
            resourceInputs["guiPolicyDisclaimer"] = state ? state.guiPolicyDisclaimer : undefined;
            resourceInputs["guiPolicyLearning"] = state ? state.guiPolicyLearning : undefined;
            resourceInputs["guiProxyInspection"] = state ? state.guiProxyInspection : undefined;
            resourceInputs["guiReplacementMessageGroups"] = state ? state.guiReplacementMessageGroups : undefined;
            resourceInputs["guiRouteTagAddressCreation"] = state ? state.guiRouteTagAddressCreation : undefined;
            resourceInputs["guiSecurityProfileGroup"] = state ? state.guiSecurityProfileGroup : undefined;
            resourceInputs["guiSpamfilter"] = state ? state.guiSpamfilter : undefined;
            resourceInputs["guiSslvpn"] = state ? state.guiSslvpn : undefined;
            resourceInputs["guiSslvpnPersonalBookmarks"] = state ? state.guiSslvpnPersonalBookmarks : undefined;
            resourceInputs["guiSslvpnRealms"] = state ? state.guiSslvpnRealms : undefined;
            resourceInputs["guiSwitchController"] = state ? state.guiSwitchController : undefined;
            resourceInputs["guiThreatWeight"] = state ? state.guiThreatWeight : undefined;
            resourceInputs["guiTrafficShaping"] = state ? state.guiTrafficShaping : undefined;
            resourceInputs["guiVideofilter"] = state ? state.guiVideofilter : undefined;
            resourceInputs["guiVirtualPatchProfile"] = state ? state.guiVirtualPatchProfile : undefined;
            resourceInputs["guiVoipProfile"] = state ? state.guiVoipProfile : undefined;
            resourceInputs["guiVpn"] = state ? state.guiVpn : undefined;
            resourceInputs["guiWafProfile"] = state ? state.guiWafProfile : undefined;
            resourceInputs["guiWanLoadBalancing"] = state ? state.guiWanLoadBalancing : undefined;
            resourceInputs["guiWanoptCache"] = state ? state.guiWanoptCache : undefined;
            resourceInputs["guiWebfilter"] = state ? state.guiWebfilter : undefined;
            resourceInputs["guiWebfilterAdvanced"] = state ? state.guiWebfilterAdvanced : undefined;
            resourceInputs["guiWirelessController"] = state ? state.guiWirelessController : undefined;
            resourceInputs["guiZtna"] = state ? state.guiZtna : undefined;
            resourceInputs["h323DirectModel"] = state ? state.h323DirectModel : undefined;
            resourceInputs["httpExternalDest"] = state ? state.httpExternalDest : undefined;
            resourceInputs["ikeDnFormat"] = state ? state.ikeDnFormat : undefined;
            resourceInputs["ikeNattPort"] = state ? state.ikeNattPort : undefined;
            resourceInputs["ikePolicyRoute"] = state ? state.ikePolicyRoute : undefined;
            resourceInputs["ikePort"] = state ? state.ikePort : undefined;
            resourceInputs["ikeQuickCrashDetect"] = state ? state.ikeQuickCrashDetect : undefined;
            resourceInputs["ikeSessionResume"] = state ? state.ikeSessionResume : undefined;
            resourceInputs["ikeTcpPort"] = state ? state.ikeTcpPort : undefined;
            resourceInputs["implicitAllowDns"] = state ? state.implicitAllowDns : undefined;
            resourceInputs["inspectionMode"] = state ? state.inspectionMode : undefined;
            resourceInputs["internetServiceDatabaseCache"] = state ? state.internetServiceDatabaseCache : undefined;
            resourceInputs["ip"] = state ? state.ip : undefined;
            resourceInputs["ip6"] = state ? state.ip6 : undefined;
            resourceInputs["lanExtensionControllerAddr"] = state ? state.lanExtensionControllerAddr : undefined;
            resourceInputs["linkDownAccess"] = state ? state.linkDownAccess : undefined;
            resourceInputs["lldpReception"] = state ? state.lldpReception : undefined;
            resourceInputs["lldpTransmission"] = state ? state.lldpTransmission : undefined;
            resourceInputs["locationId"] = state ? state.locationId : undefined;
            resourceInputs["macTtl"] = state ? state.macTtl : undefined;
            resourceInputs["manageip"] = state ? state.manageip : undefined;
            resourceInputs["manageip6"] = state ? state.manageip6 : undefined;
            resourceInputs["multicastForward"] = state ? state.multicastForward : undefined;
            resourceInputs["multicastSkipPolicy"] = state ? state.multicastSkipPolicy : undefined;
            resourceInputs["multicastTtlNotchange"] = state ? state.multicastTtlNotchange : undefined;
            resourceInputs["nat46ForceIpv4PacketForwarding"] = state ? state.nat46ForceIpv4PacketForwarding : undefined;
            resourceInputs["nat46GenerateIpv6FragmentHeader"] = state ? state.nat46GenerateIpv6FragmentHeader : undefined;
            resourceInputs["nat64ForceIpv6PacketForwarding"] = state ? state.nat64ForceIpv6PacketForwarding : undefined;
            resourceInputs["ngfwMode"] = state ? state.ngfwMode : undefined;
            resourceInputs["opmode"] = state ? state.opmode : undefined;
            resourceInputs["prpTrailerAction"] = state ? state.prpTrailerAction : undefined;
            resourceInputs["sccpPort"] = state ? state.sccpPort : undefined;
            resourceInputs["sctpSessionWithoutInit"] = state ? state.sctpSessionWithoutInit : undefined;
            resourceInputs["sesDeniedTraffic"] = state ? state.sesDeniedTraffic : undefined;
            resourceInputs["sipExpectation"] = state ? state.sipExpectation : undefined;
            resourceInputs["sipHelper"] = state ? state.sipHelper : undefined;
            resourceInputs["sipNatTrace"] = state ? state.sipNatTrace : undefined;
            resourceInputs["sipSslPort"] = state ? state.sipSslPort : undefined;
            resourceInputs["sipTcpPort"] = state ? state.sipTcpPort : undefined;
            resourceInputs["sipUdpPort"] = state ? state.sipUdpPort : undefined;
            resourceInputs["snatHairpinTraffic"] = state ? state.snatHairpinTraffic : undefined;
            resourceInputs["sslSshProfile"] = state ? state.sslSshProfile : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["strictSrcCheck"] = state ? state.strictSrcCheck : undefined;
            resourceInputs["tcpSessionWithoutSyn"] = state ? state.tcpSessionWithoutSyn : undefined;
            resourceInputs["utf8SpamTagging"] = state ? state.utf8SpamTagging : undefined;
            resourceInputs["v4EcmpMode"] = state ? state.v4EcmpMode : undefined;
            resourceInputs["vdomType"] = state ? state.vdomType : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
            resourceInputs["vpnStatsLog"] = state ? state.vpnStatsLog : undefined;
            resourceInputs["vpnStatsPeriod"] = state ? state.vpnStatsPeriod : undefined;
            resourceInputs["wccpCacheEngine"] = state ? state.wccpCacheEngine : undefined;
        } else {
            const args = argsOrState as SettingsArgs | undefined;
            resourceInputs["allowLinkdownPath"] = args ? args.allowLinkdownPath : undefined;
            resourceInputs["allowSubnetOverlap"] = args ? args.allowSubnetOverlap : undefined;
            resourceInputs["applicationBandwidthTracking"] = args ? args.applicationBandwidthTracking : undefined;
            resourceInputs["asymroute"] = args ? args.asymroute : undefined;
            resourceInputs["asymroute6"] = args ? args.asymroute6 : undefined;
            resourceInputs["asymroute6Icmp"] = args ? args.asymroute6Icmp : undefined;
            resourceInputs["asymrouteIcmp"] = args ? args.asymrouteIcmp : undefined;
            resourceInputs["auxiliarySession"] = args ? args.auxiliarySession : undefined;
            resourceInputs["bfd"] = args ? args.bfd : undefined;
            resourceInputs["bfdDesiredMinTx"] = args ? args.bfdDesiredMinTx : undefined;
            resourceInputs["bfdDetectMult"] = args ? args.bfdDetectMult : undefined;
            resourceInputs["bfdDontEnforceSrcPort"] = args ? args.bfdDontEnforceSrcPort : undefined;
            resourceInputs["bfdRequiredMinRx"] = args ? args.bfdRequiredMinRx : undefined;
            resourceInputs["blockLandAttack"] = args ? args.blockLandAttack : undefined;
            resourceInputs["centralNat"] = args ? args.centralNat : undefined;
            resourceInputs["comments"] = args ? args.comments : undefined;
            resourceInputs["complianceCheck"] = args ? args.complianceCheck : undefined;
            resourceInputs["consolidatedFirewallMode"] = args ? args.consolidatedFirewallMode : undefined;
            resourceInputs["defaultAppPortAsService"] = args ? args.defaultAppPortAsService : undefined;
            resourceInputs["defaultPolicyExpiryDays"] = args ? args.defaultPolicyExpiryDays : undefined;
            resourceInputs["defaultVoipAlgMode"] = args ? args.defaultVoipAlgMode : undefined;
            resourceInputs["denyTcpWithIcmp"] = args ? args.denyTcpWithIcmp : undefined;
            resourceInputs["detectUnknownEsp"] = args ? args.detectUnknownEsp : undefined;
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["dhcp6ServerIp"] = args ? args.dhcp6ServerIp : undefined;
            resourceInputs["dhcpProxy"] = args ? args.dhcpProxy : undefined;
            resourceInputs["dhcpProxyInterface"] = args ? args.dhcpProxyInterface : undefined;
            resourceInputs["dhcpProxyInterfaceSelectMethod"] = args ? args.dhcpProxyInterfaceSelectMethod : undefined;
            resourceInputs["dhcpServerIp"] = args ? args.dhcpServerIp : undefined;
            resourceInputs["discoveredDeviceTimeout"] = args ? args.discoveredDeviceTimeout : undefined;
            resourceInputs["dynAddrSessionCheck"] = args ? args.dynAddrSessionCheck : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["ecmpMaxPaths"] = args ? args.ecmpMaxPaths : undefined;
            resourceInputs["emailPortalCheckDns"] = args ? args.emailPortalCheckDns : undefined;
            resourceInputs["extResourceSessionCheck"] = args ? args.extResourceSessionCheck : undefined;
            resourceInputs["firewallSessionDirty"] = args ? args.firewallSessionDirty : undefined;
            resourceInputs["fqdnSessionCheck"] = args ? args.fqdnSessionCheck : undefined;
            resourceInputs["fwSessionHairpin"] = args ? args.fwSessionHairpin : undefined;
            resourceInputs["gateway"] = args ? args.gateway : undefined;
            resourceInputs["gateway6"] = args ? args.gateway6 : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["guiAdvancedPolicy"] = args ? args.guiAdvancedPolicy : undefined;
            resourceInputs["guiAdvancedWirelessFeatures"] = args ? args.guiAdvancedWirelessFeatures : undefined;
            resourceInputs["guiAllowUnnamedPolicy"] = args ? args.guiAllowUnnamedPolicy : undefined;
            resourceInputs["guiAntivirus"] = args ? args.guiAntivirus : undefined;
            resourceInputs["guiApProfile"] = args ? args.guiApProfile : undefined;
            resourceInputs["guiApplicationControl"] = args ? args.guiApplicationControl : undefined;
            resourceInputs["guiCasb"] = args ? args.guiCasb : undefined;
            resourceInputs["guiDefaultPolicyColumns"] = args ? args.guiDefaultPolicyColumns : undefined;
            resourceInputs["guiDhcpAdvanced"] = args ? args.guiDhcpAdvanced : undefined;
            resourceInputs["guiDlp"] = args ? args.guiDlp : undefined;
            resourceInputs["guiDlpProfile"] = args ? args.guiDlpProfile : undefined;
            resourceInputs["guiDnsDatabase"] = args ? args.guiDnsDatabase : undefined;
            resourceInputs["guiDnsfilter"] = args ? args.guiDnsfilter : undefined;
            resourceInputs["guiDomainIpReputation"] = args ? args.guiDomainIpReputation : undefined;
            resourceInputs["guiDosPolicy"] = args ? args.guiDosPolicy : undefined;
            resourceInputs["guiDynamicDeviceOsId"] = args ? args.guiDynamicDeviceOsId : undefined;
            resourceInputs["guiDynamicProfileDisplay"] = args ? args.guiDynamicProfileDisplay : undefined;
            resourceInputs["guiDynamicRouting"] = args ? args.guiDynamicRouting : undefined;
            resourceInputs["guiEmailCollection"] = args ? args.guiEmailCollection : undefined;
            resourceInputs["guiEndpointControl"] = args ? args.guiEndpointControl : undefined;
            resourceInputs["guiEndpointControlAdvanced"] = args ? args.guiEndpointControlAdvanced : undefined;
            resourceInputs["guiEnforceChangeSummary"] = args ? args.guiEnforceChangeSummary : undefined;
            resourceInputs["guiExplicitProxy"] = args ? args.guiExplicitProxy : undefined;
            resourceInputs["guiFileFilter"] = args ? args.guiFileFilter : undefined;
            resourceInputs["guiFortiapSplitTunneling"] = args ? args.guiFortiapSplitTunneling : undefined;
            resourceInputs["guiFortiextenderController"] = args ? args.guiFortiextenderController : undefined;
            resourceInputs["guiIcap"] = args ? args.guiIcap : undefined;
            resourceInputs["guiImplicitPolicy"] = args ? args.guiImplicitPolicy : undefined;
            resourceInputs["guiIps"] = args ? args.guiIps : undefined;
            resourceInputs["guiLoadBalance"] = args ? args.guiLoadBalance : undefined;
            resourceInputs["guiLocalInPolicy"] = args ? args.guiLocalInPolicy : undefined;
            resourceInputs["guiLocalReports"] = args ? args.guiLocalReports : undefined;
            resourceInputs["guiMulticastPolicy"] = args ? args.guiMulticastPolicy : undefined;
            resourceInputs["guiMultipleInterfacePolicy"] = args ? args.guiMultipleInterfacePolicy : undefined;
            resourceInputs["guiMultipleUtmProfiles"] = args ? args.guiMultipleUtmProfiles : undefined;
            resourceInputs["guiNat4664"] = args ? args.guiNat4664 : undefined;
            resourceInputs["guiObjectColors"] = args ? args.guiObjectColors : undefined;
            resourceInputs["guiOt"] = args ? args.guiOt : undefined;
            resourceInputs["guiPerPolicyDisclaimer"] = args ? args.guiPerPolicyDisclaimer : undefined;
            resourceInputs["guiPolicyBasedIpsec"] = args ? args.guiPolicyBasedIpsec : undefined;
            resourceInputs["guiPolicyDisclaimer"] = args ? args.guiPolicyDisclaimer : undefined;
            resourceInputs["guiPolicyLearning"] = args ? args.guiPolicyLearning : undefined;
            resourceInputs["guiProxyInspection"] = args ? args.guiProxyInspection : undefined;
            resourceInputs["guiReplacementMessageGroups"] = args ? args.guiReplacementMessageGroups : undefined;
            resourceInputs["guiRouteTagAddressCreation"] = args ? args.guiRouteTagAddressCreation : undefined;
            resourceInputs["guiSecurityProfileGroup"] = args ? args.guiSecurityProfileGroup : undefined;
            resourceInputs["guiSpamfilter"] = args ? args.guiSpamfilter : undefined;
            resourceInputs["guiSslvpn"] = args ? args.guiSslvpn : undefined;
            resourceInputs["guiSslvpnPersonalBookmarks"] = args ? args.guiSslvpnPersonalBookmarks : undefined;
            resourceInputs["guiSslvpnRealms"] = args ? args.guiSslvpnRealms : undefined;
            resourceInputs["guiSwitchController"] = args ? args.guiSwitchController : undefined;
            resourceInputs["guiThreatWeight"] = args ? args.guiThreatWeight : undefined;
            resourceInputs["guiTrafficShaping"] = args ? args.guiTrafficShaping : undefined;
            resourceInputs["guiVideofilter"] = args ? args.guiVideofilter : undefined;
            resourceInputs["guiVirtualPatchProfile"] = args ? args.guiVirtualPatchProfile : undefined;
            resourceInputs["guiVoipProfile"] = args ? args.guiVoipProfile : undefined;
            resourceInputs["guiVpn"] = args ? args.guiVpn : undefined;
            resourceInputs["guiWafProfile"] = args ? args.guiWafProfile : undefined;
            resourceInputs["guiWanLoadBalancing"] = args ? args.guiWanLoadBalancing : undefined;
            resourceInputs["guiWanoptCache"] = args ? args.guiWanoptCache : undefined;
            resourceInputs["guiWebfilter"] = args ? args.guiWebfilter : undefined;
            resourceInputs["guiWebfilterAdvanced"] = args ? args.guiWebfilterAdvanced : undefined;
            resourceInputs["guiWirelessController"] = args ? args.guiWirelessController : undefined;
            resourceInputs["guiZtna"] = args ? args.guiZtna : undefined;
            resourceInputs["h323DirectModel"] = args ? args.h323DirectModel : undefined;
            resourceInputs["httpExternalDest"] = args ? args.httpExternalDest : undefined;
            resourceInputs["ikeDnFormat"] = args ? args.ikeDnFormat : undefined;
            resourceInputs["ikeNattPort"] = args ? args.ikeNattPort : undefined;
            resourceInputs["ikePolicyRoute"] = args ? args.ikePolicyRoute : undefined;
            resourceInputs["ikePort"] = args ? args.ikePort : undefined;
            resourceInputs["ikeQuickCrashDetect"] = args ? args.ikeQuickCrashDetect : undefined;
            resourceInputs["ikeSessionResume"] = args ? args.ikeSessionResume : undefined;
            resourceInputs["ikeTcpPort"] = args ? args.ikeTcpPort : undefined;
            resourceInputs["implicitAllowDns"] = args ? args.implicitAllowDns : undefined;
            resourceInputs["inspectionMode"] = args ? args.inspectionMode : undefined;
            resourceInputs["internetServiceDatabaseCache"] = args ? args.internetServiceDatabaseCache : undefined;
            resourceInputs["ip"] = args ? args.ip : undefined;
            resourceInputs["ip6"] = args ? args.ip6 : undefined;
            resourceInputs["lanExtensionControllerAddr"] = args ? args.lanExtensionControllerAddr : undefined;
            resourceInputs["linkDownAccess"] = args ? args.linkDownAccess : undefined;
            resourceInputs["lldpReception"] = args ? args.lldpReception : undefined;
            resourceInputs["lldpTransmission"] = args ? args.lldpTransmission : undefined;
            resourceInputs["locationId"] = args ? args.locationId : undefined;
            resourceInputs["macTtl"] = args ? args.macTtl : undefined;
            resourceInputs["manageip"] = args ? args.manageip : undefined;
            resourceInputs["manageip6"] = args ? args.manageip6 : undefined;
            resourceInputs["multicastForward"] = args ? args.multicastForward : undefined;
            resourceInputs["multicastSkipPolicy"] = args ? args.multicastSkipPolicy : undefined;
            resourceInputs["multicastTtlNotchange"] = args ? args.multicastTtlNotchange : undefined;
            resourceInputs["nat46ForceIpv4PacketForwarding"] = args ? args.nat46ForceIpv4PacketForwarding : undefined;
            resourceInputs["nat46GenerateIpv6FragmentHeader"] = args ? args.nat46GenerateIpv6FragmentHeader : undefined;
            resourceInputs["nat64ForceIpv6PacketForwarding"] = args ? args.nat64ForceIpv6PacketForwarding : undefined;
            resourceInputs["ngfwMode"] = args ? args.ngfwMode : undefined;
            resourceInputs["opmode"] = args ? args.opmode : undefined;
            resourceInputs["prpTrailerAction"] = args ? args.prpTrailerAction : undefined;
            resourceInputs["sccpPort"] = args ? args.sccpPort : undefined;
            resourceInputs["sctpSessionWithoutInit"] = args ? args.sctpSessionWithoutInit : undefined;
            resourceInputs["sesDeniedTraffic"] = args ? args.sesDeniedTraffic : undefined;
            resourceInputs["sipExpectation"] = args ? args.sipExpectation : undefined;
            resourceInputs["sipHelper"] = args ? args.sipHelper : undefined;
            resourceInputs["sipNatTrace"] = args ? args.sipNatTrace : undefined;
            resourceInputs["sipSslPort"] = args ? args.sipSslPort : undefined;
            resourceInputs["sipTcpPort"] = args ? args.sipTcpPort : undefined;
            resourceInputs["sipUdpPort"] = args ? args.sipUdpPort : undefined;
            resourceInputs["snatHairpinTraffic"] = args ? args.snatHairpinTraffic : undefined;
            resourceInputs["sslSshProfile"] = args ? args.sslSshProfile : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["strictSrcCheck"] = args ? args.strictSrcCheck : undefined;
            resourceInputs["tcpSessionWithoutSyn"] = args ? args.tcpSessionWithoutSyn : undefined;
            resourceInputs["utf8SpamTagging"] = args ? args.utf8SpamTagging : undefined;
            resourceInputs["v4EcmpMode"] = args ? args.v4EcmpMode : undefined;
            resourceInputs["vdomType"] = args ? args.vdomType : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
            resourceInputs["vpnStatsLog"] = args ? args.vpnStatsLog : undefined;
            resourceInputs["vpnStatsPeriod"] = args ? args.vpnStatsPeriod : undefined;
            resourceInputs["wccpCacheEngine"] = args ? args.wccpCacheEngine : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Settings.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Settings resources.
 */
export interface SettingsState {
    /**
     * Enable/disable link down path. Valid values: `enable`, `disable`.
     */
    allowLinkdownPath?: pulumi.Input<string>;
    /**
     * Enable/disable allowing interface subnets to use overlapping IP addresses. Valid values: `enable`, `disable`.
     */
    allowSubnetOverlap?: pulumi.Input<string>;
    /**
     * Enable/disable application bandwidth tracking. Valid values: `disable`, `enable`.
     */
    applicationBandwidthTracking?: pulumi.Input<string>;
    /**
     * Enable/disable IPv4 asymmetric routing. Valid values: `enable`, `disable`.
     */
    asymroute?: pulumi.Input<string>;
    /**
     * Enable/disable asymmetric IPv6 routing. Valid values: `enable`, `disable`.
     */
    asymroute6?: pulumi.Input<string>;
    /**
     * Enable/disable asymmetric ICMPv6 routing. Valid values: `enable`, `disable`.
     */
    asymroute6Icmp?: pulumi.Input<string>;
    /**
     * Enable/disable ICMP asymmetric routing. Valid values: `enable`, `disable`.
     */
    asymrouteIcmp?: pulumi.Input<string>;
    /**
     * Enable/disable auxiliary session. Valid values: `enable`, `disable`.
     */
    auxiliarySession?: pulumi.Input<string>;
    /**
     * Enable/disable Bi-directional Forwarding Detection (BFD) on all interfaces. Valid values: `enable`, `disable`.
     */
    bfd?: pulumi.Input<string>;
    /**
     * BFD desired minimal transmit interval (1 - 100000 ms, default = 50).
     */
    bfdDesiredMinTx?: pulumi.Input<number>;
    /**
     * BFD detection multiplier (1 - 50, default = 3).
     */
    bfdDetectMult?: pulumi.Input<number>;
    /**
     * Enable to not enforce verifying the source port of BFD Packets. Valid values: `enable`, `disable`.
     */
    bfdDontEnforceSrcPort?: pulumi.Input<string>;
    /**
     * BFD required minimal receive interval (1 - 100000 ms, default = 50).
     */
    bfdRequiredMinRx?: pulumi.Input<number>;
    /**
     * Enable/disable blocking of land attacks. Valid values: `disable`, `enable`.
     */
    blockLandAttack?: pulumi.Input<string>;
    /**
     * Enable/disable central NAT. Valid values: `enable`, `disable`.
     */
    centralNat?: pulumi.Input<string>;
    /**
     * VDOM comments.
     */
    comments?: pulumi.Input<string>;
    /**
     * Enable/disable PCI DSS compliance checking. Valid values: `enable`, `disable`.
     */
    complianceCheck?: pulumi.Input<string>;
    /**
     * Consolidated firewall mode.
     */
    consolidatedFirewallMode?: pulumi.Input<string>;
    /**
     * Enable/disable policy service enforcement based on application default ports. Valid values: `enable`, `disable`.
     */
    defaultAppPortAsService?: pulumi.Input<string>;
    /**
     * Default policy expiry in days (0 - 365 days, default = 30).
     */
    defaultPolicyExpiryDays?: pulumi.Input<number>;
    /**
     * Configure how the FortiGate handles VoIP traffic when a policy that accepts the traffic doesn't include a VoIP profile. Valid values: `proxy-based`, `kernel-helper-based`.
     */
    defaultVoipAlgMode?: pulumi.Input<string>;
    /**
     * Enable/disable denying TCP by sending an ICMP communication prohibited packet. Valid values: `enable`, `disable`.
     */
    denyTcpWithIcmp?: pulumi.Input<string>;
    /**
     * Enable/disable detection of unknown ESP packets (default = enable). Valid values: `enable`, `disable`.
     */
    detectUnknownEsp?: pulumi.Input<string>;
    /**
     * Interface to use for management access for NAT mode.
     */
    device?: pulumi.Input<string>;
    /**
     * DHCPv6 server IPv6 address.
     */
    dhcp6ServerIp?: pulumi.Input<string>;
    /**
     * Enable/disable the DHCP Proxy. Valid values: `enable`, `disable`.
     */
    dhcpProxy?: pulumi.Input<string>;
    /**
     * Specify outgoing interface to reach server.
     */
    dhcpProxyInterface?: pulumi.Input<string>;
    /**
     * Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
     */
    dhcpProxyInterfaceSelectMethod?: pulumi.Input<string>;
    /**
     * DHCP Server IPv4 address.
     */
    dhcpServerIp?: pulumi.Input<string>;
    /**
     * Timeout for discovered devices (1 - 365 days, default = 28).
     */
    discoveredDeviceTimeout?: pulumi.Input<number>;
    /**
     * Enable/disable dirty session check caused by dynamic address updates. Valid values: `enable`, `disable`.
     */
    dynAddrSessionCheck?: pulumi.Input<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Maximum number of Equal Cost Multi-Path (ECMP) next-hops. Set to 1 to disable ECMP routing (1 - 100, default = 10).
     */
    ecmpMaxPaths?: pulumi.Input<number>;
    /**
     * Enable/disable using DNS to validate email addresses collected by a captive portal. Valid values: `disable`, `enable`.
     */
    emailPortalCheckDns?: pulumi.Input<string>;
    /**
     * Enable/disable dirty session check caused by external resource updates. Valid values: `enable`, `disable`.
     */
    extResourceSessionCheck?: pulumi.Input<string>;
    /**
     * Select how to manage sessions affected by firewall policy configuration changes. Valid values: `check-all`, `check-new`, `check-policy-option`.
     */
    firewallSessionDirty?: pulumi.Input<string>;
    /**
     * Enable/disable dirty session check caused by FQDN updates. Valid values: `enable`, `disable`.
     */
    fqdnSessionCheck?: pulumi.Input<string>;
    /**
     * Enable/disable checking for a matching policy each time hairpin traffic goes through the FortiGate. Valid values: `enable`, `disable`.
     */
    fwSessionHairpin?: pulumi.Input<string>;
    /**
     * Transparent mode IPv4 default gateway IP address.
     */
    gateway?: pulumi.Input<string>;
    /**
     * Transparent mode IPv4 default gateway IP address.
     */
    gateway6?: pulumi.Input<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * Enable/disable advanced policy configuration on the GUI. Valid values: `enable`, `disable`.
     */
    guiAdvancedPolicy?: pulumi.Input<string>;
    /**
     * Enable/disable advanced wireless features in GUI. Valid values: `enable`, `disable`.
     */
    guiAdvancedWirelessFeatures?: pulumi.Input<string>;
    /**
     * Enable/disable the requirement for policy naming on the GUI. Valid values: `enable`, `disable`.
     */
    guiAllowUnnamedPolicy?: pulumi.Input<string>;
    /**
     * Enable/disable AntiVirus on the GUI. Valid values: `enable`, `disable`.
     */
    guiAntivirus?: pulumi.Input<string>;
    /**
     * Enable/disable FortiAP profiles on the GUI. Valid values: `enable`, `disable`.
     */
    guiApProfile?: pulumi.Input<string>;
    /**
     * Enable/disable application control on the GUI. Valid values: `enable`, `disable`.
     */
    guiApplicationControl?: pulumi.Input<string>;
    /**
     * Enable/disable Inline-CASB on the GUI. Valid values: `enable`, `disable`.
     */
    guiCasb?: pulumi.Input<string>;
    /**
     * Default columns to display for policy lists on GUI. The structure of `guiDefaultPolicyColumns` block is documented below.
     */
    guiDefaultPolicyColumns?: pulumi.Input<pulumi.Input<inputs.system.SettingsGuiDefaultPolicyColumn>[]>;
    /**
     * Enable/disable advanced DHCP options on the GUI. Valid values: `enable`, `disable`.
     */
    guiDhcpAdvanced?: pulumi.Input<string>;
    /**
     * Enable/disable DLP on the GUI. Valid values: `enable`, `disable`.
     */
    guiDlp?: pulumi.Input<string>;
    /**
     * Enable/disable Data Leak Prevention on the GUI. Valid values: `enable`, `disable`.
     */
    guiDlpProfile?: pulumi.Input<string>;
    /**
     * Enable/disable DNS database settings on the GUI. Valid values: `enable`, `disable`.
     */
    guiDnsDatabase?: pulumi.Input<string>;
    /**
     * Enable/disable DNS Filtering on the GUI. Valid values: `enable`, `disable`.
     */
    guiDnsfilter?: pulumi.Input<string>;
    /**
     * Enable/disable Domain and IP Reputation on the GUI. Valid values: `enable`, `disable`.
     */
    guiDomainIpReputation?: pulumi.Input<string>;
    /**
     * Enable/disable DoS policies on the GUI. Valid values: `enable`, `disable`.
     */
    guiDosPolicy?: pulumi.Input<string>;
    /**
     * Enable/disable Create dynamic addresses to manage known devices. Valid values: `enable`, `disable`.
     */
    guiDynamicDeviceOsId?: pulumi.Input<string>;
    /**
     * Enable/disable RADIUS Single Sign On (RSSO) on the GUI. Valid values: `enable`, `disable`.
     */
    guiDynamicProfileDisplay?: pulumi.Input<string>;
    /**
     * Enable/disable dynamic routing on the GUI. Valid values: `enable`, `disable`.
     */
    guiDynamicRouting?: pulumi.Input<string>;
    /**
     * Enable/disable email collection on the GUI. Valid values: `enable`, `disable`.
     */
    guiEmailCollection?: pulumi.Input<string>;
    /**
     * Enable/disable endpoint control on the GUI. Valid values: `enable`, `disable`.
     */
    guiEndpointControl?: pulumi.Input<string>;
    /**
     * Enable/disable advanced endpoint control options on the GUI. Valid values: `enable`, `disable`.
     */
    guiEndpointControlAdvanced?: pulumi.Input<string>;
    /**
     * Enforce change summaries for select tables in the GUI. Valid values: `disable`, `require`, `optional`.
     */
    guiEnforceChangeSummary?: pulumi.Input<string>;
    /**
     * Enable/disable the explicit proxy on the GUI. Valid values: `enable`, `disable`.
     */
    guiExplicitProxy?: pulumi.Input<string>;
    /**
     * Enable/disable File-filter on the GUI. Valid values: `enable`, `disable`.
     */
    guiFileFilter?: pulumi.Input<string>;
    /**
     * Enable/disable FortiAP split tunneling on the GUI. Valid values: `enable`, `disable`.
     */
    guiFortiapSplitTunneling?: pulumi.Input<string>;
    /**
     * Enable/disable FortiExtender on the GUI. Valid values: `enable`, `disable`.
     */
    guiFortiextenderController?: pulumi.Input<string>;
    /**
     * Enable/disable ICAP on the GUI. Valid values: `enable`, `disable`.
     */
    guiIcap?: pulumi.Input<string>;
    /**
     * Enable/disable implicit firewall policies on the GUI. Valid values: `enable`, `disable`.
     */
    guiImplicitPolicy?: pulumi.Input<string>;
    /**
     * Enable/disable IPS on the GUI. Valid values: `enable`, `disable`.
     */
    guiIps?: pulumi.Input<string>;
    /**
     * Enable/disable server load balancing on the GUI. Valid values: `enable`, `disable`.
     */
    guiLoadBalance?: pulumi.Input<string>;
    /**
     * Enable/disable Local-In policies on the GUI. Valid values: `enable`, `disable`.
     */
    guiLocalInPolicy?: pulumi.Input<string>;
    /**
     * Enable/disable local reports on the GUI. Valid values: `enable`, `disable`.
     */
    guiLocalReports?: pulumi.Input<string>;
    /**
     * Enable/disable multicast firewall policies on the GUI. Valid values: `enable`, `disable`.
     */
    guiMulticastPolicy?: pulumi.Input<string>;
    /**
     * Enable/disable adding multiple interfaces to a policy on the GUI. Valid values: `enable`, `disable`.
     */
    guiMultipleInterfacePolicy?: pulumi.Input<string>;
    /**
     * Enable/disable multiple UTM profiles on the GUI. Valid values: `enable`, `disable`.
     */
    guiMultipleUtmProfiles?: pulumi.Input<string>;
    /**
     * Enable/disable NAT46 and NAT64 settings on the GUI. Valid values: `enable`, `disable`.
     */
    guiNat4664?: pulumi.Input<string>;
    /**
     * Enable/disable object colors on the GUI. Valid values: `enable`, `disable`.
     */
    guiObjectColors?: pulumi.Input<string>;
    /**
     * Enable/disable Show Operational Technology Purdue Model. Valid values: `enable`, `disable`.
     */
    guiOt?: pulumi.Input<string>;
    /**
     * Enable/disable policy disclaimer on the GUI. Valid values: `enable`, `disable`.
     */
    guiPerPolicyDisclaimer?: pulumi.Input<string>;
    /**
     * Enable/disable policy-based IPsec VPN on the GUI. Valid values: `enable`, `disable`.
     */
    guiPolicyBasedIpsec?: pulumi.Input<string>;
    /**
     * Enable/disable policy disclaimer on the GUI. Valid values: `enable`, `disable`.
     */
    guiPolicyDisclaimer?: pulumi.Input<string>;
    /**
     * Enable/disable firewall policy learning mode on the GUI. Valid values: `enable`, `disable`.
     */
    guiPolicyLearning?: pulumi.Input<string>;
    /**
     * Enable/disable the proxy features on the GUI. Valid values: `enable`, `disable`.
     */
    guiProxyInspection?: pulumi.Input<string>;
    /**
     * Enable/disable replacement message groups on the GUI. Valid values: `enable`, `disable`.
     */
    guiReplacementMessageGroups?: pulumi.Input<string>;
    /**
     * Enable/disable route-tag addresses on the GUI. Valid values: `enable`, `disable`.
     */
    guiRouteTagAddressCreation?: pulumi.Input<string>;
    /**
     * Enable/disable Security Profile Groups on the GUI. Valid values: `enable`, `disable`.
     */
    guiSecurityProfileGroup?: pulumi.Input<string>;
    /**
     * Enable/disable Antispam on the GUI. Valid values: `enable`, `disable`.
     */
    guiSpamfilter?: pulumi.Input<string>;
    /**
     * Enable/disable SSL-VPN settings pages on the GUI. Valid values: `enable`, `disable`.
     */
    guiSslvpn?: pulumi.Input<string>;
    /**
     * Enable/disable SSL-VPN personal bookmark management on the GUI. Valid values: `enable`, `disable`.
     */
    guiSslvpnPersonalBookmarks?: pulumi.Input<string>;
    /**
     * Enable/disable SSL-VPN realms on the GUI. Valid values: `enable`, `disable`.
     */
    guiSslvpnRealms?: pulumi.Input<string>;
    /**
     * Enable/disable the switch controller on the GUI. Valid values: `enable`, `disable`.
     */
    guiSwitchController?: pulumi.Input<string>;
    /**
     * Enable/disable threat weight on the GUI. Valid values: `enable`, `disable`.
     */
    guiThreatWeight?: pulumi.Input<string>;
    /**
     * Enable/disable traffic shaping on the GUI. Valid values: `enable`, `disable`.
     */
    guiTrafficShaping?: pulumi.Input<string>;
    /**
     * Enable/disable Video filtering on the GUI. Valid values: `enable`, `disable`.
     */
    guiVideofilter?: pulumi.Input<string>;
    /**
     * Enable/disable Virtual Patching on the GUI. Valid values: `enable`, `disable`.
     */
    guiVirtualPatchProfile?: pulumi.Input<string>;
    /**
     * Enable/disable VoIP profiles on the GUI. Valid values: `enable`, `disable`.
     */
    guiVoipProfile?: pulumi.Input<string>;
    /**
     * Enable/disable VPN tunnels on the GUI. Valid values: `enable`, `disable`.
     */
    guiVpn?: pulumi.Input<string>;
    /**
     * Enable/disable Web Application Firewall on the GUI. Valid values: `enable`, `disable`.
     */
    guiWafProfile?: pulumi.Input<string>;
    /**
     * Enable/disable SD-WAN on the GUI. Valid values: `enable`, `disable`.
     */
    guiWanLoadBalancing?: pulumi.Input<string>;
    /**
     * Enable/disable WAN Optimization and Web Caching on the GUI. Valid values: `enable`, `disable`.
     */
    guiWanoptCache?: pulumi.Input<string>;
    /**
     * Enable/disable Web filtering on the GUI. Valid values: `enable`, `disable`.
     */
    guiWebfilter?: pulumi.Input<string>;
    /**
     * Enable/disable advanced web filtering on the GUI. Valid values: `enable`, `disable`.
     */
    guiWebfilterAdvanced?: pulumi.Input<string>;
    /**
     * Enable/disable the wireless controller on the GUI. Valid values: `enable`, `disable`.
     */
    guiWirelessController?: pulumi.Input<string>;
    /**
     * Enable/disable Zero Trust Network Access features on the GUI. Valid values: `enable`, `disable`.
     */
    guiZtna?: pulumi.Input<string>;
    /**
     * Enable/disable H323 direct model. Valid values: `disable`, `enable`.
     */
    h323DirectModel?: pulumi.Input<string>;
    /**
     * Offload HTTP traffic to FortiWeb or FortiCache. Valid values: `fortiweb`, `forticache`.
     */
    httpExternalDest?: pulumi.Input<string>;
    /**
     * Configure IKE ASN.1 Distinguished Name format conventions. Valid values: `with-space`, `no-space`.
     */
    ikeDnFormat?: pulumi.Input<string>;
    /**
     * UDP port for IKE/IPsec traffic in NAT-T mode (default 4500).
     */
    ikeNattPort?: pulumi.Input<number>;
    /**
     * Enable/disable IKE Policy Based Routing (PBR). Valid values: `enable`, `disable`.
     */
    ikePolicyRoute?: pulumi.Input<string>;
    /**
     * UDP port for IKE/IPsec traffic (default 500).
     */
    ikePort?: pulumi.Input<number>;
    /**
     * Enable/disable IKE quick crash detection (RFC 6290). Valid values: `enable`, `disable`.
     */
    ikeQuickCrashDetect?: pulumi.Input<string>;
    /**
     * Enable/disable IKEv2 session resumption (RFC 5723). Valid values: `enable`, `disable`.
     */
    ikeSessionResume?: pulumi.Input<string>;
    /**
     * TCP port for IKE/IPsec traffic (default 4500).
     */
    ikeTcpPort?: pulumi.Input<number>;
    /**
     * Enable/disable implicitly allowing DNS traffic. Valid values: `enable`, `disable`.
     */
    implicitAllowDns?: pulumi.Input<string>;
    /**
     * Inspection mode (proxy-based or flow-based). Valid values: `proxy`, `flow`.
     */
    inspectionMode?: pulumi.Input<string>;
    /**
     * Enable/disable Internet Service database caching. Valid values: `disable`, `enable`.
     */
    internetServiceDatabaseCache?: pulumi.Input<string>;
    /**
     * IP address and netmask.
     */
    ip?: pulumi.Input<string>;
    /**
     * IPv6 address prefix for NAT mode.
     */
    ip6?: pulumi.Input<string>;
    /**
     * Controller IP address or FQDN to connect.
     */
    lanExtensionControllerAddr?: pulumi.Input<string>;
    /**
     * Enable/disable link down access traffic. Valid values: `enable`, `disable`.
     */
    linkDownAccess?: pulumi.Input<string>;
    /**
     * Enable/disable Link Layer Discovery Protocol (LLDP) reception for this VDOM or apply global settings to this VDOM. Valid values: `enable`, `disable`, `global`.
     */
    lldpReception?: pulumi.Input<string>;
    /**
     * Enable/disable Link Layer Discovery Protocol (LLDP) transmission for this VDOM or apply global settings to this VDOM. Valid values: `enable`, `disable`, `global`.
     */
    lldpTransmission?: pulumi.Input<string>;
    /**
     * Local location ID in the form of an IPv4 address.
     */
    locationId?: pulumi.Input<string>;
    /**
     * Duration of MAC addresses in Transparent mode (300 - 8640000 sec, default = 300).
     */
    macTtl?: pulumi.Input<number>;
    /**
     * Transparent mode IPv4 management IP address and netmask.
     */
    manageip?: pulumi.Input<string>;
    /**
     * Transparent mode IPv6 management IP address and netmask.
     */
    manageip6?: pulumi.Input<string>;
    /**
     * Enable/disable multicast forwarding. Valid values: `enable`, `disable`.
     */
    multicastForward?: pulumi.Input<string>;
    /**
     * Enable/disable allowing multicast traffic through the FortiGate without a policy check. Valid values: `enable`, `disable`.
     */
    multicastSkipPolicy?: pulumi.Input<string>;
    /**
     * Enable/disable preventing the FortiGate from changing the TTL for forwarded multicast packets. Valid values: `enable`, `disable`.
     */
    multicastTtlNotchange?: pulumi.Input<string>;
    /**
     * Enable/disable mandatory IPv4 packet forwarding in NAT46. Valid values: `enable`, `disable`.
     */
    nat46ForceIpv4PacketForwarding?: pulumi.Input<string>;
    /**
     * Enable/disable NAT46 IPv6 fragment header generation. Valid values: `enable`, `disable`.
     */
    nat46GenerateIpv6FragmentHeader?: pulumi.Input<string>;
    /**
     * Enable/disable mandatory IPv6 packet forwarding in NAT64. Valid values: `enable`, `disable`.
     */
    nat64ForceIpv6PacketForwarding?: pulumi.Input<string>;
    /**
     * Next Generation Firewall (NGFW) mode. Valid values: `profile-based`, `policy-based`.
     */
    ngfwMode?: pulumi.Input<string>;
    /**
     * Firewall operation mode (NAT or Transparent). Valid values: `nat`, `transparent`.
     */
    opmode?: pulumi.Input<string>;
    /**
     * Enable/disable action to take on PRP trailer. Valid values: `enable`, `disable`.
     */
    prpTrailerAction?: pulumi.Input<string>;
    /**
     * TCP port the SCCP proxy monitors for SCCP traffic (0 - 65535, default = 2000).
     */
    sccpPort?: pulumi.Input<number>;
    /**
     * Enable/disable SCTP session creation without SCTP INIT. Valid values: `enable`, `disable`.
     */
    sctpSessionWithoutInit?: pulumi.Input<string>;
    /**
     * Enable/disable including denied session in the session table. Valid values: `enable`, `disable`.
     */
    sesDeniedTraffic?: pulumi.Input<string>;
    /**
     * Enable/disable the SIP kernel session helper to create an expectation for port 5060. Valid values: `enable`, `disable`.
     */
    sipExpectation?: pulumi.Input<string>;
    /**
     * Enable/disable the SIP session helper to process SIP sessions unless SIP sessions are accepted by the SIP application layer gateway (ALG). Valid values: `enable`, `disable`.
     */
    sipHelper?: pulumi.Input<string>;
    /**
     * Enable/disable recording the original SIP source IP address when NAT is used. Valid values: `enable`, `disable`.
     */
    sipNatTrace?: pulumi.Input<string>;
    /**
     * TCP port the SIP proxy monitors for SIP SSL/TLS traffic (0 - 65535, default = 5061).
     */
    sipSslPort?: pulumi.Input<number>;
    /**
     * TCP port the SIP proxy monitors for SIP traffic (0 - 65535, default = 5060).
     */
    sipTcpPort?: pulumi.Input<number>;
    /**
     * UDP port the SIP proxy monitors for SIP traffic (0 - 65535, default = 5060).
     */
    sipUdpPort?: pulumi.Input<number>;
    /**
     * Enable/disable source NAT (SNAT) for hairpin traffic. Valid values: `enable`, `disable`.
     */
    snatHairpinTraffic?: pulumi.Input<string>;
    /**
     * Profile for SSL/SSH inspection.
     */
    sslSshProfile?: pulumi.Input<string>;
    /**
     * Enable/disable this VDOM. Valid values: `enable`, `disable`.
     */
    status?: pulumi.Input<string>;
    /**
     * Enable/disable strict source verification. Valid values: `enable`, `disable`.
     */
    strictSrcCheck?: pulumi.Input<string>;
    /**
     * Enable/disable allowing TCP session without SYN flags. Valid values: `enable`, `disable`.
     */
    tcpSessionWithoutSyn?: pulumi.Input<string>;
    /**
     * Enable/disable converting antispam tags to UTF-8 for better non-ASCII character support. Valid values: `enable`, `disable`.
     */
    utf8SpamTagging?: pulumi.Input<string>;
    /**
     * IPv4 Equal-cost multi-path (ECMP) routing and load balancing mode. Valid values: `source-ip-based`, `weight-based`, `usage-based`, `source-dest-ip-based`.
     */
    v4EcmpMode?: pulumi.Input<string>;
    /**
     * VDOM type (traffic or admin).
     */
    vdomType?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Enable/disable periodic VPN log statistics for one or more types of VPN. Separate names with a space. Valid values: `ipsec`, `pptp`, `l2tp`, `ssl`.
     */
    vpnStatsLog?: pulumi.Input<string>;
    /**
     * Period to send VPN log statistics (0 or 60 - 86400 sec).
     */
    vpnStatsPeriod?: pulumi.Input<number>;
    /**
     * Enable/disable WCCP cache engine. Valid values: `enable`, `disable`.
     */
    wccpCacheEngine?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Settings resource.
 */
export interface SettingsArgs {
    /**
     * Enable/disable link down path. Valid values: `enable`, `disable`.
     */
    allowLinkdownPath?: pulumi.Input<string>;
    /**
     * Enable/disable allowing interface subnets to use overlapping IP addresses. Valid values: `enable`, `disable`.
     */
    allowSubnetOverlap?: pulumi.Input<string>;
    /**
     * Enable/disable application bandwidth tracking. Valid values: `disable`, `enable`.
     */
    applicationBandwidthTracking?: pulumi.Input<string>;
    /**
     * Enable/disable IPv4 asymmetric routing. Valid values: `enable`, `disable`.
     */
    asymroute?: pulumi.Input<string>;
    /**
     * Enable/disable asymmetric IPv6 routing. Valid values: `enable`, `disable`.
     */
    asymroute6?: pulumi.Input<string>;
    /**
     * Enable/disable asymmetric ICMPv6 routing. Valid values: `enable`, `disable`.
     */
    asymroute6Icmp?: pulumi.Input<string>;
    /**
     * Enable/disable ICMP asymmetric routing. Valid values: `enable`, `disable`.
     */
    asymrouteIcmp?: pulumi.Input<string>;
    /**
     * Enable/disable auxiliary session. Valid values: `enable`, `disable`.
     */
    auxiliarySession?: pulumi.Input<string>;
    /**
     * Enable/disable Bi-directional Forwarding Detection (BFD) on all interfaces. Valid values: `enable`, `disable`.
     */
    bfd?: pulumi.Input<string>;
    /**
     * BFD desired minimal transmit interval (1 - 100000 ms, default = 50).
     */
    bfdDesiredMinTx?: pulumi.Input<number>;
    /**
     * BFD detection multiplier (1 - 50, default = 3).
     */
    bfdDetectMult?: pulumi.Input<number>;
    /**
     * Enable to not enforce verifying the source port of BFD Packets. Valid values: `enable`, `disable`.
     */
    bfdDontEnforceSrcPort?: pulumi.Input<string>;
    /**
     * BFD required minimal receive interval (1 - 100000 ms, default = 50).
     */
    bfdRequiredMinRx?: pulumi.Input<number>;
    /**
     * Enable/disable blocking of land attacks. Valid values: `disable`, `enable`.
     */
    blockLandAttack?: pulumi.Input<string>;
    /**
     * Enable/disable central NAT. Valid values: `enable`, `disable`.
     */
    centralNat?: pulumi.Input<string>;
    /**
     * VDOM comments.
     */
    comments?: pulumi.Input<string>;
    /**
     * Enable/disable PCI DSS compliance checking. Valid values: `enable`, `disable`.
     */
    complianceCheck?: pulumi.Input<string>;
    /**
     * Consolidated firewall mode.
     */
    consolidatedFirewallMode?: pulumi.Input<string>;
    /**
     * Enable/disable policy service enforcement based on application default ports. Valid values: `enable`, `disable`.
     */
    defaultAppPortAsService?: pulumi.Input<string>;
    /**
     * Default policy expiry in days (0 - 365 days, default = 30).
     */
    defaultPolicyExpiryDays?: pulumi.Input<number>;
    /**
     * Configure how the FortiGate handles VoIP traffic when a policy that accepts the traffic doesn't include a VoIP profile. Valid values: `proxy-based`, `kernel-helper-based`.
     */
    defaultVoipAlgMode?: pulumi.Input<string>;
    /**
     * Enable/disable denying TCP by sending an ICMP communication prohibited packet. Valid values: `enable`, `disable`.
     */
    denyTcpWithIcmp?: pulumi.Input<string>;
    /**
     * Enable/disable detection of unknown ESP packets (default = enable). Valid values: `enable`, `disable`.
     */
    detectUnknownEsp?: pulumi.Input<string>;
    /**
     * Interface to use for management access for NAT mode.
     */
    device?: pulumi.Input<string>;
    /**
     * DHCPv6 server IPv6 address.
     */
    dhcp6ServerIp?: pulumi.Input<string>;
    /**
     * Enable/disable the DHCP Proxy. Valid values: `enable`, `disable`.
     */
    dhcpProxy?: pulumi.Input<string>;
    /**
     * Specify outgoing interface to reach server.
     */
    dhcpProxyInterface?: pulumi.Input<string>;
    /**
     * Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
     */
    dhcpProxyInterfaceSelectMethod?: pulumi.Input<string>;
    /**
     * DHCP Server IPv4 address.
     */
    dhcpServerIp?: pulumi.Input<string>;
    /**
     * Timeout for discovered devices (1 - 365 days, default = 28).
     */
    discoveredDeviceTimeout?: pulumi.Input<number>;
    /**
     * Enable/disable dirty session check caused by dynamic address updates. Valid values: `enable`, `disable`.
     */
    dynAddrSessionCheck?: pulumi.Input<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Maximum number of Equal Cost Multi-Path (ECMP) next-hops. Set to 1 to disable ECMP routing (1 - 100, default = 10).
     */
    ecmpMaxPaths?: pulumi.Input<number>;
    /**
     * Enable/disable using DNS to validate email addresses collected by a captive portal. Valid values: `disable`, `enable`.
     */
    emailPortalCheckDns?: pulumi.Input<string>;
    /**
     * Enable/disable dirty session check caused by external resource updates. Valid values: `enable`, `disable`.
     */
    extResourceSessionCheck?: pulumi.Input<string>;
    /**
     * Select how to manage sessions affected by firewall policy configuration changes. Valid values: `check-all`, `check-new`, `check-policy-option`.
     */
    firewallSessionDirty?: pulumi.Input<string>;
    /**
     * Enable/disable dirty session check caused by FQDN updates. Valid values: `enable`, `disable`.
     */
    fqdnSessionCheck?: pulumi.Input<string>;
    /**
     * Enable/disable checking for a matching policy each time hairpin traffic goes through the FortiGate. Valid values: `enable`, `disable`.
     */
    fwSessionHairpin?: pulumi.Input<string>;
    /**
     * Transparent mode IPv4 default gateway IP address.
     */
    gateway?: pulumi.Input<string>;
    /**
     * Transparent mode IPv4 default gateway IP address.
     */
    gateway6?: pulumi.Input<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * Enable/disable advanced policy configuration on the GUI. Valid values: `enable`, `disable`.
     */
    guiAdvancedPolicy?: pulumi.Input<string>;
    /**
     * Enable/disable advanced wireless features in GUI. Valid values: `enable`, `disable`.
     */
    guiAdvancedWirelessFeatures?: pulumi.Input<string>;
    /**
     * Enable/disable the requirement for policy naming on the GUI. Valid values: `enable`, `disable`.
     */
    guiAllowUnnamedPolicy?: pulumi.Input<string>;
    /**
     * Enable/disable AntiVirus on the GUI. Valid values: `enable`, `disable`.
     */
    guiAntivirus?: pulumi.Input<string>;
    /**
     * Enable/disable FortiAP profiles on the GUI. Valid values: `enable`, `disable`.
     */
    guiApProfile?: pulumi.Input<string>;
    /**
     * Enable/disable application control on the GUI. Valid values: `enable`, `disable`.
     */
    guiApplicationControl?: pulumi.Input<string>;
    /**
     * Enable/disable Inline-CASB on the GUI. Valid values: `enable`, `disable`.
     */
    guiCasb?: pulumi.Input<string>;
    /**
     * Default columns to display for policy lists on GUI. The structure of `guiDefaultPolicyColumns` block is documented below.
     */
    guiDefaultPolicyColumns?: pulumi.Input<pulumi.Input<inputs.system.SettingsGuiDefaultPolicyColumn>[]>;
    /**
     * Enable/disable advanced DHCP options on the GUI. Valid values: `enable`, `disable`.
     */
    guiDhcpAdvanced?: pulumi.Input<string>;
    /**
     * Enable/disable DLP on the GUI. Valid values: `enable`, `disable`.
     */
    guiDlp?: pulumi.Input<string>;
    /**
     * Enable/disable Data Leak Prevention on the GUI. Valid values: `enable`, `disable`.
     */
    guiDlpProfile?: pulumi.Input<string>;
    /**
     * Enable/disable DNS database settings on the GUI. Valid values: `enable`, `disable`.
     */
    guiDnsDatabase?: pulumi.Input<string>;
    /**
     * Enable/disable DNS Filtering on the GUI. Valid values: `enable`, `disable`.
     */
    guiDnsfilter?: pulumi.Input<string>;
    /**
     * Enable/disable Domain and IP Reputation on the GUI. Valid values: `enable`, `disable`.
     */
    guiDomainIpReputation?: pulumi.Input<string>;
    /**
     * Enable/disable DoS policies on the GUI. Valid values: `enable`, `disable`.
     */
    guiDosPolicy?: pulumi.Input<string>;
    /**
     * Enable/disable Create dynamic addresses to manage known devices. Valid values: `enable`, `disable`.
     */
    guiDynamicDeviceOsId?: pulumi.Input<string>;
    /**
     * Enable/disable RADIUS Single Sign On (RSSO) on the GUI. Valid values: `enable`, `disable`.
     */
    guiDynamicProfileDisplay?: pulumi.Input<string>;
    /**
     * Enable/disable dynamic routing on the GUI. Valid values: `enable`, `disable`.
     */
    guiDynamicRouting?: pulumi.Input<string>;
    /**
     * Enable/disable email collection on the GUI. Valid values: `enable`, `disable`.
     */
    guiEmailCollection?: pulumi.Input<string>;
    /**
     * Enable/disable endpoint control on the GUI. Valid values: `enable`, `disable`.
     */
    guiEndpointControl?: pulumi.Input<string>;
    /**
     * Enable/disable advanced endpoint control options on the GUI. Valid values: `enable`, `disable`.
     */
    guiEndpointControlAdvanced?: pulumi.Input<string>;
    /**
     * Enforce change summaries for select tables in the GUI. Valid values: `disable`, `require`, `optional`.
     */
    guiEnforceChangeSummary?: pulumi.Input<string>;
    /**
     * Enable/disable the explicit proxy on the GUI. Valid values: `enable`, `disable`.
     */
    guiExplicitProxy?: pulumi.Input<string>;
    /**
     * Enable/disable File-filter on the GUI. Valid values: `enable`, `disable`.
     */
    guiFileFilter?: pulumi.Input<string>;
    /**
     * Enable/disable FortiAP split tunneling on the GUI. Valid values: `enable`, `disable`.
     */
    guiFortiapSplitTunneling?: pulumi.Input<string>;
    /**
     * Enable/disable FortiExtender on the GUI. Valid values: `enable`, `disable`.
     */
    guiFortiextenderController?: pulumi.Input<string>;
    /**
     * Enable/disable ICAP on the GUI. Valid values: `enable`, `disable`.
     */
    guiIcap?: pulumi.Input<string>;
    /**
     * Enable/disable implicit firewall policies on the GUI. Valid values: `enable`, `disable`.
     */
    guiImplicitPolicy?: pulumi.Input<string>;
    /**
     * Enable/disable IPS on the GUI. Valid values: `enable`, `disable`.
     */
    guiIps?: pulumi.Input<string>;
    /**
     * Enable/disable server load balancing on the GUI. Valid values: `enable`, `disable`.
     */
    guiLoadBalance?: pulumi.Input<string>;
    /**
     * Enable/disable Local-In policies on the GUI. Valid values: `enable`, `disable`.
     */
    guiLocalInPolicy?: pulumi.Input<string>;
    /**
     * Enable/disable local reports on the GUI. Valid values: `enable`, `disable`.
     */
    guiLocalReports?: pulumi.Input<string>;
    /**
     * Enable/disable multicast firewall policies on the GUI. Valid values: `enable`, `disable`.
     */
    guiMulticastPolicy?: pulumi.Input<string>;
    /**
     * Enable/disable adding multiple interfaces to a policy on the GUI. Valid values: `enable`, `disable`.
     */
    guiMultipleInterfacePolicy?: pulumi.Input<string>;
    /**
     * Enable/disable multiple UTM profiles on the GUI. Valid values: `enable`, `disable`.
     */
    guiMultipleUtmProfiles?: pulumi.Input<string>;
    /**
     * Enable/disable NAT46 and NAT64 settings on the GUI. Valid values: `enable`, `disable`.
     */
    guiNat4664?: pulumi.Input<string>;
    /**
     * Enable/disable object colors on the GUI. Valid values: `enable`, `disable`.
     */
    guiObjectColors?: pulumi.Input<string>;
    /**
     * Enable/disable Show Operational Technology Purdue Model. Valid values: `enable`, `disable`.
     */
    guiOt?: pulumi.Input<string>;
    /**
     * Enable/disable policy disclaimer on the GUI. Valid values: `enable`, `disable`.
     */
    guiPerPolicyDisclaimer?: pulumi.Input<string>;
    /**
     * Enable/disable policy-based IPsec VPN on the GUI. Valid values: `enable`, `disable`.
     */
    guiPolicyBasedIpsec?: pulumi.Input<string>;
    /**
     * Enable/disable policy disclaimer on the GUI. Valid values: `enable`, `disable`.
     */
    guiPolicyDisclaimer?: pulumi.Input<string>;
    /**
     * Enable/disable firewall policy learning mode on the GUI. Valid values: `enable`, `disable`.
     */
    guiPolicyLearning?: pulumi.Input<string>;
    /**
     * Enable/disable the proxy features on the GUI. Valid values: `enable`, `disable`.
     */
    guiProxyInspection?: pulumi.Input<string>;
    /**
     * Enable/disable replacement message groups on the GUI. Valid values: `enable`, `disable`.
     */
    guiReplacementMessageGroups?: pulumi.Input<string>;
    /**
     * Enable/disable route-tag addresses on the GUI. Valid values: `enable`, `disable`.
     */
    guiRouteTagAddressCreation?: pulumi.Input<string>;
    /**
     * Enable/disable Security Profile Groups on the GUI. Valid values: `enable`, `disable`.
     */
    guiSecurityProfileGroup?: pulumi.Input<string>;
    /**
     * Enable/disable Antispam on the GUI. Valid values: `enable`, `disable`.
     */
    guiSpamfilter?: pulumi.Input<string>;
    /**
     * Enable/disable SSL-VPN settings pages on the GUI. Valid values: `enable`, `disable`.
     */
    guiSslvpn?: pulumi.Input<string>;
    /**
     * Enable/disable SSL-VPN personal bookmark management on the GUI. Valid values: `enable`, `disable`.
     */
    guiSslvpnPersonalBookmarks?: pulumi.Input<string>;
    /**
     * Enable/disable SSL-VPN realms on the GUI. Valid values: `enable`, `disable`.
     */
    guiSslvpnRealms?: pulumi.Input<string>;
    /**
     * Enable/disable the switch controller on the GUI. Valid values: `enable`, `disable`.
     */
    guiSwitchController?: pulumi.Input<string>;
    /**
     * Enable/disable threat weight on the GUI. Valid values: `enable`, `disable`.
     */
    guiThreatWeight?: pulumi.Input<string>;
    /**
     * Enable/disable traffic shaping on the GUI. Valid values: `enable`, `disable`.
     */
    guiTrafficShaping?: pulumi.Input<string>;
    /**
     * Enable/disable Video filtering on the GUI. Valid values: `enable`, `disable`.
     */
    guiVideofilter?: pulumi.Input<string>;
    /**
     * Enable/disable Virtual Patching on the GUI. Valid values: `enable`, `disable`.
     */
    guiVirtualPatchProfile?: pulumi.Input<string>;
    /**
     * Enable/disable VoIP profiles on the GUI. Valid values: `enable`, `disable`.
     */
    guiVoipProfile?: pulumi.Input<string>;
    /**
     * Enable/disable VPN tunnels on the GUI. Valid values: `enable`, `disable`.
     */
    guiVpn?: pulumi.Input<string>;
    /**
     * Enable/disable Web Application Firewall on the GUI. Valid values: `enable`, `disable`.
     */
    guiWafProfile?: pulumi.Input<string>;
    /**
     * Enable/disable SD-WAN on the GUI. Valid values: `enable`, `disable`.
     */
    guiWanLoadBalancing?: pulumi.Input<string>;
    /**
     * Enable/disable WAN Optimization and Web Caching on the GUI. Valid values: `enable`, `disable`.
     */
    guiWanoptCache?: pulumi.Input<string>;
    /**
     * Enable/disable Web filtering on the GUI. Valid values: `enable`, `disable`.
     */
    guiWebfilter?: pulumi.Input<string>;
    /**
     * Enable/disable advanced web filtering on the GUI. Valid values: `enable`, `disable`.
     */
    guiWebfilterAdvanced?: pulumi.Input<string>;
    /**
     * Enable/disable the wireless controller on the GUI. Valid values: `enable`, `disable`.
     */
    guiWirelessController?: pulumi.Input<string>;
    /**
     * Enable/disable Zero Trust Network Access features on the GUI. Valid values: `enable`, `disable`.
     */
    guiZtna?: pulumi.Input<string>;
    /**
     * Enable/disable H323 direct model. Valid values: `disable`, `enable`.
     */
    h323DirectModel?: pulumi.Input<string>;
    /**
     * Offload HTTP traffic to FortiWeb or FortiCache. Valid values: `fortiweb`, `forticache`.
     */
    httpExternalDest?: pulumi.Input<string>;
    /**
     * Configure IKE ASN.1 Distinguished Name format conventions. Valid values: `with-space`, `no-space`.
     */
    ikeDnFormat?: pulumi.Input<string>;
    /**
     * UDP port for IKE/IPsec traffic in NAT-T mode (default 4500).
     */
    ikeNattPort?: pulumi.Input<number>;
    /**
     * Enable/disable IKE Policy Based Routing (PBR). Valid values: `enable`, `disable`.
     */
    ikePolicyRoute?: pulumi.Input<string>;
    /**
     * UDP port for IKE/IPsec traffic (default 500).
     */
    ikePort?: pulumi.Input<number>;
    /**
     * Enable/disable IKE quick crash detection (RFC 6290). Valid values: `enable`, `disable`.
     */
    ikeQuickCrashDetect?: pulumi.Input<string>;
    /**
     * Enable/disable IKEv2 session resumption (RFC 5723). Valid values: `enable`, `disable`.
     */
    ikeSessionResume?: pulumi.Input<string>;
    /**
     * TCP port for IKE/IPsec traffic (default 4500).
     */
    ikeTcpPort?: pulumi.Input<number>;
    /**
     * Enable/disable implicitly allowing DNS traffic. Valid values: `enable`, `disable`.
     */
    implicitAllowDns?: pulumi.Input<string>;
    /**
     * Inspection mode (proxy-based or flow-based). Valid values: `proxy`, `flow`.
     */
    inspectionMode?: pulumi.Input<string>;
    /**
     * Enable/disable Internet Service database caching. Valid values: `disable`, `enable`.
     */
    internetServiceDatabaseCache?: pulumi.Input<string>;
    /**
     * IP address and netmask.
     */
    ip?: pulumi.Input<string>;
    /**
     * IPv6 address prefix for NAT mode.
     */
    ip6?: pulumi.Input<string>;
    /**
     * Controller IP address or FQDN to connect.
     */
    lanExtensionControllerAddr?: pulumi.Input<string>;
    /**
     * Enable/disable link down access traffic. Valid values: `enable`, `disable`.
     */
    linkDownAccess?: pulumi.Input<string>;
    /**
     * Enable/disable Link Layer Discovery Protocol (LLDP) reception for this VDOM or apply global settings to this VDOM. Valid values: `enable`, `disable`, `global`.
     */
    lldpReception?: pulumi.Input<string>;
    /**
     * Enable/disable Link Layer Discovery Protocol (LLDP) transmission for this VDOM or apply global settings to this VDOM. Valid values: `enable`, `disable`, `global`.
     */
    lldpTransmission?: pulumi.Input<string>;
    /**
     * Local location ID in the form of an IPv4 address.
     */
    locationId?: pulumi.Input<string>;
    /**
     * Duration of MAC addresses in Transparent mode (300 - 8640000 sec, default = 300).
     */
    macTtl?: pulumi.Input<number>;
    /**
     * Transparent mode IPv4 management IP address and netmask.
     */
    manageip?: pulumi.Input<string>;
    /**
     * Transparent mode IPv6 management IP address and netmask.
     */
    manageip6?: pulumi.Input<string>;
    /**
     * Enable/disable multicast forwarding. Valid values: `enable`, `disable`.
     */
    multicastForward?: pulumi.Input<string>;
    /**
     * Enable/disable allowing multicast traffic through the FortiGate without a policy check. Valid values: `enable`, `disable`.
     */
    multicastSkipPolicy?: pulumi.Input<string>;
    /**
     * Enable/disable preventing the FortiGate from changing the TTL for forwarded multicast packets. Valid values: `enable`, `disable`.
     */
    multicastTtlNotchange?: pulumi.Input<string>;
    /**
     * Enable/disable mandatory IPv4 packet forwarding in NAT46. Valid values: `enable`, `disable`.
     */
    nat46ForceIpv4PacketForwarding?: pulumi.Input<string>;
    /**
     * Enable/disable NAT46 IPv6 fragment header generation. Valid values: `enable`, `disable`.
     */
    nat46GenerateIpv6FragmentHeader?: pulumi.Input<string>;
    /**
     * Enable/disable mandatory IPv6 packet forwarding in NAT64. Valid values: `enable`, `disable`.
     */
    nat64ForceIpv6PacketForwarding?: pulumi.Input<string>;
    /**
     * Next Generation Firewall (NGFW) mode. Valid values: `profile-based`, `policy-based`.
     */
    ngfwMode?: pulumi.Input<string>;
    /**
     * Firewall operation mode (NAT or Transparent). Valid values: `nat`, `transparent`.
     */
    opmode?: pulumi.Input<string>;
    /**
     * Enable/disable action to take on PRP trailer. Valid values: `enable`, `disable`.
     */
    prpTrailerAction?: pulumi.Input<string>;
    /**
     * TCP port the SCCP proxy monitors for SCCP traffic (0 - 65535, default = 2000).
     */
    sccpPort?: pulumi.Input<number>;
    /**
     * Enable/disable SCTP session creation without SCTP INIT. Valid values: `enable`, `disable`.
     */
    sctpSessionWithoutInit?: pulumi.Input<string>;
    /**
     * Enable/disable including denied session in the session table. Valid values: `enable`, `disable`.
     */
    sesDeniedTraffic?: pulumi.Input<string>;
    /**
     * Enable/disable the SIP kernel session helper to create an expectation for port 5060. Valid values: `enable`, `disable`.
     */
    sipExpectation?: pulumi.Input<string>;
    /**
     * Enable/disable the SIP session helper to process SIP sessions unless SIP sessions are accepted by the SIP application layer gateway (ALG). Valid values: `enable`, `disable`.
     */
    sipHelper?: pulumi.Input<string>;
    /**
     * Enable/disable recording the original SIP source IP address when NAT is used. Valid values: `enable`, `disable`.
     */
    sipNatTrace?: pulumi.Input<string>;
    /**
     * TCP port the SIP proxy monitors for SIP SSL/TLS traffic (0 - 65535, default = 5061).
     */
    sipSslPort?: pulumi.Input<number>;
    /**
     * TCP port the SIP proxy monitors for SIP traffic (0 - 65535, default = 5060).
     */
    sipTcpPort?: pulumi.Input<number>;
    /**
     * UDP port the SIP proxy monitors for SIP traffic (0 - 65535, default = 5060).
     */
    sipUdpPort?: pulumi.Input<number>;
    /**
     * Enable/disable source NAT (SNAT) for hairpin traffic. Valid values: `enable`, `disable`.
     */
    snatHairpinTraffic?: pulumi.Input<string>;
    /**
     * Profile for SSL/SSH inspection.
     */
    sslSshProfile?: pulumi.Input<string>;
    /**
     * Enable/disable this VDOM. Valid values: `enable`, `disable`.
     */
    status?: pulumi.Input<string>;
    /**
     * Enable/disable strict source verification. Valid values: `enable`, `disable`.
     */
    strictSrcCheck?: pulumi.Input<string>;
    /**
     * Enable/disable allowing TCP session without SYN flags. Valid values: `enable`, `disable`.
     */
    tcpSessionWithoutSyn?: pulumi.Input<string>;
    /**
     * Enable/disable converting antispam tags to UTF-8 for better non-ASCII character support. Valid values: `enable`, `disable`.
     */
    utf8SpamTagging?: pulumi.Input<string>;
    /**
     * IPv4 Equal-cost multi-path (ECMP) routing and load balancing mode. Valid values: `source-ip-based`, `weight-based`, `usage-based`, `source-dest-ip-based`.
     */
    v4EcmpMode?: pulumi.Input<string>;
    /**
     * VDOM type (traffic or admin).
     */
    vdomType?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Enable/disable periodic VPN log statistics for one or more types of VPN. Separate names with a space. Valid values: `ipsec`, `pptp`, `l2tp`, `ssl`.
     */
    vpnStatsLog?: pulumi.Input<string>;
    /**
     * Period to send VPN log statistics (0 or 60 - 86400 sec).
     */
    vpnStatsPeriod?: pulumi.Input<number>;
    /**
     * Enable/disable WCCP cache engine. Valid values: `enable`, `disable`.
     */
    wccpCacheEngine?: pulumi.Input<string>;
}
