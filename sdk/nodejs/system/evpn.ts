// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Configure EVPN instance. Applies to FortiOS Version `>= 7.4.0`.
 *
 * ## Import
 *
 * System Evpn can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:system/evpn:Evpn labelname {{fosid}}
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:system/evpn:Evpn labelname {{fosid}}
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Evpn extends pulumi.CustomResource {
    /**
     * Get an existing Evpn resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EvpnState, opts?: pulumi.CustomResourceOptions): Evpn {
        return new Evpn(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:system/evpn:Evpn';

    /**
     * Returns true if the given object is an instance of Evpn.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Evpn {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Evpn.__pulumiType;
    }

    /**
     * Enable/disable ARP suppression. Valid values: `enable`, `disable`.
     */
    public readonly arpSuppression!: pulumi.Output<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * List of export route targets. The structure of `exportRt` block is documented below.
     */
    public readonly exportRts!: pulumi.Output<outputs.system.EvpnExportRt[] | undefined>;
    /**
     * ID.
     */
    public readonly fosid!: pulumi.Output<number>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    /**
     * List of import route targets. The structure of `importRt` block is documented below.
     */
    public readonly importRts!: pulumi.Output<outputs.system.EvpnImportRt[] | undefined>;
    /**
     * Enable/disable IP address local learning. Valid values: `enable`, `disable`.
     */
    public readonly ipLocalLearning!: pulumi.Output<string>;
    /**
     * Route Distinguisher: AA|AA:NN|A.B.C.D:NN.
     */
    public readonly rd!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a Evpn resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: EvpnArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EvpnArgs | EvpnState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EvpnState | undefined;
            resourceInputs["arpSuppression"] = state ? state.arpSuppression : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["exportRts"] = state ? state.exportRts : undefined;
            resourceInputs["fosid"] = state ? state.fosid : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["importRts"] = state ? state.importRts : undefined;
            resourceInputs["ipLocalLearning"] = state ? state.ipLocalLearning : undefined;
            resourceInputs["rd"] = state ? state.rd : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as EvpnArgs | undefined;
            resourceInputs["arpSuppression"] = args ? args.arpSuppression : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["exportRts"] = args ? args.exportRts : undefined;
            resourceInputs["fosid"] = args ? args.fosid : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["importRts"] = args ? args.importRts : undefined;
            resourceInputs["ipLocalLearning"] = args ? args.ipLocalLearning : undefined;
            resourceInputs["rd"] = args ? args.rd : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Evpn.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Evpn resources.
 */
export interface EvpnState {
    /**
     * Enable/disable ARP suppression. Valid values: `enable`, `disable`.
     */
    arpSuppression?: pulumi.Input<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * List of export route targets. The structure of `exportRt` block is documented below.
     */
    exportRts?: pulumi.Input<pulumi.Input<inputs.system.EvpnExportRt>[]>;
    /**
     * ID.
     */
    fosid?: pulumi.Input<number>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * List of import route targets. The structure of `importRt` block is documented below.
     */
    importRts?: pulumi.Input<pulumi.Input<inputs.system.EvpnImportRt>[]>;
    /**
     * Enable/disable IP address local learning. Valid values: `enable`, `disable`.
     */
    ipLocalLearning?: pulumi.Input<string>;
    /**
     * Route Distinguisher: AA|AA:NN|A.B.C.D:NN.
     */
    rd?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Evpn resource.
 */
export interface EvpnArgs {
    /**
     * Enable/disable ARP suppression. Valid values: `enable`, `disable`.
     */
    arpSuppression?: pulumi.Input<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * List of export route targets. The structure of `exportRt` block is documented below.
     */
    exportRts?: pulumi.Input<pulumi.Input<inputs.system.EvpnExportRt>[]>;
    /**
     * ID.
     */
    fosid?: pulumi.Input<number>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * List of import route targets. The structure of `importRt` block is documented below.
     */
    importRts?: pulumi.Input<pulumi.Input<inputs.system.EvpnImportRt>[]>;
    /**
     * Enable/disable IP address local learning. Valid values: `enable`, `disable`.
     */
    ipLocalLearning?: pulumi.Input<string>;
    /**
     * Route Distinguisher: AA|AA:NN|A.B.C.D:NN.
     */
    rd?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
