// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Configure IPS URL filter DNS servers.
 *
 * ## Import
 *
 * System IpsUrlfilterDns can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:system/ipsurlfilterdns:Ipsurlfilterdns labelname {{address}}
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:system/ipsurlfilterdns:Ipsurlfilterdns labelname {{address}}
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Ipsurlfilterdns extends pulumi.CustomResource {
    /**
     * Get an existing Ipsurlfilterdns resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IpsurlfilterdnsState, opts?: pulumi.CustomResourceOptions): Ipsurlfilterdns {
        return new Ipsurlfilterdns(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:system/ipsurlfilterdns:Ipsurlfilterdns';

    /**
     * Returns true if the given object is an instance of Ipsurlfilterdns.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ipsurlfilterdns {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ipsurlfilterdns.__pulumiType;
    }

    /**
     * DNS server IP address.
     */
    public readonly address!: pulumi.Output<string>;
    /**
     * Enable/disable this server for IPv6 queries. Valid values: `enable`, `disable`.
     */
    public readonly ipv6Capability!: pulumi.Output<string>;
    /**
     * Enable/disable using this DNS server for IPS URL filter DNS queries. Valid values: `enable`, `disable`.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string>;

    /**
     * Create a Ipsurlfilterdns resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: IpsurlfilterdnsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IpsurlfilterdnsArgs | IpsurlfilterdnsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IpsurlfilterdnsState | undefined;
            resourceInputs["address"] = state ? state.address : undefined;
            resourceInputs["ipv6Capability"] = state ? state.ipv6Capability : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as IpsurlfilterdnsArgs | undefined;
            resourceInputs["address"] = args ? args.address : undefined;
            resourceInputs["ipv6Capability"] = args ? args.ipv6Capability : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Ipsurlfilterdns.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Ipsurlfilterdns resources.
 */
export interface IpsurlfilterdnsState {
    /**
     * DNS server IP address.
     */
    address?: pulumi.Input<string>;
    /**
     * Enable/disable this server for IPv6 queries. Valid values: `enable`, `disable`.
     */
    ipv6Capability?: pulumi.Input<string>;
    /**
     * Enable/disable using this DNS server for IPS URL filter DNS queries. Valid values: `enable`, `disable`.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Ipsurlfilterdns resource.
 */
export interface IpsurlfilterdnsArgs {
    /**
     * DNS server IP address.
     */
    address?: pulumi.Input<string>;
    /**
     * Enable/disable this server for IPv6 queries. Valid values: `enable`, `disable`.
     */
    ipv6Capability?: pulumi.Input<string>;
    /**
     * Enable/disable using this DNS server for IPS URL filter DNS queries. Valid values: `enable`, `disable`.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
