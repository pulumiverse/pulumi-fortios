// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Setup for self orchestrated fabric auto discovery VPN. Applies to FortiOS Version `>= 7.2.4`.
 *
 * ## Import
 *
 * System FabricVpn can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:system/fabricvpn:Fabricvpn labelname SystemFabricVpn
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:system/fabricvpn:Fabricvpn labelname SystemFabricVpn
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Fabricvpn extends pulumi.CustomResource {
    /**
     * Get an existing Fabricvpn resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FabricvpnState, opts?: pulumi.CustomResourceOptions): Fabricvpn {
        return new Fabricvpn(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:system/fabricvpn:Fabricvpn';

    /**
     * Returns true if the given object is an instance of Fabricvpn.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Fabricvpn {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Fabricvpn.__pulumiType;
    }

    /**
     * Local advertised subnets. The structure of `advertisedSubnets` block is documented below.
     */
    public readonly advertisedSubnets!: pulumi.Output<outputs.system.FabricvpnAdvertisedSubnet[] | undefined>;
    /**
     * BGP Router AS number, valid from 1 to 4294967295.
     */
    public readonly bgpAs!: pulumi.Output<number>;
    /**
     * Branch name.
     */
    public readonly branchName!: pulumi.Output<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    /**
     * Underlying health checks.
     */
    public readonly healthChecks!: pulumi.Output<string>;
    /**
     * IPv4 address and subnet mask for hub's loopback address, syntax: X.X.X.X/24.
     */
    public readonly loopbackAddressBlock!: pulumi.Output<string>;
    /**
     * Loopback advertised subnet reference.
     */
    public readonly loopbackAdvertisedSubnet!: pulumi.Output<number>;
    /**
     * Loopback interface.
     */
    public readonly loopbackInterface!: pulumi.Output<string>;
    /**
     * Local overlay interfaces table. The structure of `overlays` block is documented below.
     */
    public readonly overlays!: pulumi.Output<outputs.system.FabricvpnOverlay[] | undefined>;
    /**
     * Policy creation rule. Valid values: `health-check`, `manual`, `auto`.
     */
    public readonly policyRule!: pulumi.Output<string>;
    /**
     * Pre-shared secret for ADVPN.
     */
    public readonly psksecret!: pulumi.Output<string | undefined>;
    /**
     * Reference to created SD-WAN zone.
     */
    public readonly sdwanZone!: pulumi.Output<string>;
    /**
     * Enable/disable Fabric VPN. Valid values: `enable`, `disable`.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * Setting synchronised by fabric or manual. Valid values: `enable`, `disable`.
     */
    public readonly syncMode!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;
    /**
     * Fabric VPN role. Valid values: `hub`, `spoke`.
     */
    public readonly vpnRole!: pulumi.Output<string>;

    /**
     * Create a Fabricvpn resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FabricvpnArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FabricvpnArgs | FabricvpnState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FabricvpnState | undefined;
            resourceInputs["advertisedSubnets"] = state ? state.advertisedSubnets : undefined;
            resourceInputs["bgpAs"] = state ? state.bgpAs : undefined;
            resourceInputs["branchName"] = state ? state.branchName : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["healthChecks"] = state ? state.healthChecks : undefined;
            resourceInputs["loopbackAddressBlock"] = state ? state.loopbackAddressBlock : undefined;
            resourceInputs["loopbackAdvertisedSubnet"] = state ? state.loopbackAdvertisedSubnet : undefined;
            resourceInputs["loopbackInterface"] = state ? state.loopbackInterface : undefined;
            resourceInputs["overlays"] = state ? state.overlays : undefined;
            resourceInputs["policyRule"] = state ? state.policyRule : undefined;
            resourceInputs["psksecret"] = state ? state.psksecret : undefined;
            resourceInputs["sdwanZone"] = state ? state.sdwanZone : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["syncMode"] = state ? state.syncMode : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
            resourceInputs["vpnRole"] = state ? state.vpnRole : undefined;
        } else {
            const args = argsOrState as FabricvpnArgs | undefined;
            resourceInputs["advertisedSubnets"] = args ? args.advertisedSubnets : undefined;
            resourceInputs["bgpAs"] = args ? args.bgpAs : undefined;
            resourceInputs["branchName"] = args ? args.branchName : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["healthChecks"] = args ? args.healthChecks : undefined;
            resourceInputs["loopbackAddressBlock"] = args ? args.loopbackAddressBlock : undefined;
            resourceInputs["loopbackAdvertisedSubnet"] = args ? args.loopbackAdvertisedSubnet : undefined;
            resourceInputs["loopbackInterface"] = args ? args.loopbackInterface : undefined;
            resourceInputs["overlays"] = args ? args.overlays : undefined;
            resourceInputs["policyRule"] = args ? args.policyRule : undefined;
            resourceInputs["psksecret"] = args ? args.psksecret : undefined;
            resourceInputs["sdwanZone"] = args ? args.sdwanZone : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["syncMode"] = args ? args.syncMode : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
            resourceInputs["vpnRole"] = args ? args.vpnRole : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Fabricvpn.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Fabricvpn resources.
 */
export interface FabricvpnState {
    /**
     * Local advertised subnets. The structure of `advertisedSubnets` block is documented below.
     */
    advertisedSubnets?: pulumi.Input<pulumi.Input<inputs.system.FabricvpnAdvertisedSubnet>[]>;
    /**
     * BGP Router AS number, valid from 1 to 4294967295.
     */
    bgpAs?: pulumi.Input<number>;
    /**
     * Branch name.
     */
    branchName?: pulumi.Input<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * Underlying health checks.
     */
    healthChecks?: pulumi.Input<string>;
    /**
     * IPv4 address and subnet mask for hub's loopback address, syntax: X.X.X.X/24.
     */
    loopbackAddressBlock?: pulumi.Input<string>;
    /**
     * Loopback advertised subnet reference.
     */
    loopbackAdvertisedSubnet?: pulumi.Input<number>;
    /**
     * Loopback interface.
     */
    loopbackInterface?: pulumi.Input<string>;
    /**
     * Local overlay interfaces table. The structure of `overlays` block is documented below.
     */
    overlays?: pulumi.Input<pulumi.Input<inputs.system.FabricvpnOverlay>[]>;
    /**
     * Policy creation rule. Valid values: `health-check`, `manual`, `auto`.
     */
    policyRule?: pulumi.Input<string>;
    /**
     * Pre-shared secret for ADVPN.
     */
    psksecret?: pulumi.Input<string>;
    /**
     * Reference to created SD-WAN zone.
     */
    sdwanZone?: pulumi.Input<string>;
    /**
     * Enable/disable Fabric VPN. Valid values: `enable`, `disable`.
     */
    status?: pulumi.Input<string>;
    /**
     * Setting synchronised by fabric or manual. Valid values: `enable`, `disable`.
     */
    syncMode?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Fabric VPN role. Valid values: `hub`, `spoke`.
     */
    vpnRole?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Fabricvpn resource.
 */
export interface FabricvpnArgs {
    /**
     * Local advertised subnets. The structure of `advertisedSubnets` block is documented below.
     */
    advertisedSubnets?: pulumi.Input<pulumi.Input<inputs.system.FabricvpnAdvertisedSubnet>[]>;
    /**
     * BGP Router AS number, valid from 1 to 4294967295.
     */
    bgpAs?: pulumi.Input<number>;
    /**
     * Branch name.
     */
    branchName?: pulumi.Input<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * Underlying health checks.
     */
    healthChecks?: pulumi.Input<string>;
    /**
     * IPv4 address and subnet mask for hub's loopback address, syntax: X.X.X.X/24.
     */
    loopbackAddressBlock?: pulumi.Input<string>;
    /**
     * Loopback advertised subnet reference.
     */
    loopbackAdvertisedSubnet?: pulumi.Input<number>;
    /**
     * Loopback interface.
     */
    loopbackInterface?: pulumi.Input<string>;
    /**
     * Local overlay interfaces table. The structure of `overlays` block is documented below.
     */
    overlays?: pulumi.Input<pulumi.Input<inputs.system.FabricvpnOverlay>[]>;
    /**
     * Policy creation rule. Valid values: `health-check`, `manual`, `auto`.
     */
    policyRule?: pulumi.Input<string>;
    /**
     * Pre-shared secret for ADVPN.
     */
    psksecret?: pulumi.Input<string>;
    /**
     * Reference to created SD-WAN zone.
     */
    sdwanZone?: pulumi.Input<string>;
    /**
     * Enable/disable Fabric VPN. Valid values: `enable`, `disable`.
     */
    status?: pulumi.Input<string>;
    /**
     * Setting synchronised by fabric or manual. Valid values: `enable`, `disable`.
     */
    syncMode?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Fabric VPN role. Valid values: `hub`, `spoke`.
     */
    vpnRole?: pulumi.Input<string>;
}
