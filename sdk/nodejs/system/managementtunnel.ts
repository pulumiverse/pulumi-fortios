// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Management tunnel configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumiverse/fortios";
 *
 * const trname = new fortios.system.Managementtunnel("trname", {
 *     allowCollectStatistics: "enable",
 *     allowConfigRestore: "enable",
 *     allowPushConfiguration: "enable",
 *     allowPushFirmware: "enable",
 *     authorizedManagerOnly: "enable",
 *     status: "enable",
 * });
 * ```
 *
 * ## Import
 *
 * System ManagementTunnel can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:system/managementtunnel:Managementtunnel labelname SystemManagementTunnel
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:system/managementtunnel:Managementtunnel labelname SystemManagementTunnel
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Managementtunnel extends pulumi.CustomResource {
    /**
     * Get an existing Managementtunnel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagementtunnelState, opts?: pulumi.CustomResourceOptions): Managementtunnel {
        return new Managementtunnel(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:system/managementtunnel:Managementtunnel';

    /**
     * Returns true if the given object is an instance of Managementtunnel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Managementtunnel {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Managementtunnel.__pulumiType;
    }

    /**
     * Enable/disable collection of run time statistics. Valid values: `enable`, `disable`.
     */
    public readonly allowCollectStatistics!: pulumi.Output<string>;
    /**
     * Enable/disable allow config restore. Valid values: `enable`, `disable`.
     */
    public readonly allowConfigRestore!: pulumi.Output<string>;
    /**
     * Enable/disable push configuration. Valid values: `enable`, `disable`.
     */
    public readonly allowPushConfiguration!: pulumi.Output<string>;
    /**
     * Enable/disable push firmware. Valid values: `enable`, `disable`.
     */
    public readonly allowPushFirmware!: pulumi.Output<string>;
    /**
     * Enable/disable restriction of authorized manager only. Valid values: `enable`, `disable`.
     */
    public readonly authorizedManagerOnly!: pulumi.Output<string>;
    /**
     * Serial number.
     */
    public readonly serialNumber!: pulumi.Output<string>;
    /**
     * Enable/disable FGFM tunnel. Valid values: `enable`, `disable`.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string>;

    /**
     * Create a Managementtunnel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ManagementtunnelArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManagementtunnelArgs | ManagementtunnelState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ManagementtunnelState | undefined;
            resourceInputs["allowCollectStatistics"] = state ? state.allowCollectStatistics : undefined;
            resourceInputs["allowConfigRestore"] = state ? state.allowConfigRestore : undefined;
            resourceInputs["allowPushConfiguration"] = state ? state.allowPushConfiguration : undefined;
            resourceInputs["allowPushFirmware"] = state ? state.allowPushFirmware : undefined;
            resourceInputs["authorizedManagerOnly"] = state ? state.authorizedManagerOnly : undefined;
            resourceInputs["serialNumber"] = state ? state.serialNumber : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as ManagementtunnelArgs | undefined;
            resourceInputs["allowCollectStatistics"] = args ? args.allowCollectStatistics : undefined;
            resourceInputs["allowConfigRestore"] = args ? args.allowConfigRestore : undefined;
            resourceInputs["allowPushConfiguration"] = args ? args.allowPushConfiguration : undefined;
            resourceInputs["allowPushFirmware"] = args ? args.allowPushFirmware : undefined;
            resourceInputs["authorizedManagerOnly"] = args ? args.authorizedManagerOnly : undefined;
            resourceInputs["serialNumber"] = args ? args.serialNumber : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Managementtunnel.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Managementtunnel resources.
 */
export interface ManagementtunnelState {
    /**
     * Enable/disable collection of run time statistics. Valid values: `enable`, `disable`.
     */
    allowCollectStatistics?: pulumi.Input<string>;
    /**
     * Enable/disable allow config restore. Valid values: `enable`, `disable`.
     */
    allowConfigRestore?: pulumi.Input<string>;
    /**
     * Enable/disable push configuration. Valid values: `enable`, `disable`.
     */
    allowPushConfiguration?: pulumi.Input<string>;
    /**
     * Enable/disable push firmware. Valid values: `enable`, `disable`.
     */
    allowPushFirmware?: pulumi.Input<string>;
    /**
     * Enable/disable restriction of authorized manager only. Valid values: `enable`, `disable`.
     */
    authorizedManagerOnly?: pulumi.Input<string>;
    /**
     * Serial number.
     */
    serialNumber?: pulumi.Input<string>;
    /**
     * Enable/disable FGFM tunnel. Valid values: `enable`, `disable`.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Managementtunnel resource.
 */
export interface ManagementtunnelArgs {
    /**
     * Enable/disable collection of run time statistics. Valid values: `enable`, `disable`.
     */
    allowCollectStatistics?: pulumi.Input<string>;
    /**
     * Enable/disable allow config restore. Valid values: `enable`, `disable`.
     */
    allowConfigRestore?: pulumi.Input<string>;
    /**
     * Enable/disable push configuration. Valid values: `enable`, `disable`.
     */
    allowPushConfiguration?: pulumi.Input<string>;
    /**
     * Enable/disable push firmware. Valid values: `enable`, `disable`.
     */
    allowPushFirmware?: pulumi.Input<string>;
    /**
     * Enable/disable restriction of authorized manager only. Valid values: `enable`, `disable`.
     */
    authorizedManagerOnly?: pulumi.Input<string>;
    /**
     * Serial number.
     */
    serialNumber?: pulumi.Input<string>;
    /**
     * Enable/disable FGFM tunnel. Valid values: `enable`, `disable`.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
