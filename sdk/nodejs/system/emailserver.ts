// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Configure the email server used by the FortiGate various things. For example, for sending email messages to users to support user authentication features.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumiverse/fortios";
 *
 * const trname = new fortios.system.Emailserver("trname", {
 *     authenticate: "disable",
 *     port: 465,
 *     security: "smtps",
 *     server: "notification.fortinet.net",
 *     sourceIp: "0.0.0.0",
 *     sourceIp6: "::",
 *     sslMinProtoVersion: "default",
 *     type: "custom",
 *     validateServer: "disable",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * System EmailServer can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:system/emailserver:Emailserver labelname SystemEmailServer
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:system/emailserver:Emailserver labelname SystemEmailServer
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Emailserver extends pulumi.CustomResource {
    /**
     * Get an existing Emailserver resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EmailserverState, opts?: pulumi.CustomResourceOptions): Emailserver {
        return new Emailserver(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:system/emailserver:Emailserver';

    /**
     * Returns true if the given object is an instance of Emailserver.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Emailserver {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Emailserver.__pulumiType;
    }

    /**
     * Enable/disable authentication. Valid values: `enable`, `disable`.
     */
    public readonly authenticate!: pulumi.Output<string>;
    /**
     * Specify outgoing interface to reach server.
     */
    public readonly interface!: pulumi.Output<string>;
    /**
     * Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
     */
    public readonly interfaceSelectMethod!: pulumi.Output<string>;
    /**
     * SMTP server user password for authentication.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * SMTP server port.
     */
    public readonly port!: pulumi.Output<number>;
    /**
     * Reply-To email address.
     */
    public readonly replyTo!: pulumi.Output<string>;
    /**
     * Connection security used by the email server. Valid values: `none`, `starttls`, `smtps`.
     */
    public readonly security!: pulumi.Output<string>;
    /**
     * SMTP server IP address or hostname.
     */
    public readonly server!: pulumi.Output<string>;
    /**
     * SMTP server IPv4 source IP.
     */
    public readonly sourceIp!: pulumi.Output<string>;
    /**
     * SMTP server IPv6 source IP.
     */
    public readonly sourceIp6!: pulumi.Output<string>;
    /**
     * Minimum supported protocol version for SSL/TLS connections (default is to follow system global setting).
     */
    public readonly sslMinProtoVersion!: pulumi.Output<string>;
    /**
     * Use FortiGuard Message service or custom email server. Valid values: `custom`.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * SMTP server user name for authentication.
     */
    public readonly username!: pulumi.Output<string>;
    /**
     * Enable/disable validation of server certificate. Valid values: `enable`, `disable`.
     */
    public readonly validateServer!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a Emailserver resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: EmailserverArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EmailserverArgs | EmailserverState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EmailserverState | undefined;
            resourceInputs["authenticate"] = state ? state.authenticate : undefined;
            resourceInputs["interface"] = state ? state.interface : undefined;
            resourceInputs["interfaceSelectMethod"] = state ? state.interfaceSelectMethod : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["replyTo"] = state ? state.replyTo : undefined;
            resourceInputs["security"] = state ? state.security : undefined;
            resourceInputs["server"] = state ? state.server : undefined;
            resourceInputs["sourceIp"] = state ? state.sourceIp : undefined;
            resourceInputs["sourceIp6"] = state ? state.sourceIp6 : undefined;
            resourceInputs["sslMinProtoVersion"] = state ? state.sslMinProtoVersion : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
            resourceInputs["validateServer"] = state ? state.validateServer : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as EmailserverArgs | undefined;
            resourceInputs["authenticate"] = args ? args.authenticate : undefined;
            resourceInputs["interface"] = args ? args.interface : undefined;
            resourceInputs["interfaceSelectMethod"] = args ? args.interfaceSelectMethod : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["replyTo"] = args ? args.replyTo : undefined;
            resourceInputs["security"] = args ? args.security : undefined;
            resourceInputs["server"] = args ? args.server : undefined;
            resourceInputs["sourceIp"] = args ? args.sourceIp : undefined;
            resourceInputs["sourceIp6"] = args ? args.sourceIp6 : undefined;
            resourceInputs["sslMinProtoVersion"] = args ? args.sslMinProtoVersion : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["validateServer"] = args ? args.validateServer : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Emailserver.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Emailserver resources.
 */
export interface EmailserverState {
    /**
     * Enable/disable authentication. Valid values: `enable`, `disable`.
     */
    authenticate?: pulumi.Input<string>;
    /**
     * Specify outgoing interface to reach server.
     */
    interface?: pulumi.Input<string>;
    /**
     * Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
     */
    interfaceSelectMethod?: pulumi.Input<string>;
    /**
     * SMTP server user password for authentication.
     */
    password?: pulumi.Input<string>;
    /**
     * SMTP server port.
     */
    port?: pulumi.Input<number>;
    /**
     * Reply-To email address.
     */
    replyTo?: pulumi.Input<string>;
    /**
     * Connection security used by the email server. Valid values: `none`, `starttls`, `smtps`.
     */
    security?: pulumi.Input<string>;
    /**
     * SMTP server IP address or hostname.
     */
    server?: pulumi.Input<string>;
    /**
     * SMTP server IPv4 source IP.
     */
    sourceIp?: pulumi.Input<string>;
    /**
     * SMTP server IPv6 source IP.
     */
    sourceIp6?: pulumi.Input<string>;
    /**
     * Minimum supported protocol version for SSL/TLS connections (default is to follow system global setting).
     */
    sslMinProtoVersion?: pulumi.Input<string>;
    /**
     * Use FortiGuard Message service or custom email server. Valid values: `custom`.
     */
    type?: pulumi.Input<string>;
    /**
     * SMTP server user name for authentication.
     */
    username?: pulumi.Input<string>;
    /**
     * Enable/disable validation of server certificate. Valid values: `enable`, `disable`.
     */
    validateServer?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Emailserver resource.
 */
export interface EmailserverArgs {
    /**
     * Enable/disable authentication. Valid values: `enable`, `disable`.
     */
    authenticate?: pulumi.Input<string>;
    /**
     * Specify outgoing interface to reach server.
     */
    interface?: pulumi.Input<string>;
    /**
     * Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
     */
    interfaceSelectMethod?: pulumi.Input<string>;
    /**
     * SMTP server user password for authentication.
     */
    password?: pulumi.Input<string>;
    /**
     * SMTP server port.
     */
    port?: pulumi.Input<number>;
    /**
     * Reply-To email address.
     */
    replyTo?: pulumi.Input<string>;
    /**
     * Connection security used by the email server. Valid values: `none`, `starttls`, `smtps`.
     */
    security?: pulumi.Input<string>;
    /**
     * SMTP server IP address or hostname.
     */
    server?: pulumi.Input<string>;
    /**
     * SMTP server IPv4 source IP.
     */
    sourceIp?: pulumi.Input<string>;
    /**
     * SMTP server IPv6 source IP.
     */
    sourceIp6?: pulumi.Input<string>;
    /**
     * Minimum supported protocol version for SSL/TLS connections (default is to follow system global setting).
     */
    sslMinProtoVersion?: pulumi.Input<string>;
    /**
     * Use FortiGuard Message service or custom email server. Valid values: `custom`.
     */
    type?: pulumi.Input<string>;
    /**
     * SMTP server user name for authentication.
     */
    username?: pulumi.Input<string>;
    /**
     * Enable/disable validation of server certificate. Valid values: `enable`, `disable`.
     */
    validateServer?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
