// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Configure application control lists.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumiverse/fortios";
 *
 * const trname = new fortios.application.List("trname", {
 *     appReplacemsg: "enable",
 *     deepAppInspection: "enable",
 *     enforceDefaultAppPort: "disable",
 *     extendedLog: "disable",
 *     options: "allow-dns",
 *     otherApplicationAction: "pass",
 *     otherApplicationLog: "disable",
 *     unknownApplicationAction: "pass",
 *     unknownApplicationLog: "disable",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * Application List can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:application/list:List labelname {{name}}
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:application/list:List labelname {{name}}
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class List extends pulumi.CustomResource {
    /**
     * Get an existing List resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ListState, opts?: pulumi.CustomResourceOptions): List {
        return new List(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:application/list:List';

    /**
     * Returns true if the given object is an instance of List.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is List {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === List.__pulumiType;
    }

    /**
     * Enable/disable replacement messages for blocked applications. Valid values: `disable`, `enable`.
     */
    public readonly appReplacemsg!: pulumi.Output<string>;
    /**
     * comments
     */
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * Enable/disable enforcement of protocols over selected ports. Valid values: `disable`, `enable`.
     */
    public readonly controlDefaultNetworkServices!: pulumi.Output<string>;
    /**
     * Enable/disable deep application inspection. Valid values: `disable`, `enable`.
     */
    public readonly deepAppInspection!: pulumi.Output<string>;
    /**
     * Default network service entries. The structure of `defaultNetworkServices` block is documented below.
     */
    public readonly defaultNetworkServices!: pulumi.Output<outputs.application.ListDefaultNetworkService[] | undefined>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * Enable/disable default application port enforcement for allowed applications. Valid values: `disable`, `enable`.
     */
    public readonly enforceDefaultAppPort!: pulumi.Output<string>;
    /**
     * Application list entries. The structure of `entries` block is documented below.
     */
    public readonly entries!: pulumi.Output<outputs.application.ListEntry[] | undefined>;
    /**
     * Enable/disable extended logging. Valid values: `enable`, `disable`.
     */
    public readonly extendedLog!: pulumi.Output<string>;
    /**
     * Enable/disable forced inclusion of SSL deep inspection signatures. Valid values: `disable`, `enable`.
     */
    public readonly forceInclusionSslDiSigs!: pulumi.Output<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    /**
     * List name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Basic application protocol signatures allowed by default.
     */
    public readonly options!: pulumi.Output<string>;
    /**
     * Action for other applications. Valid values: `pass`, `block`.
     */
    public readonly otherApplicationAction!: pulumi.Output<string>;
    /**
     * Enable/disable logging for other applications. Valid values: `disable`, `enable`.
     */
    public readonly otherApplicationLog!: pulumi.Output<string>;
    /**
     * P2P applications to be black listed. Valid values: `skype`, `edonkey`, `bittorrent`.
     */
    public readonly p2pBlackList!: pulumi.Output<string>;
    /**
     * P2P applications to be blocklisted. Valid values: `skype`, `edonkey`, `bittorrent`.
     */
    public readonly p2pBlockList!: pulumi.Output<string>;
    /**
     * Replacement message group.
     */
    public readonly replacemsgGroup!: pulumi.Output<string>;
    /**
     * Pass or block traffic from unknown applications. Valid values: `pass`, `block`.
     */
    public readonly unknownApplicationAction!: pulumi.Output<string>;
    /**
     * Enable/disable logging for unknown applications. Valid values: `disable`, `enable`.
     */
    public readonly unknownApplicationLog!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a List resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ListArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ListArgs | ListState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ListState | undefined;
            resourceInputs["appReplacemsg"] = state ? state.appReplacemsg : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["controlDefaultNetworkServices"] = state ? state.controlDefaultNetworkServices : undefined;
            resourceInputs["deepAppInspection"] = state ? state.deepAppInspection : undefined;
            resourceInputs["defaultNetworkServices"] = state ? state.defaultNetworkServices : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["enforceDefaultAppPort"] = state ? state.enforceDefaultAppPort : undefined;
            resourceInputs["entries"] = state ? state.entries : undefined;
            resourceInputs["extendedLog"] = state ? state.extendedLog : undefined;
            resourceInputs["forceInclusionSslDiSigs"] = state ? state.forceInclusionSslDiSigs : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["options"] = state ? state.options : undefined;
            resourceInputs["otherApplicationAction"] = state ? state.otherApplicationAction : undefined;
            resourceInputs["otherApplicationLog"] = state ? state.otherApplicationLog : undefined;
            resourceInputs["p2pBlackList"] = state ? state.p2pBlackList : undefined;
            resourceInputs["p2pBlockList"] = state ? state.p2pBlockList : undefined;
            resourceInputs["replacemsgGroup"] = state ? state.replacemsgGroup : undefined;
            resourceInputs["unknownApplicationAction"] = state ? state.unknownApplicationAction : undefined;
            resourceInputs["unknownApplicationLog"] = state ? state.unknownApplicationLog : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as ListArgs | undefined;
            resourceInputs["appReplacemsg"] = args ? args.appReplacemsg : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["controlDefaultNetworkServices"] = args ? args.controlDefaultNetworkServices : undefined;
            resourceInputs["deepAppInspection"] = args ? args.deepAppInspection : undefined;
            resourceInputs["defaultNetworkServices"] = args ? args.defaultNetworkServices : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["enforceDefaultAppPort"] = args ? args.enforceDefaultAppPort : undefined;
            resourceInputs["entries"] = args ? args.entries : undefined;
            resourceInputs["extendedLog"] = args ? args.extendedLog : undefined;
            resourceInputs["forceInclusionSslDiSigs"] = args ? args.forceInclusionSslDiSigs : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["options"] = args ? args.options : undefined;
            resourceInputs["otherApplicationAction"] = args ? args.otherApplicationAction : undefined;
            resourceInputs["otherApplicationLog"] = args ? args.otherApplicationLog : undefined;
            resourceInputs["p2pBlackList"] = args ? args.p2pBlackList : undefined;
            resourceInputs["p2pBlockList"] = args ? args.p2pBlockList : undefined;
            resourceInputs["replacemsgGroup"] = args ? args.replacemsgGroup : undefined;
            resourceInputs["unknownApplicationAction"] = args ? args.unknownApplicationAction : undefined;
            resourceInputs["unknownApplicationLog"] = args ? args.unknownApplicationLog : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(List.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering List resources.
 */
export interface ListState {
    /**
     * Enable/disable replacement messages for blocked applications. Valid values: `disable`, `enable`.
     */
    appReplacemsg?: pulumi.Input<string>;
    /**
     * comments
     */
    comment?: pulumi.Input<string>;
    /**
     * Enable/disable enforcement of protocols over selected ports. Valid values: `disable`, `enable`.
     */
    controlDefaultNetworkServices?: pulumi.Input<string>;
    /**
     * Enable/disable deep application inspection. Valid values: `disable`, `enable`.
     */
    deepAppInspection?: pulumi.Input<string>;
    /**
     * Default network service entries. The structure of `defaultNetworkServices` block is documented below.
     */
    defaultNetworkServices?: pulumi.Input<pulumi.Input<inputs.application.ListDefaultNetworkService>[]>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Enable/disable default application port enforcement for allowed applications. Valid values: `disable`, `enable`.
     */
    enforceDefaultAppPort?: pulumi.Input<string>;
    /**
     * Application list entries. The structure of `entries` block is documented below.
     */
    entries?: pulumi.Input<pulumi.Input<inputs.application.ListEntry>[]>;
    /**
     * Enable/disable extended logging. Valid values: `enable`, `disable`.
     */
    extendedLog?: pulumi.Input<string>;
    /**
     * Enable/disable forced inclusion of SSL deep inspection signatures. Valid values: `disable`, `enable`.
     */
    forceInclusionSslDiSigs?: pulumi.Input<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * List name.
     */
    name?: pulumi.Input<string>;
    /**
     * Basic application protocol signatures allowed by default.
     */
    options?: pulumi.Input<string>;
    /**
     * Action for other applications. Valid values: `pass`, `block`.
     */
    otherApplicationAction?: pulumi.Input<string>;
    /**
     * Enable/disable logging for other applications. Valid values: `disable`, `enable`.
     */
    otherApplicationLog?: pulumi.Input<string>;
    /**
     * P2P applications to be black listed. Valid values: `skype`, `edonkey`, `bittorrent`.
     */
    p2pBlackList?: pulumi.Input<string>;
    /**
     * P2P applications to be blocklisted. Valid values: `skype`, `edonkey`, `bittorrent`.
     */
    p2pBlockList?: pulumi.Input<string>;
    /**
     * Replacement message group.
     */
    replacemsgGroup?: pulumi.Input<string>;
    /**
     * Pass or block traffic from unknown applications. Valid values: `pass`, `block`.
     */
    unknownApplicationAction?: pulumi.Input<string>;
    /**
     * Enable/disable logging for unknown applications. Valid values: `disable`, `enable`.
     */
    unknownApplicationLog?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a List resource.
 */
export interface ListArgs {
    /**
     * Enable/disable replacement messages for blocked applications. Valid values: `disable`, `enable`.
     */
    appReplacemsg?: pulumi.Input<string>;
    /**
     * comments
     */
    comment?: pulumi.Input<string>;
    /**
     * Enable/disable enforcement of protocols over selected ports. Valid values: `disable`, `enable`.
     */
    controlDefaultNetworkServices?: pulumi.Input<string>;
    /**
     * Enable/disable deep application inspection. Valid values: `disable`, `enable`.
     */
    deepAppInspection?: pulumi.Input<string>;
    /**
     * Default network service entries. The structure of `defaultNetworkServices` block is documented below.
     */
    defaultNetworkServices?: pulumi.Input<pulumi.Input<inputs.application.ListDefaultNetworkService>[]>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Enable/disable default application port enforcement for allowed applications. Valid values: `disable`, `enable`.
     */
    enforceDefaultAppPort?: pulumi.Input<string>;
    /**
     * Application list entries. The structure of `entries` block is documented below.
     */
    entries?: pulumi.Input<pulumi.Input<inputs.application.ListEntry>[]>;
    /**
     * Enable/disable extended logging. Valid values: `enable`, `disable`.
     */
    extendedLog?: pulumi.Input<string>;
    /**
     * Enable/disable forced inclusion of SSL deep inspection signatures. Valid values: `disable`, `enable`.
     */
    forceInclusionSslDiSigs?: pulumi.Input<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * List name.
     */
    name?: pulumi.Input<string>;
    /**
     * Basic application protocol signatures allowed by default.
     */
    options?: pulumi.Input<string>;
    /**
     * Action for other applications. Valid values: `pass`, `block`.
     */
    otherApplicationAction?: pulumi.Input<string>;
    /**
     * Enable/disable logging for other applications. Valid values: `disable`, `enable`.
     */
    otherApplicationLog?: pulumi.Input<string>;
    /**
     * P2P applications to be black listed. Valid values: `skype`, `edonkey`, `bittorrent`.
     */
    p2pBlackList?: pulumi.Input<string>;
    /**
     * P2P applications to be blocklisted. Valid values: `skype`, `edonkey`, `bittorrent`.
     */
    p2pBlockList?: pulumi.Input<string>;
    /**
     * Replacement message group.
     */
    replacemsgGroup?: pulumi.Input<string>;
    /**
     * Pass or block traffic from unknown applications. Valid values: `pass`, `block`.
     */
    unknownApplicationAction?: pulumi.Input<string>;
    /**
     * Enable/disable logging for unknown applications. Valid values: `disable`, `enable`.
     */
    unknownApplicationLog?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
