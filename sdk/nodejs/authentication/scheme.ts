// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Configure Authentication Schemes.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumiverse/fortios";
 *
 * const trname3 = new fortios.user.Fsso("trname3", {
 *     port: 8000,
 *     port2: 8000,
 *     port3: 8000,
 *     port4: 8000,
 *     port5: 8000,
 *     server: "1.1.1.1",
 *     sourceIp: "0.0.0.0",
 *     sourceIp6: "::",
 * });
 * const trname = new fortios.authentication.Scheme("trname", {
 *     fssoAgentForNtlm: trname3.name,
 *     fssoGuest: "disable",
 *     method: "ntlm",
 *     negotiateNtlm: "enable",
 *     requireTfa: "disable",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * Authentication Scheme can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:authentication/scheme:Scheme labelname {{name}}
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:authentication/scheme:Scheme labelname {{name}}
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Scheme extends pulumi.CustomResource {
    /**
     * Get an existing Scheme resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SchemeState, opts?: pulumi.CustomResourceOptions): Scheme {
        return new Scheme(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:authentication/scheme:Scheme';

    /**
     * Returns true if the given object is an instance of Scheme.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Scheme {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Scheme.__pulumiType;
    }

    /**
     * Domain controller setting.
     */
    public readonly domainController!: pulumi.Output<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * FSSO agent to use for NTLM authentication.
     */
    public readonly fssoAgentForNtlm!: pulumi.Output<string>;
    /**
     * Enable/disable user fsso-guest authentication (default = disable). Valid values: `enable`, `disable`.
     */
    public readonly fssoGuest!: pulumi.Output<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    /**
     * Kerberos keytab setting.
     */
    public readonly kerberosKeytab!: pulumi.Output<string>;
    /**
     * Authentication methods (default = basic).
     */
    public readonly method!: pulumi.Output<string>;
    /**
     * Authentication scheme name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Enable/disable negotiate authentication for NTLM (default = disable). Valid values: `enable`, `disable`.
     */
    public readonly negotiateNtlm!: pulumi.Output<string>;
    /**
     * Enable/disable two-factor authentication (default = disable). Valid values: `enable`, `disable`.
     */
    public readonly requireTfa!: pulumi.Output<string>;
    /**
     * SAML configuration.
     */
    public readonly samlServer!: pulumi.Output<string>;
    /**
     * SAML authentication timeout in seconds.
     */
    public readonly samlTimeout!: pulumi.Output<number>;
    /**
     * SSH CA name.
     */
    public readonly sshCa!: pulumi.Output<string>;
    /**
     * Enable/disable authentication with user certificate (default = disable). Valid values: `enable`, `disable`.
     */
    public readonly userCert!: pulumi.Output<string>;
    /**
     * Authentication server to contain user information; "local" (default) or "123" (for LDAP). The structure of `userDatabase` block is documented below.
     */
    public readonly userDatabases!: pulumi.Output<outputs.authentication.SchemeUserDatabase[] | undefined>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a Scheme resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SchemeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SchemeArgs | SchemeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SchemeState | undefined;
            resourceInputs["domainController"] = state ? state.domainController : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["fssoAgentForNtlm"] = state ? state.fssoAgentForNtlm : undefined;
            resourceInputs["fssoGuest"] = state ? state.fssoGuest : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["kerberosKeytab"] = state ? state.kerberosKeytab : undefined;
            resourceInputs["method"] = state ? state.method : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["negotiateNtlm"] = state ? state.negotiateNtlm : undefined;
            resourceInputs["requireTfa"] = state ? state.requireTfa : undefined;
            resourceInputs["samlServer"] = state ? state.samlServer : undefined;
            resourceInputs["samlTimeout"] = state ? state.samlTimeout : undefined;
            resourceInputs["sshCa"] = state ? state.sshCa : undefined;
            resourceInputs["userCert"] = state ? state.userCert : undefined;
            resourceInputs["userDatabases"] = state ? state.userDatabases : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as SchemeArgs | undefined;
            if ((!args || args.method === undefined) && !opts.urn) {
                throw new Error("Missing required property 'method'");
            }
            resourceInputs["domainController"] = args ? args.domainController : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["fssoAgentForNtlm"] = args ? args.fssoAgentForNtlm : undefined;
            resourceInputs["fssoGuest"] = args ? args.fssoGuest : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["kerberosKeytab"] = args ? args.kerberosKeytab : undefined;
            resourceInputs["method"] = args ? args.method : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["negotiateNtlm"] = args ? args.negotiateNtlm : undefined;
            resourceInputs["requireTfa"] = args ? args.requireTfa : undefined;
            resourceInputs["samlServer"] = args ? args.samlServer : undefined;
            resourceInputs["samlTimeout"] = args ? args.samlTimeout : undefined;
            resourceInputs["sshCa"] = args ? args.sshCa : undefined;
            resourceInputs["userCert"] = args ? args.userCert : undefined;
            resourceInputs["userDatabases"] = args ? args.userDatabases : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Scheme.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Scheme resources.
 */
export interface SchemeState {
    /**
     * Domain controller setting.
     */
    domainController?: pulumi.Input<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * FSSO agent to use for NTLM authentication.
     */
    fssoAgentForNtlm?: pulumi.Input<string>;
    /**
     * Enable/disable user fsso-guest authentication (default = disable). Valid values: `enable`, `disable`.
     */
    fssoGuest?: pulumi.Input<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * Kerberos keytab setting.
     */
    kerberosKeytab?: pulumi.Input<string>;
    /**
     * Authentication methods (default = basic).
     */
    method?: pulumi.Input<string>;
    /**
     * Authentication scheme name.
     */
    name?: pulumi.Input<string>;
    /**
     * Enable/disable negotiate authentication for NTLM (default = disable). Valid values: `enable`, `disable`.
     */
    negotiateNtlm?: pulumi.Input<string>;
    /**
     * Enable/disable two-factor authentication (default = disable). Valid values: `enable`, `disable`.
     */
    requireTfa?: pulumi.Input<string>;
    /**
     * SAML configuration.
     */
    samlServer?: pulumi.Input<string>;
    /**
     * SAML authentication timeout in seconds.
     */
    samlTimeout?: pulumi.Input<number>;
    /**
     * SSH CA name.
     */
    sshCa?: pulumi.Input<string>;
    /**
     * Enable/disable authentication with user certificate (default = disable). Valid values: `enable`, `disable`.
     */
    userCert?: pulumi.Input<string>;
    /**
     * Authentication server to contain user information; "local" (default) or "123" (for LDAP). The structure of `userDatabase` block is documented below.
     */
    userDatabases?: pulumi.Input<pulumi.Input<inputs.authentication.SchemeUserDatabase>[]>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Scheme resource.
 */
export interface SchemeArgs {
    /**
     * Domain controller setting.
     */
    domainController?: pulumi.Input<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * FSSO agent to use for NTLM authentication.
     */
    fssoAgentForNtlm?: pulumi.Input<string>;
    /**
     * Enable/disable user fsso-guest authentication (default = disable). Valid values: `enable`, `disable`.
     */
    fssoGuest?: pulumi.Input<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * Kerberos keytab setting.
     */
    kerberosKeytab?: pulumi.Input<string>;
    /**
     * Authentication methods (default = basic).
     */
    method: pulumi.Input<string>;
    /**
     * Authentication scheme name.
     */
    name?: pulumi.Input<string>;
    /**
     * Enable/disable negotiate authentication for NTLM (default = disable). Valid values: `enable`, `disable`.
     */
    negotiateNtlm?: pulumi.Input<string>;
    /**
     * Enable/disable two-factor authentication (default = disable). Valid values: `enable`, `disable`.
     */
    requireTfa?: pulumi.Input<string>;
    /**
     * SAML configuration.
     */
    samlServer?: pulumi.Input<string>;
    /**
     * SAML authentication timeout in seconds.
     */
    samlTimeout?: pulumi.Input<number>;
    /**
     * SSH CA name.
     */
    sshCa?: pulumi.Input<string>;
    /**
     * Enable/disable authentication with user certificate (default = disable). Valid values: `enable`, `disable`.
     */
    userCert?: pulumi.Input<string>;
    /**
     * Authentication server to contain user information; "local" (default) or "123" (for LDAP). The structure of `userDatabase` block is documented below.
     */
    userDatabases?: pulumi.Input<pulumi.Input<inputs.authentication.SchemeUserDatabase>[]>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
