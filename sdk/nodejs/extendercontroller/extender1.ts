// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Extender controller configuration.
 * This resource will be deprecated. For FortiOS Version >= 7.2.1, using `fortios.extensioncontroller.Extender`. For FortiOS version < 7.2.1, see `fortios.extendercontroller.Extender`
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumiverse/fortios";
 *
 * const trname = new fortios.extendercontroller.Extender1("trname", {
 *     authorized: "disable",
 *     controllerReport: {
 *         interval: 300,
 *         signalThreshold: 10,
 *         status: "disable",
 *     },
 *     extName: "2932",
 *     fosid: "FX201E5919004031",
 *     modem1: {
 *         autoSwitch: {
 *             dataplan: "disable",
 *             disconnect: "disable",
 *             disconnectPeriod: 600,
 *             disconnectThreshold: 3,
 *             signal: "disable",
 *             switchBack: "timer",
 *             switchBackTime: "00:01",
 *             switchBackTimer: 86400,
 *         },
 *         connStatus: 0,
 *         defaultSim: "sim2",
 *         gps: "enable",
 *         redundantIntf: "s1",
 *         redundantMode: "enable",
 *         sim1Pin: "disable",
 *         sim1PinCode: "testpincode",
 *         sim2Pin: "disable",
 *     },
 *     modem2: {
 *         autoSwitch: {
 *             dataplan: "disable",
 *             disconnect: "disable",
 *             disconnectPeriod: 600,
 *             disconnectThreshold: 3,
 *             signal: "disable",
 *             switchBackTime: "00:01",
 *             switchBackTimer: 86400,
 *         },
 *         connStatus: 0,
 *         defaultSim: "sim1",
 *         gps: "enable",
 *         redundantMode: "disable",
 *         sim1Pin: "disable",
 *         sim2Pin: "disable",
 *     },
 *     vdom: 0,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * ExtenderController Extender1 can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:extendercontroller/extender1:Extender1 labelname {{name}}
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:extendercontroller/extender1:Extender1 labelname {{name}}
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Extender1 extends pulumi.CustomResource {
    /**
     * Get an existing Extender1 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Extender1State, opts?: pulumi.CustomResourceOptions): Extender1 {
        return new Extender1(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:extendercontroller/extender1:Extender1';

    /**
     * Returns true if the given object is an instance of Extender1.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Extender1 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Extender1.__pulumiType;
    }

    /**
     * FortiExtender Administration (enable or disable). Valid values: `disable`, `enable`.
     */
    public readonly authorized!: pulumi.Output<string>;
    /**
     * FortiExtender controller report configuration. The structure of `controllerReport` block is documented below.
     */
    public readonly controllerReport!: pulumi.Output<outputs.extendercontroller.Extender1ControllerReport>;
    /**
     * Description.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * FortiExtender name.
     */
    public readonly extName!: pulumi.Output<string>;
    /**
     * FortiExtender serial number.
     */
    public readonly fosid!: pulumi.Output<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    /**
     * FortiExtender login password.
     */
    public readonly loginPassword!: pulumi.Output<string | undefined>;
    /**
     * Configuration options for modem 1. The structure of `modem1` block is documented below.
     */
    public readonly modem1!: pulumi.Output<outputs.extendercontroller.Extender1Modem1>;
    /**
     * Configuration options for modem 2. The structure of `modem2` block is documented below.
     */
    public readonly modem2!: pulumi.Output<outputs.extendercontroller.Extender1Modem2>;
    /**
     * FortiExtender entry name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * VDOM
     */
    public readonly vdom!: pulumi.Output<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a Extender1 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Extender1Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Extender1Args | Extender1State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Extender1State | undefined;
            resourceInputs["authorized"] = state ? state.authorized : undefined;
            resourceInputs["controllerReport"] = state ? state.controllerReport : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["extName"] = state ? state.extName : undefined;
            resourceInputs["fosid"] = state ? state.fosid : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["loginPassword"] = state ? state.loginPassword : undefined;
            resourceInputs["modem1"] = state ? state.modem1 : undefined;
            resourceInputs["modem2"] = state ? state.modem2 : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["vdom"] = state ? state.vdom : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as Extender1Args | undefined;
            if ((!args || args.authorized === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authorized'");
            }
            resourceInputs["authorized"] = args ? args.authorized : undefined;
            resourceInputs["controllerReport"] = args ? args.controllerReport : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["extName"] = args ? args.extName : undefined;
            resourceInputs["fosid"] = args ? args.fosid : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["loginPassword"] = args?.loginPassword ? pulumi.secret(args.loginPassword) : undefined;
            resourceInputs["modem1"] = args ? args.modem1 : undefined;
            resourceInputs["modem2"] = args ? args.modem2 : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["vdom"] = args ? args.vdom : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["loginPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Extender1.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Extender1 resources.
 */
export interface Extender1State {
    /**
     * FortiExtender Administration (enable or disable). Valid values: `disable`, `enable`.
     */
    authorized?: pulumi.Input<string>;
    /**
     * FortiExtender controller report configuration. The structure of `controllerReport` block is documented below.
     */
    controllerReport?: pulumi.Input<inputs.extendercontroller.Extender1ControllerReport>;
    /**
     * Description.
     */
    description?: pulumi.Input<string>;
    /**
     * FortiExtender name.
     */
    extName?: pulumi.Input<string>;
    /**
     * FortiExtender serial number.
     */
    fosid?: pulumi.Input<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * FortiExtender login password.
     */
    loginPassword?: pulumi.Input<string>;
    /**
     * Configuration options for modem 1. The structure of `modem1` block is documented below.
     */
    modem1?: pulumi.Input<inputs.extendercontroller.Extender1Modem1>;
    /**
     * Configuration options for modem 2. The structure of `modem2` block is documented below.
     */
    modem2?: pulumi.Input<inputs.extendercontroller.Extender1Modem2>;
    /**
     * FortiExtender entry name.
     */
    name?: pulumi.Input<string>;
    /**
     * VDOM
     */
    vdom?: pulumi.Input<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Extender1 resource.
 */
export interface Extender1Args {
    /**
     * FortiExtender Administration (enable or disable). Valid values: `disable`, `enable`.
     */
    authorized: pulumi.Input<string>;
    /**
     * FortiExtender controller report configuration. The structure of `controllerReport` block is documented below.
     */
    controllerReport?: pulumi.Input<inputs.extendercontroller.Extender1ControllerReport>;
    /**
     * Description.
     */
    description?: pulumi.Input<string>;
    /**
     * FortiExtender name.
     */
    extName?: pulumi.Input<string>;
    /**
     * FortiExtender serial number.
     */
    fosid?: pulumi.Input<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * FortiExtender login password.
     */
    loginPassword?: pulumi.Input<string>;
    /**
     * Configuration options for modem 1. The structure of `modem1` block is documented below.
     */
    modem1?: pulumi.Input<inputs.extendercontroller.Extender1Modem1>;
    /**
     * Configuration options for modem 2. The structure of `modem2` block is documented below.
     */
    modem2?: pulumi.Input<inputs.extendercontroller.Extender1Modem2>;
    /**
     * FortiExtender entry name.
     */
    name?: pulumi.Input<string>;
    /**
     * VDOM
     */
    vdom?: pulumi.Input<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
