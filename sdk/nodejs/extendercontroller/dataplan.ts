// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * FortiExtender dataplan configuration. Applies to FortiOS Version `6.4.2,6.4.10,6.4.11,6.4.12,6.4.13,6.4.14,7.0.0,7.0.1,7.0.2,7.0.3,7.0.4,7.0.5,7.0.6,7.0.7,7.0.8,7.0.9,7.0.10,7.0.11,7.0.12,7.0.13,7.2.0`.
 *
 * ## Import
 *
 * ExtenderController Dataplan can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:extendercontroller/dataplan:Dataplan labelname {{name}}
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:extendercontroller/dataplan:Dataplan labelname {{name}}
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Dataplan extends pulumi.CustomResource {
    /**
     * Get an existing Dataplan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DataplanState, opts?: pulumi.CustomResourceOptions): Dataplan {
        return new Dataplan(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:extendercontroller/dataplan:Dataplan';

    /**
     * Returns true if the given object is an instance of Dataplan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Dataplan {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Dataplan.__pulumiType;
    }

    /**
     * APN configuration.
     */
    public readonly apn!: pulumi.Output<string>;
    /**
     * Authentication type. Valid values: `none`, `pap`, `chap`.
     */
    public readonly authType!: pulumi.Output<string>;
    /**
     * Billing day of the month (1 - 31).
     */
    public readonly billingDate!: pulumi.Output<number>;
    /**
     * Capacity in MB (0 - 102400000).
     */
    public readonly capacity!: pulumi.Output<number>;
    /**
     * Carrier configuration.
     */
    public readonly carrier!: pulumi.Output<string>;
    /**
     * ICCID configuration.
     */
    public readonly iccid!: pulumi.Output<string>;
    /**
     * Dataplan's modem specifics, if any. Valid values: `modem1`, `modem2`, `all`.
     */
    public readonly modemId!: pulumi.Output<string>;
    /**
     * Monthly fee of dataplan (0 - 100000, in local currency).
     */
    public readonly monthlyFee!: pulumi.Output<number>;
    /**
     * FortiExtender dataplan name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Enable/disable dataplan overage detection. Valid values: `disable`, `enable`.
     */
    public readonly overage!: pulumi.Output<string>;
    /**
     * Password.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * PDN type. Valid values: `ipv4-only`, `ipv6-only`, `ipv4-ipv6`.
     */
    public readonly pdn!: pulumi.Output<string>;
    /**
     * Preferred subnet mask. On FortiOS versions 6.4.2-7.0.1: 8 - 32. On FortiOS versions 7.0.2-7.2.0: 0 - 32.
     */
    public readonly preferredSubnet!: pulumi.Output<number>;
    /**
     * Enable/disable dataplan private network support. Valid values: `disable`, `enable`.
     */
    public readonly privateNetwork!: pulumi.Output<string>;
    /**
     * Signal period (600 to 18000 seconds).
     */
    public readonly signalPeriod!: pulumi.Output<number>;
    /**
     * Signal threshold. Specify the range between 50 - 100, where 50/100 means -50/-100 dBm.
     */
    public readonly signalThreshold!: pulumi.Output<number>;
    /**
     * SIM slot configuration. Valid values: `sim1`, `sim2`.
     */
    public readonly slot!: pulumi.Output<string>;
    /**
     * Type preferences configuration. Valid values: `carrier`, `slot`, `iccid`, `generic`.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * Username.
     */
    public readonly username!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a Dataplan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DataplanArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DataplanArgs | DataplanState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DataplanState | undefined;
            resourceInputs["apn"] = state ? state.apn : undefined;
            resourceInputs["authType"] = state ? state.authType : undefined;
            resourceInputs["billingDate"] = state ? state.billingDate : undefined;
            resourceInputs["capacity"] = state ? state.capacity : undefined;
            resourceInputs["carrier"] = state ? state.carrier : undefined;
            resourceInputs["iccid"] = state ? state.iccid : undefined;
            resourceInputs["modemId"] = state ? state.modemId : undefined;
            resourceInputs["monthlyFee"] = state ? state.monthlyFee : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["overage"] = state ? state.overage : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["pdn"] = state ? state.pdn : undefined;
            resourceInputs["preferredSubnet"] = state ? state.preferredSubnet : undefined;
            resourceInputs["privateNetwork"] = state ? state.privateNetwork : undefined;
            resourceInputs["signalPeriod"] = state ? state.signalPeriod : undefined;
            resourceInputs["signalThreshold"] = state ? state.signalThreshold : undefined;
            resourceInputs["slot"] = state ? state.slot : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as DataplanArgs | undefined;
            resourceInputs["apn"] = args ? args.apn : undefined;
            resourceInputs["authType"] = args ? args.authType : undefined;
            resourceInputs["billingDate"] = args ? args.billingDate : undefined;
            resourceInputs["capacity"] = args ? args.capacity : undefined;
            resourceInputs["carrier"] = args ? args.carrier : undefined;
            resourceInputs["iccid"] = args ? args.iccid : undefined;
            resourceInputs["modemId"] = args ? args.modemId : undefined;
            resourceInputs["monthlyFee"] = args ? args.monthlyFee : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["overage"] = args ? args.overage : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["pdn"] = args ? args.pdn : undefined;
            resourceInputs["preferredSubnet"] = args ? args.preferredSubnet : undefined;
            resourceInputs["privateNetwork"] = args ? args.privateNetwork : undefined;
            resourceInputs["signalPeriod"] = args ? args.signalPeriod : undefined;
            resourceInputs["signalThreshold"] = args ? args.signalThreshold : undefined;
            resourceInputs["slot"] = args ? args.slot : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Dataplan.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Dataplan resources.
 */
export interface DataplanState {
    /**
     * APN configuration.
     */
    apn?: pulumi.Input<string>;
    /**
     * Authentication type. Valid values: `none`, `pap`, `chap`.
     */
    authType?: pulumi.Input<string>;
    /**
     * Billing day of the month (1 - 31).
     */
    billingDate?: pulumi.Input<number>;
    /**
     * Capacity in MB (0 - 102400000).
     */
    capacity?: pulumi.Input<number>;
    /**
     * Carrier configuration.
     */
    carrier?: pulumi.Input<string>;
    /**
     * ICCID configuration.
     */
    iccid?: pulumi.Input<string>;
    /**
     * Dataplan's modem specifics, if any. Valid values: `modem1`, `modem2`, `all`.
     */
    modemId?: pulumi.Input<string>;
    /**
     * Monthly fee of dataplan (0 - 100000, in local currency).
     */
    monthlyFee?: pulumi.Input<number>;
    /**
     * FortiExtender dataplan name
     */
    name?: pulumi.Input<string>;
    /**
     * Enable/disable dataplan overage detection. Valid values: `disable`, `enable`.
     */
    overage?: pulumi.Input<string>;
    /**
     * Password.
     */
    password?: pulumi.Input<string>;
    /**
     * PDN type. Valid values: `ipv4-only`, `ipv6-only`, `ipv4-ipv6`.
     */
    pdn?: pulumi.Input<string>;
    /**
     * Preferred subnet mask. On FortiOS versions 6.4.2-7.0.1: 8 - 32. On FortiOS versions 7.0.2-7.2.0: 0 - 32.
     */
    preferredSubnet?: pulumi.Input<number>;
    /**
     * Enable/disable dataplan private network support. Valid values: `disable`, `enable`.
     */
    privateNetwork?: pulumi.Input<string>;
    /**
     * Signal period (600 to 18000 seconds).
     */
    signalPeriod?: pulumi.Input<number>;
    /**
     * Signal threshold. Specify the range between 50 - 100, where 50/100 means -50/-100 dBm.
     */
    signalThreshold?: pulumi.Input<number>;
    /**
     * SIM slot configuration. Valid values: `sim1`, `sim2`.
     */
    slot?: pulumi.Input<string>;
    /**
     * Type preferences configuration. Valid values: `carrier`, `slot`, `iccid`, `generic`.
     */
    type?: pulumi.Input<string>;
    /**
     * Username.
     */
    username?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Dataplan resource.
 */
export interface DataplanArgs {
    /**
     * APN configuration.
     */
    apn?: pulumi.Input<string>;
    /**
     * Authentication type. Valid values: `none`, `pap`, `chap`.
     */
    authType?: pulumi.Input<string>;
    /**
     * Billing day of the month (1 - 31).
     */
    billingDate?: pulumi.Input<number>;
    /**
     * Capacity in MB (0 - 102400000).
     */
    capacity?: pulumi.Input<number>;
    /**
     * Carrier configuration.
     */
    carrier?: pulumi.Input<string>;
    /**
     * ICCID configuration.
     */
    iccid?: pulumi.Input<string>;
    /**
     * Dataplan's modem specifics, if any. Valid values: `modem1`, `modem2`, `all`.
     */
    modemId?: pulumi.Input<string>;
    /**
     * Monthly fee of dataplan (0 - 100000, in local currency).
     */
    monthlyFee?: pulumi.Input<number>;
    /**
     * FortiExtender dataplan name
     */
    name?: pulumi.Input<string>;
    /**
     * Enable/disable dataplan overage detection. Valid values: `disable`, `enable`.
     */
    overage?: pulumi.Input<string>;
    /**
     * Password.
     */
    password?: pulumi.Input<string>;
    /**
     * PDN type. Valid values: `ipv4-only`, `ipv6-only`, `ipv4-ipv6`.
     */
    pdn?: pulumi.Input<string>;
    /**
     * Preferred subnet mask. On FortiOS versions 6.4.2-7.0.1: 8 - 32. On FortiOS versions 7.0.2-7.2.0: 0 - 32.
     */
    preferredSubnet?: pulumi.Input<number>;
    /**
     * Enable/disable dataplan private network support. Valid values: `disable`, `enable`.
     */
    privateNetwork?: pulumi.Input<string>;
    /**
     * Signal period (600 to 18000 seconds).
     */
    signalPeriod?: pulumi.Input<number>;
    /**
     * Signal threshold. Specify the range between 50 - 100, where 50/100 means -50/-100 dBm.
     */
    signalThreshold?: pulumi.Input<number>;
    /**
     * SIM slot configuration. Valid values: `sim1`, `sim2`.
     */
    slot?: pulumi.Input<string>;
    /**
     * Type preferences configuration. Valid values: `carrier`, `slot`, `iccid`, `generic`.
     */
    type?: pulumi.Input<string>;
    /**
     * Username.
     */
    username?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
