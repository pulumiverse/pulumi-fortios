// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Global settings for memory logging.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumiverse/fortios";
 *
 * const trname = new fortios.log.memory.Globalsetting("trname", {
 *     fullFinalWarningThreshold: 95,
 *     fullFirstWarningThreshold: 75,
 *     fullSecondWarningThreshold: 90,
 *     maxSize: 163840,
 * });
 * ```
 *
 * ## Import
 *
 * LogMemory GlobalSetting can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:log/memory/globalsetting:Globalsetting labelname LogMemoryGlobalSetting
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:log/memory/globalsetting:Globalsetting labelname LogMemoryGlobalSetting
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Globalsetting extends pulumi.CustomResource {
    /**
     * Get an existing Globalsetting resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GlobalsettingState, opts?: pulumi.CustomResourceOptions): Globalsetting {
        return new Globalsetting(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:log/memory/globalsetting:Globalsetting';

    /**
     * Returns true if the given object is an instance of Globalsetting.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Globalsetting {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Globalsetting.__pulumiType;
    }

    /**
     * Log full final warning threshold as a percent (3 - 100, default = 95).
     */
    public readonly fullFinalWarningThreshold!: pulumi.Output<number>;
    /**
     * Log full first warning threshold as a percent (1 - 98, default = 75).
     */
    public readonly fullFirstWarningThreshold!: pulumi.Output<number>;
    /**
     * Log full second warning threshold as a percent (2 - 99, default = 90).
     */
    public readonly fullSecondWarningThreshold!: pulumi.Output<number>;
    /**
     * Maximum amount of memory that can be used for memory logging in bytes.
     */
    public readonly maxSize!: pulumi.Output<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string>;

    /**
     * Create a Globalsetting resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: GlobalsettingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GlobalsettingArgs | GlobalsettingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GlobalsettingState | undefined;
            resourceInputs["fullFinalWarningThreshold"] = state ? state.fullFinalWarningThreshold : undefined;
            resourceInputs["fullFirstWarningThreshold"] = state ? state.fullFirstWarningThreshold : undefined;
            resourceInputs["fullSecondWarningThreshold"] = state ? state.fullSecondWarningThreshold : undefined;
            resourceInputs["maxSize"] = state ? state.maxSize : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as GlobalsettingArgs | undefined;
            resourceInputs["fullFinalWarningThreshold"] = args ? args.fullFinalWarningThreshold : undefined;
            resourceInputs["fullFirstWarningThreshold"] = args ? args.fullFirstWarningThreshold : undefined;
            resourceInputs["fullSecondWarningThreshold"] = args ? args.fullSecondWarningThreshold : undefined;
            resourceInputs["maxSize"] = args ? args.maxSize : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Globalsetting.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Globalsetting resources.
 */
export interface GlobalsettingState {
    /**
     * Log full final warning threshold as a percent (3 - 100, default = 95).
     */
    fullFinalWarningThreshold?: pulumi.Input<number>;
    /**
     * Log full first warning threshold as a percent (1 - 98, default = 75).
     */
    fullFirstWarningThreshold?: pulumi.Input<number>;
    /**
     * Log full second warning threshold as a percent (2 - 99, default = 90).
     */
    fullSecondWarningThreshold?: pulumi.Input<number>;
    /**
     * Maximum amount of memory that can be used for memory logging in bytes.
     */
    maxSize?: pulumi.Input<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Globalsetting resource.
 */
export interface GlobalsettingArgs {
    /**
     * Log full final warning threshold as a percent (3 - 100, default = 95).
     */
    fullFinalWarningThreshold?: pulumi.Input<number>;
    /**
     * Log full first warning threshold as a percent (1 - 98, default = 75).
     */
    fullFirstWarningThreshold?: pulumi.Input<number>;
    /**
     * Log full second warning threshold as a percent (2 - 99, default = 90).
     */
    fullSecondWarningThreshold?: pulumi.Input<number>;
    /**
     * Maximum amount of memory that can be used for memory logging in bytes.
     */
    maxSize?: pulumi.Input<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
