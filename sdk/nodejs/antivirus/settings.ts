// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Configure AntiVirus settings.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumiverse/fortios";
 *
 * const trname = new fortios.antivirus.Settings("trname", {
 *     defaultDb: "extended",
 *     grayware: "enable",
 * });
 * ```
 *
 * ## Import
 *
 * Antivirus Settings can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:antivirus/settings:Settings labelname AntivirusSettings
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:antivirus/settings:Settings labelname AntivirusSettings
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Settings extends pulumi.CustomResource {
    /**
     * Get an existing Settings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SettingsState, opts?: pulumi.CustomResourceOptions): Settings {
        return new Settings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:antivirus/settings:Settings';

    /**
     * Returns true if the given object is an instance of Settings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Settings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Settings.__pulumiType;
    }

    /**
     * Enable/disable cache of clean scan results (default = enable). Valid values: `enable`, `disable`.
     */
    public readonly cacheCleanResult!: pulumi.Output<string>;
    /**
     * Enable/disable cache of infected scan results (default = enable). Valid values: `enable`, `disable`.
     */
    public readonly cacheInfectedResult!: pulumi.Output<string>;
    /**
     * Select the AV database to be used for AV scanning. Valid values: `normal`, `extended`, `extreme`.
     */
    public readonly defaultDb!: pulumi.Output<string>;
    /**
     * Enable/disable grayware detection when an AntiVirus profile is applied to traffic. Valid values: `enable`, `disable`.
     */
    public readonly grayware!: pulumi.Output<string>;
    /**
     * Use machine learning based malware detection. Valid values: `enable`, `monitor`, `disable`.
     */
    public readonly machineLearningDetection!: pulumi.Output<string>;
    /**
     * Override the large file scan timeout value in seconds (30 - 3600). Zero is the default value and is used to disable this command. When disabled, the daemon adjusts the large file scan timeout based on the file size.
     */
    public readonly overrideTimeout!: pulumi.Output<number>;
    /**
     * Enable/disable the use of Extreme AVDB. Valid values: `enable`, `disable`.
     */
    public readonly useExtremeDb!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a Settings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SettingsArgs | SettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SettingsState | undefined;
            resourceInputs["cacheCleanResult"] = state ? state.cacheCleanResult : undefined;
            resourceInputs["cacheInfectedResult"] = state ? state.cacheInfectedResult : undefined;
            resourceInputs["defaultDb"] = state ? state.defaultDb : undefined;
            resourceInputs["grayware"] = state ? state.grayware : undefined;
            resourceInputs["machineLearningDetection"] = state ? state.machineLearningDetection : undefined;
            resourceInputs["overrideTimeout"] = state ? state.overrideTimeout : undefined;
            resourceInputs["useExtremeDb"] = state ? state.useExtremeDb : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as SettingsArgs | undefined;
            resourceInputs["cacheCleanResult"] = args ? args.cacheCleanResult : undefined;
            resourceInputs["cacheInfectedResult"] = args ? args.cacheInfectedResult : undefined;
            resourceInputs["defaultDb"] = args ? args.defaultDb : undefined;
            resourceInputs["grayware"] = args ? args.grayware : undefined;
            resourceInputs["machineLearningDetection"] = args ? args.machineLearningDetection : undefined;
            resourceInputs["overrideTimeout"] = args ? args.overrideTimeout : undefined;
            resourceInputs["useExtremeDb"] = args ? args.useExtremeDb : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Settings.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Settings resources.
 */
export interface SettingsState {
    /**
     * Enable/disable cache of clean scan results (default = enable). Valid values: `enable`, `disable`.
     */
    cacheCleanResult?: pulumi.Input<string>;
    /**
     * Enable/disable cache of infected scan results (default = enable). Valid values: `enable`, `disable`.
     */
    cacheInfectedResult?: pulumi.Input<string>;
    /**
     * Select the AV database to be used for AV scanning. Valid values: `normal`, `extended`, `extreme`.
     */
    defaultDb?: pulumi.Input<string>;
    /**
     * Enable/disable grayware detection when an AntiVirus profile is applied to traffic. Valid values: `enable`, `disable`.
     */
    grayware?: pulumi.Input<string>;
    /**
     * Use machine learning based malware detection. Valid values: `enable`, `monitor`, `disable`.
     */
    machineLearningDetection?: pulumi.Input<string>;
    /**
     * Override the large file scan timeout value in seconds (30 - 3600). Zero is the default value and is used to disable this command. When disabled, the daemon adjusts the large file scan timeout based on the file size.
     */
    overrideTimeout?: pulumi.Input<number>;
    /**
     * Enable/disable the use of Extreme AVDB. Valid values: `enable`, `disable`.
     */
    useExtremeDb?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Settings resource.
 */
export interface SettingsArgs {
    /**
     * Enable/disable cache of clean scan results (default = enable). Valid values: `enable`, `disable`.
     */
    cacheCleanResult?: pulumi.Input<string>;
    /**
     * Enable/disable cache of infected scan results (default = enable). Valid values: `enable`, `disable`.
     */
    cacheInfectedResult?: pulumi.Input<string>;
    /**
     * Select the AV database to be used for AV scanning. Valid values: `normal`, `extended`, `extreme`.
     */
    defaultDb?: pulumi.Input<string>;
    /**
     * Enable/disable grayware detection when an AntiVirus profile is applied to traffic. Valid values: `enable`, `disable`.
     */
    grayware?: pulumi.Input<string>;
    /**
     * Use machine learning based malware detection. Valid values: `enable`, `monitor`, `disable`.
     */
    machineLearningDetection?: pulumi.Input<string>;
    /**
     * Override the large file scan timeout value in seconds (30 - 3600). Zero is the default value and is used to disable this command. When disabled, the daemon adjusts the large file scan timeout based on the file size.
     */
    overrideTimeout?: pulumi.Input<number>;
    /**
     * Enable/disable the use of Extreme AVDB. Valid values: `enable`, `disable`.
     */
    useExtremeDb?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
