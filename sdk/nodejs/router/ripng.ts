// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Configure RIPng.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumiverse/fortios";
 *
 * const trname = new fortios.router.Ripng("trname", {
 *     defaultInformationOriginate: "disable",
 *     defaultMetric: 1,
 *     garbageTimer: 120,
 *     maxOutMetric: 0,
 *     redistributes: [
 *         {
 *             metric: 10,
 *             name: "connected",
 *             status: "disable",
 *         },
 *         {
 *             metric: 10,
 *             name: "static",
 *             status: "disable",
 *         },
 *         {
 *             metric: 10,
 *             name: "ospf",
 *             status: "disable",
 *         },
 *         {
 *             metric: 10,
 *             name: "bgp",
 *             status: "disable",
 *         },
 *         {
 *             metric: 10,
 *             name: "isis",
 *             status: "disable",
 *         },
 *     ],
 *     timeoutTimer: 180,
 *     updateTimer: 30,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * Router Ripng can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:router/ripng:Ripng labelname RouterRipng
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:router/ripng:Ripng labelname RouterRipng
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Ripng extends pulumi.CustomResource {
    /**
     * Get an existing Ripng resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RipngState, opts?: pulumi.CustomResourceOptions): Ripng {
        return new Ripng(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:router/ripng:Ripng';

    /**
     * Returns true if the given object is an instance of Ripng.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ripng {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ripng.__pulumiType;
    }

    /**
     * Aggregate address. The structure of `aggregateAddress` block is documented below.
     */
    public readonly aggregateAddresses!: pulumi.Output<outputs.router.RipngAggregateAddress[] | undefined>;
    /**
     * Enable/disable generation of default route. Valid values: `enable`, `disable`.
     */
    public readonly defaultInformationOriginate!: pulumi.Output<string>;
    /**
     * Default metric.
     */
    public readonly defaultMetric!: pulumi.Output<number>;
    /**
     * distance The structure of `distance` block is documented below.
     */
    public readonly distances!: pulumi.Output<outputs.router.RipngDistance[] | undefined>;
    /**
     * Distribute list. The structure of `distributeList` block is documented below.
     */
    public readonly distributeLists!: pulumi.Output<outputs.router.RipngDistributeList[] | undefined>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * Garbage timer.
     */
    public readonly garbageTimer!: pulumi.Output<number>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    /**
     * RIPng interface configuration. The structure of `interface` block is documented below.
     */
    public readonly interfaces!: pulumi.Output<outputs.router.RipngInterface[] | undefined>;
    /**
     * Maximum metric allowed to output(0 means 'not set').
     */
    public readonly maxOutMetric!: pulumi.Output<number>;
    /**
     * neighbor The structure of `neighbor` block is documented below.
     */
    public readonly neighbors!: pulumi.Output<outputs.router.RipngNeighbor[] | undefined>;
    /**
     * Network. The structure of `network` block is documented below.
     */
    public readonly networks!: pulumi.Output<outputs.router.RipngNetwork[] | undefined>;
    /**
     * Offset list. The structure of `offsetList` block is documented below.
     */
    public readonly offsetLists!: pulumi.Output<outputs.router.RipngOffsetList[] | undefined>;
    /**
     * Passive interface configuration. The structure of `passiveInterface` block is documented below.
     */
    public readonly passiveInterfaces!: pulumi.Output<outputs.router.RipngPassiveInterface[] | undefined>;
    /**
     * Redistribute configuration. The structure of `redistribute` block is documented below.
     */
    public readonly redistributes!: pulumi.Output<outputs.router.RipngRedistribute[] | undefined>;
    /**
     * Timeout timer.
     */
    public readonly timeoutTimer!: pulumi.Output<number>;
    /**
     * Update timer.
     */
    public readonly updateTimer!: pulumi.Output<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a Ripng resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RipngArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RipngArgs | RipngState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RipngState | undefined;
            resourceInputs["aggregateAddresses"] = state ? state.aggregateAddresses : undefined;
            resourceInputs["defaultInformationOriginate"] = state ? state.defaultInformationOriginate : undefined;
            resourceInputs["defaultMetric"] = state ? state.defaultMetric : undefined;
            resourceInputs["distances"] = state ? state.distances : undefined;
            resourceInputs["distributeLists"] = state ? state.distributeLists : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["garbageTimer"] = state ? state.garbageTimer : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["interfaces"] = state ? state.interfaces : undefined;
            resourceInputs["maxOutMetric"] = state ? state.maxOutMetric : undefined;
            resourceInputs["neighbors"] = state ? state.neighbors : undefined;
            resourceInputs["networks"] = state ? state.networks : undefined;
            resourceInputs["offsetLists"] = state ? state.offsetLists : undefined;
            resourceInputs["passiveInterfaces"] = state ? state.passiveInterfaces : undefined;
            resourceInputs["redistributes"] = state ? state.redistributes : undefined;
            resourceInputs["timeoutTimer"] = state ? state.timeoutTimer : undefined;
            resourceInputs["updateTimer"] = state ? state.updateTimer : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as RipngArgs | undefined;
            resourceInputs["aggregateAddresses"] = args ? args.aggregateAddresses : undefined;
            resourceInputs["defaultInformationOriginate"] = args ? args.defaultInformationOriginate : undefined;
            resourceInputs["defaultMetric"] = args ? args.defaultMetric : undefined;
            resourceInputs["distances"] = args ? args.distances : undefined;
            resourceInputs["distributeLists"] = args ? args.distributeLists : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["garbageTimer"] = args ? args.garbageTimer : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["interfaces"] = args ? args.interfaces : undefined;
            resourceInputs["maxOutMetric"] = args ? args.maxOutMetric : undefined;
            resourceInputs["neighbors"] = args ? args.neighbors : undefined;
            resourceInputs["networks"] = args ? args.networks : undefined;
            resourceInputs["offsetLists"] = args ? args.offsetLists : undefined;
            resourceInputs["passiveInterfaces"] = args ? args.passiveInterfaces : undefined;
            resourceInputs["redistributes"] = args ? args.redistributes : undefined;
            resourceInputs["timeoutTimer"] = args ? args.timeoutTimer : undefined;
            resourceInputs["updateTimer"] = args ? args.updateTimer : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Ripng.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Ripng resources.
 */
export interface RipngState {
    /**
     * Aggregate address. The structure of `aggregateAddress` block is documented below.
     */
    aggregateAddresses?: pulumi.Input<pulumi.Input<inputs.router.RipngAggregateAddress>[]>;
    /**
     * Enable/disable generation of default route. Valid values: `enable`, `disable`.
     */
    defaultInformationOriginate?: pulumi.Input<string>;
    /**
     * Default metric.
     */
    defaultMetric?: pulumi.Input<number>;
    /**
     * distance The structure of `distance` block is documented below.
     */
    distances?: pulumi.Input<pulumi.Input<inputs.router.RipngDistance>[]>;
    /**
     * Distribute list. The structure of `distributeList` block is documented below.
     */
    distributeLists?: pulumi.Input<pulumi.Input<inputs.router.RipngDistributeList>[]>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Garbage timer.
     */
    garbageTimer?: pulumi.Input<number>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * RIPng interface configuration. The structure of `interface` block is documented below.
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.router.RipngInterface>[]>;
    /**
     * Maximum metric allowed to output(0 means 'not set').
     */
    maxOutMetric?: pulumi.Input<number>;
    /**
     * neighbor The structure of `neighbor` block is documented below.
     */
    neighbors?: pulumi.Input<pulumi.Input<inputs.router.RipngNeighbor>[]>;
    /**
     * Network. The structure of `network` block is documented below.
     */
    networks?: pulumi.Input<pulumi.Input<inputs.router.RipngNetwork>[]>;
    /**
     * Offset list. The structure of `offsetList` block is documented below.
     */
    offsetLists?: pulumi.Input<pulumi.Input<inputs.router.RipngOffsetList>[]>;
    /**
     * Passive interface configuration. The structure of `passiveInterface` block is documented below.
     */
    passiveInterfaces?: pulumi.Input<pulumi.Input<inputs.router.RipngPassiveInterface>[]>;
    /**
     * Redistribute configuration. The structure of `redistribute` block is documented below.
     */
    redistributes?: pulumi.Input<pulumi.Input<inputs.router.RipngRedistribute>[]>;
    /**
     * Timeout timer.
     */
    timeoutTimer?: pulumi.Input<number>;
    /**
     * Update timer.
     */
    updateTimer?: pulumi.Input<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Ripng resource.
 */
export interface RipngArgs {
    /**
     * Aggregate address. The structure of `aggregateAddress` block is documented below.
     */
    aggregateAddresses?: pulumi.Input<pulumi.Input<inputs.router.RipngAggregateAddress>[]>;
    /**
     * Enable/disable generation of default route. Valid values: `enable`, `disable`.
     */
    defaultInformationOriginate?: pulumi.Input<string>;
    /**
     * Default metric.
     */
    defaultMetric?: pulumi.Input<number>;
    /**
     * distance The structure of `distance` block is documented below.
     */
    distances?: pulumi.Input<pulumi.Input<inputs.router.RipngDistance>[]>;
    /**
     * Distribute list. The structure of `distributeList` block is documented below.
     */
    distributeLists?: pulumi.Input<pulumi.Input<inputs.router.RipngDistributeList>[]>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Garbage timer.
     */
    garbageTimer?: pulumi.Input<number>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * RIPng interface configuration. The structure of `interface` block is documented below.
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.router.RipngInterface>[]>;
    /**
     * Maximum metric allowed to output(0 means 'not set').
     */
    maxOutMetric?: pulumi.Input<number>;
    /**
     * neighbor The structure of `neighbor` block is documented below.
     */
    neighbors?: pulumi.Input<pulumi.Input<inputs.router.RipngNeighbor>[]>;
    /**
     * Network. The structure of `network` block is documented below.
     */
    networks?: pulumi.Input<pulumi.Input<inputs.router.RipngNetwork>[]>;
    /**
     * Offset list. The structure of `offsetList` block is documented below.
     */
    offsetLists?: pulumi.Input<pulumi.Input<inputs.router.RipngOffsetList>[]>;
    /**
     * Passive interface configuration. The structure of `passiveInterface` block is documented below.
     */
    passiveInterfaces?: pulumi.Input<pulumi.Input<inputs.router.RipngPassiveInterface>[]>;
    /**
     * Redistribute configuration. The structure of `redistribute` block is documented below.
     */
    redistributes?: pulumi.Input<pulumi.Input<inputs.router.RipngRedistribute>[]>;
    /**
     * Timeout timer.
     */
    timeoutTimer?: pulumi.Input<number>;
    /**
     * Update timer.
     */
    updateTimer?: pulumi.Input<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
