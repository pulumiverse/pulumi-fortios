// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Configure BGP.
 *
 * > The provider supports the definition of Neighbor in Router Bgp `fortios.router.Bgp`, and also allows the definition of separate Neighbor resources `fortios.router/bgp.Neighbor`, but do not use a `fortios.router.Bgp` with in-line Neighbor in conjunction with any `fortios.router/bgp.Neighbor` resources, otherwise conflicts and overwrite will occur.
 *
 * > The provider supports the definition of Network in Router Bgp `fortios.router.Bgp`, and also allows the definition of separate Network resources `fortios.router/bgp.Network`, but do not use a `fortios.router.Bgp` with in-line Network in conjunction with any `fortios.router/bgp.Network` resources, otherwise conflicts and overwrite will occur.
 *
 * > The provider supports the definition of Network6 in Router Bgp `fortios.router.Bgp`, and also allows the definition of separate Network6 resources `fortios.router/bgp.Network6`, but do not use a `fortios.router.Bgp` with in-line Network6 in conjunction with any `fortios.router/bgp.Network6` resources, otherwise conflicts and overwrite will occur.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumiverse/fortios";
 *
 * const trname = new fortios.router.Bgp("trname", {
 *     additionalPathSelect: 2,
 *     additionalPathSelect6: 2,
 *     alwaysCompareMed: "disable",
 *     as: 0,
 *     clientToClientReflection: "enable",
 *     clusterId: "0.0.0.0",
 *     dampening: "disable",
 *     dampeningMaxSuppressTime: 60,
 *     dampeningReachabilityHalfLife: 15,
 *     dampeningReuse: 750,
 *     dampeningSuppress: 2000,
 *     dampeningUnreachabilityHalfLife: 15,
 *     defaultLocalPreference: 100,
 *     deterministicMed: "disable",
 *     distanceExternal: 20,
 *     distanceInternal: 200,
 *     distanceLocal: 200,
 *     gracefulRestartTime: 120,
 *     gracefulStalepathTime: 360,
 *     gracefulUpdateDelay: 120,
 *     holdtimeTimer: 180,
 *     ibgpMultipath: "disable",
 *     ignoreOptionalCapability: "enable",
 *     keepaliveTimer: 60,
 *     logNeighbourChanges: "enable",
 *     networkImportCheck: "enable",
 *     redistributes: [
 *         {
 *             name: "connected",
 *             status: "disable",
 *         },
 *         {
 *             name: "rip",
 *             status: "disable",
 *         },
 *         {
 *             name: "ospf",
 *             status: "disable",
 *         },
 *         {
 *             name: "static",
 *             status: "disable",
 *         },
 *         {
 *             name: "isis",
 *             status: "disable",
 *         },
 *     ],
 *     redistribute6s: [
 *         {
 *             name: "connected",
 *             status: "disable",
 *         },
 *         {
 *             name: "rip",
 *             status: "disable",
 *         },
 *         {
 *             name: "ospf",
 *             status: "disable",
 *         },
 *         {
 *             name: "static",
 *             status: "disable",
 *         },
 *         {
 *             name: "isis",
 *             status: "disable",
 *         },
 *     ],
 *     scanTime: 60,
 *     synchronization: "disable",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * Router Bgp can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:router/bgp:Bgp labelname RouterBgp
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:router/bgp:Bgp labelname RouterBgp
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Bgp extends pulumi.CustomResource {
    /**
     * Get an existing Bgp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BgpState, opts?: pulumi.CustomResourceOptions): Bgp {
        return new Bgp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:router/bgp:Bgp';

    /**
     * Returns true if the given object is an instance of Bgp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Bgp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Bgp.__pulumiType;
    }

    /**
     * Enable/disable selection of BGP IPv4 additional paths. Valid values: `enable`, `disable`.
     */
    public readonly additionalPath!: pulumi.Output<string>;
    /**
     * Enable/disable selection of BGP IPv6 additional paths. Valid values: `enable`, `disable`.
     */
    public readonly additionalPath6!: pulumi.Output<string>;
    /**
     * Number of additional paths to be selected for each IPv4 NLRI.
     */
    public readonly additionalPathSelect!: pulumi.Output<number>;
    /**
     * Number of additional paths to be selected for each IPv6 NLRI.
     */
    public readonly additionalPathSelect6!: pulumi.Output<number>;
    /**
     * Number of additional paths to be selected for each VPNv4 NLRI.
     */
    public readonly additionalPathSelectVpnv4!: pulumi.Output<number>;
    /**
     * Number of additional paths to be selected for each VPNv6 NLRI.
     */
    public readonly additionalPathSelectVpnv6!: pulumi.Output<number>;
    /**
     * Enable/disable selection of BGP VPNv4 additional paths. Valid values: `enable`, `disable`.
     */
    public readonly additionalPathVpnv4!: pulumi.Output<string>;
    /**
     * Enable/disable selection of BGP VPNv6 additional paths. Valid values: `enable`, `disable`.
     */
    public readonly additionalPathVpnv6!: pulumi.Output<string>;
    /**
     * Administrative distance modifications. The structure of `adminDistance` block is documented below.
     */
    public readonly adminDistances!: pulumi.Output<outputs.router.BgpAdminDistance[] | undefined>;
    /**
     * BGP IPv6 aggregate address table. The structure of `aggregateAddress6` block is documented below.
     */
    public readonly aggregateAddress6s!: pulumi.Output<outputs.router.BgpAggregateAddress6[] | undefined>;
    /**
     * BGP aggregate address table. The structure of `aggregateAddress` block is documented below.
     */
    public readonly aggregateAddresses!: pulumi.Output<outputs.router.BgpAggregateAddress[] | undefined>;
    /**
     * Enable/disable always compare MED. Valid values: `enable`, `disable`.
     */
    public readonly alwaysCompareMed!: pulumi.Output<string>;
    /**
     * Router AS number, valid from 1 to 4294967295, 0 to disable BGP.
     */
    public readonly as!: pulumi.Output<number>;
    /**
     * Router AS number, asplain/asdot/asdot+ format, 0 to disable BGP.
     */
    public readonly asString!: pulumi.Output<string>;
    /**
     * Enable/disable ignore AS path. Valid values: `enable`, `disable`.
     */
    public readonly bestpathAsPathIgnore!: pulumi.Output<string>;
    /**
     * Enable/disable compare federation AS path length. Valid values: `enable`, `disable`.
     */
    public readonly bestpathCmpConfedAspath!: pulumi.Output<string>;
    /**
     * Enable/disable compare router ID for identical EBGP paths. Valid values: `enable`, `disable`.
     */
    public readonly bestpathCmpRouterid!: pulumi.Output<string>;
    /**
     * Enable/disable compare MED among confederation paths. Valid values: `enable`, `disable`.
     */
    public readonly bestpathMedConfed!: pulumi.Output<string>;
    /**
     * Enable/disable treat missing MED as least preferred. Valid values: `enable`, `disable`.
     */
    public readonly bestpathMedMissingAsWorst!: pulumi.Output<string>;
    /**
     * Enable/disable client-to-client route reflection. Valid values: `enable`, `disable`.
     */
    public readonly clientToClientReflection!: pulumi.Output<string>;
    /**
     * Route reflector cluster ID.
     */
    public readonly clusterId!: pulumi.Output<string>;
    /**
     * Confederation identifier.
     */
    public readonly confederationIdentifier!: pulumi.Output<number>;
    /**
     * Confederation peers. The structure of `confederationPeers` block is documented below.
     */
    public readonly confederationPeers!: pulumi.Output<outputs.router.BgpConfederationPeer[] | undefined>;
    /**
     * Enable/disable cross address family conditional advertisement. Valid values: `enable`, `disable`.
     */
    public readonly crossFamilyConditionalAdv!: pulumi.Output<string>;
    /**
     * Enable/disable route-flap dampening. Valid values: `enable`, `disable`.
     */
    public readonly dampening!: pulumi.Output<string>;
    /**
     * Maximum minutes a route can be suppressed.
     */
    public readonly dampeningMaxSuppressTime!: pulumi.Output<number>;
    /**
     * Reachability half-life time for penalty (min).
     */
    public readonly dampeningReachabilityHalfLife!: pulumi.Output<number>;
    /**
     * Threshold to reuse routes.
     */
    public readonly dampeningReuse!: pulumi.Output<number>;
    /**
     * Criteria for dampening.
     */
    public readonly dampeningRouteMap!: pulumi.Output<string>;
    /**
     * Threshold to suppress routes.
     */
    public readonly dampeningSuppress!: pulumi.Output<number>;
    /**
     * Unreachability half-life time for penalty (min).
     */
    public readonly dampeningUnreachabilityHalfLife!: pulumi.Output<number>;
    /**
     * Default local preference.
     */
    public readonly defaultLocalPreference!: pulumi.Output<number>;
    /**
     * Enable/disable enforce deterministic comparison of MED. Valid values: `enable`, `disable`.
     */
    public readonly deterministicMed!: pulumi.Output<string>;
    /**
     * Distance for routes external to the AS.
     */
    public readonly distanceExternal!: pulumi.Output<number>;
    /**
     * Distance for routes internal to the AS.
     */
    public readonly distanceInternal!: pulumi.Output<number>;
    /**
     * Distance for routes local to the AS.
     */
    public readonly distanceLocal!: pulumi.Output<number>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * Enable/disable EBGP multi-path. Valid values: `enable`, `disable`.
     */
    public readonly ebgpMultipath!: pulumi.Output<string>;
    /**
     * Enable/disable enforce first AS for EBGP routes. Valid values: `enable`, `disable`.
     */
    public readonly enforceFirstAs!: pulumi.Output<string>;
    /**
     * Enable/disable reset peer BGP session if link goes down. Valid values: `enable`, `disable`.
     */
    public readonly fastExternalFailover!: pulumi.Output<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    /**
     * Enable/disable to exit graceful restart on timer only. Valid values: `enable`, `disable`.
     */
    public readonly gracefulEndOnTimer!: pulumi.Output<string>;
    /**
     * Enable/disable BGP graceful restart capabilities. Valid values: `enable`, `disable`.
     */
    public readonly gracefulRestart!: pulumi.Output<string>;
    /**
     * Time needed for neighbors to restart (sec).
     */
    public readonly gracefulRestartTime!: pulumi.Output<number>;
    /**
     * Time to hold stale paths of restarting neighbor (sec).
     */
    public readonly gracefulStalepathTime!: pulumi.Output<number>;
    /**
     * Route advertisement/selection delay after restart (sec).
     */
    public readonly gracefulUpdateDelay!: pulumi.Output<number>;
    /**
     * Number of seconds to mark peer as dead.
     */
    public readonly holdtimeTimer!: pulumi.Output<number>;
    /**
     * Enable/disable IBGP multi-path. Valid values: `enable`, `disable`.
     */
    public readonly ibgpMultipath!: pulumi.Output<string>;
    /**
     * Don't send unknown optional capability notification message Valid values: `enable`, `disable`.
     */
    public readonly ignoreOptionalCapability!: pulumi.Output<string>;
    /**
     * Frequency to send keep alive requests.
     */
    public readonly keepaliveTimer!: pulumi.Output<number>;
    /**
     * Enable logging of BGP neighbour's changes Valid values: `enable`, `disable`.
     */
    public readonly logNeighbourChanges!: pulumi.Output<string>;
    /**
     * Enable/disable use of recursive distance to select multipath. Valid values: `enable`, `disable`.
     */
    public readonly multipathRecursiveDistance!: pulumi.Output<string>;
    /**
     * BGP neighbor group table. The structure of `neighborGroup` block is documented below.
     */
    public readonly neighborGroups!: pulumi.Output<outputs.router.BgpNeighborGroup[]>;
    /**
     * BGP IPv6 neighbor range table. The structure of `neighborRange6` block is documented below.
     */
    public readonly neighborRange6s!: pulumi.Output<outputs.router.BgpNeighborRange6[] | undefined>;
    /**
     * BGP neighbor range table. The structure of `neighborRange` block is documented below.
     */
    public readonly neighborRanges!: pulumi.Output<outputs.router.BgpNeighborRange[] | undefined>;
    /**
     * BGP neighbor table. The structure of `neighbor` block is documented below.
     */
    public readonly neighbors!: pulumi.Output<outputs.router.BgpNeighbor[]>;
    /**
     * BGP IPv6 network table. The structure of `network6` block is documented below.
     */
    public readonly network6s!: pulumi.Output<outputs.router.BgpNetwork6[] | undefined>;
    /**
     * Enable/disable ensure BGP network route exists in IGP. Valid values: `enable`, `disable`.
     */
    public readonly networkImportCheck!: pulumi.Output<string>;
    /**
     * BGP network table. The structure of `network` block is documented below.
     */
    public readonly networks!: pulumi.Output<outputs.router.BgpNetwork[] | undefined>;
    /**
     * Enable/disable priority inheritance for recursive resolution. Valid values: `enable`, `disable`.
     */
    public readonly recursiveInheritPriority!: pulumi.Output<string>;
    /**
     * Enable/disable recursive resolution of next-hop using BGP route. Valid values: `enable`, `disable`.
     */
    public readonly recursiveNextHop!: pulumi.Output<string>;
    /**
     * BGP IPv6 redistribute table. The structure of `redistribute6` block is documented below.
     */
    public readonly redistribute6s!: pulumi.Output<outputs.router.BgpRedistribute6[] | undefined>;
    /**
     * BGP IPv4 redistribute table. The structure of `redistribute` block is documented below.
     */
    public readonly redistributes!: pulumi.Output<outputs.router.BgpRedistribute[] | undefined>;
    /**
     * Router ID.
     */
    public readonly routerId!: pulumi.Output<string>;
    /**
     * Background scanner interval (sec), 0 to disable it.
     */
    public readonly scanTime!: pulumi.Output<number>;
    /**
     * Enable/disable only advertise routes from iBGP if routes present in an IGP. Valid values: `enable`, `disable`.
     */
    public readonly synchronization!: pulumi.Output<string>;
    /**
     * Configure tag-match mode. Resolves BGP routes with other routes containing the same tag. Valid values: `disable`, `preferred`, `merge`.
     */
    public readonly tagResolveMode!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;
    /**
     * BGP IPv6 VRF leaking table. The structure of `vrf6` block is documented below.
     */
    public readonly vrf6s!: pulumi.Output<outputs.router.BgpVrf6[] | undefined>;
    /**
     * BGP IPv6 VRF leaking table. The structure of `vrfLeak6` block is documented below.
     */
    public readonly vrfLeak6s!: pulumi.Output<outputs.router.BgpVrfLeak6[] | undefined>;
    /**
     * BGP VRF leaking table. The structure of `vrfLeak` block is documented below.
     */
    public readonly vrfLeaks!: pulumi.Output<outputs.router.BgpVrfLeak[] | undefined>;
    /**
     * BGP VRF leaking table. The structure of `vrf` block is documented below.
     */
    public readonly vrves!: pulumi.Output<outputs.router.BgpVrf[] | undefined>;

    /**
     * Create a Bgp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BgpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BgpArgs | BgpState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BgpState | undefined;
            resourceInputs["additionalPath"] = state ? state.additionalPath : undefined;
            resourceInputs["additionalPath6"] = state ? state.additionalPath6 : undefined;
            resourceInputs["additionalPathSelect"] = state ? state.additionalPathSelect : undefined;
            resourceInputs["additionalPathSelect6"] = state ? state.additionalPathSelect6 : undefined;
            resourceInputs["additionalPathSelectVpnv4"] = state ? state.additionalPathSelectVpnv4 : undefined;
            resourceInputs["additionalPathSelectVpnv6"] = state ? state.additionalPathSelectVpnv6 : undefined;
            resourceInputs["additionalPathVpnv4"] = state ? state.additionalPathVpnv4 : undefined;
            resourceInputs["additionalPathVpnv6"] = state ? state.additionalPathVpnv6 : undefined;
            resourceInputs["adminDistances"] = state ? state.adminDistances : undefined;
            resourceInputs["aggregateAddress6s"] = state ? state.aggregateAddress6s : undefined;
            resourceInputs["aggregateAddresses"] = state ? state.aggregateAddresses : undefined;
            resourceInputs["alwaysCompareMed"] = state ? state.alwaysCompareMed : undefined;
            resourceInputs["as"] = state ? state.as : undefined;
            resourceInputs["asString"] = state ? state.asString : undefined;
            resourceInputs["bestpathAsPathIgnore"] = state ? state.bestpathAsPathIgnore : undefined;
            resourceInputs["bestpathCmpConfedAspath"] = state ? state.bestpathCmpConfedAspath : undefined;
            resourceInputs["bestpathCmpRouterid"] = state ? state.bestpathCmpRouterid : undefined;
            resourceInputs["bestpathMedConfed"] = state ? state.bestpathMedConfed : undefined;
            resourceInputs["bestpathMedMissingAsWorst"] = state ? state.bestpathMedMissingAsWorst : undefined;
            resourceInputs["clientToClientReflection"] = state ? state.clientToClientReflection : undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["confederationIdentifier"] = state ? state.confederationIdentifier : undefined;
            resourceInputs["confederationPeers"] = state ? state.confederationPeers : undefined;
            resourceInputs["crossFamilyConditionalAdv"] = state ? state.crossFamilyConditionalAdv : undefined;
            resourceInputs["dampening"] = state ? state.dampening : undefined;
            resourceInputs["dampeningMaxSuppressTime"] = state ? state.dampeningMaxSuppressTime : undefined;
            resourceInputs["dampeningReachabilityHalfLife"] = state ? state.dampeningReachabilityHalfLife : undefined;
            resourceInputs["dampeningReuse"] = state ? state.dampeningReuse : undefined;
            resourceInputs["dampeningRouteMap"] = state ? state.dampeningRouteMap : undefined;
            resourceInputs["dampeningSuppress"] = state ? state.dampeningSuppress : undefined;
            resourceInputs["dampeningUnreachabilityHalfLife"] = state ? state.dampeningUnreachabilityHalfLife : undefined;
            resourceInputs["defaultLocalPreference"] = state ? state.defaultLocalPreference : undefined;
            resourceInputs["deterministicMed"] = state ? state.deterministicMed : undefined;
            resourceInputs["distanceExternal"] = state ? state.distanceExternal : undefined;
            resourceInputs["distanceInternal"] = state ? state.distanceInternal : undefined;
            resourceInputs["distanceLocal"] = state ? state.distanceLocal : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["ebgpMultipath"] = state ? state.ebgpMultipath : undefined;
            resourceInputs["enforceFirstAs"] = state ? state.enforceFirstAs : undefined;
            resourceInputs["fastExternalFailover"] = state ? state.fastExternalFailover : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["gracefulEndOnTimer"] = state ? state.gracefulEndOnTimer : undefined;
            resourceInputs["gracefulRestart"] = state ? state.gracefulRestart : undefined;
            resourceInputs["gracefulRestartTime"] = state ? state.gracefulRestartTime : undefined;
            resourceInputs["gracefulStalepathTime"] = state ? state.gracefulStalepathTime : undefined;
            resourceInputs["gracefulUpdateDelay"] = state ? state.gracefulUpdateDelay : undefined;
            resourceInputs["holdtimeTimer"] = state ? state.holdtimeTimer : undefined;
            resourceInputs["ibgpMultipath"] = state ? state.ibgpMultipath : undefined;
            resourceInputs["ignoreOptionalCapability"] = state ? state.ignoreOptionalCapability : undefined;
            resourceInputs["keepaliveTimer"] = state ? state.keepaliveTimer : undefined;
            resourceInputs["logNeighbourChanges"] = state ? state.logNeighbourChanges : undefined;
            resourceInputs["multipathRecursiveDistance"] = state ? state.multipathRecursiveDistance : undefined;
            resourceInputs["neighborGroups"] = state ? state.neighborGroups : undefined;
            resourceInputs["neighborRange6s"] = state ? state.neighborRange6s : undefined;
            resourceInputs["neighborRanges"] = state ? state.neighborRanges : undefined;
            resourceInputs["neighbors"] = state ? state.neighbors : undefined;
            resourceInputs["network6s"] = state ? state.network6s : undefined;
            resourceInputs["networkImportCheck"] = state ? state.networkImportCheck : undefined;
            resourceInputs["networks"] = state ? state.networks : undefined;
            resourceInputs["recursiveInheritPriority"] = state ? state.recursiveInheritPriority : undefined;
            resourceInputs["recursiveNextHop"] = state ? state.recursiveNextHop : undefined;
            resourceInputs["redistribute6s"] = state ? state.redistribute6s : undefined;
            resourceInputs["redistributes"] = state ? state.redistributes : undefined;
            resourceInputs["routerId"] = state ? state.routerId : undefined;
            resourceInputs["scanTime"] = state ? state.scanTime : undefined;
            resourceInputs["synchronization"] = state ? state.synchronization : undefined;
            resourceInputs["tagResolveMode"] = state ? state.tagResolveMode : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
            resourceInputs["vrf6s"] = state ? state.vrf6s : undefined;
            resourceInputs["vrfLeak6s"] = state ? state.vrfLeak6s : undefined;
            resourceInputs["vrfLeaks"] = state ? state.vrfLeaks : undefined;
            resourceInputs["vrves"] = state ? state.vrves : undefined;
        } else {
            const args = argsOrState as BgpArgs | undefined;
            if ((!args || args.as === undefined) && !opts.urn) {
                throw new Error("Missing required property 'as'");
            }
            resourceInputs["additionalPath"] = args ? args.additionalPath : undefined;
            resourceInputs["additionalPath6"] = args ? args.additionalPath6 : undefined;
            resourceInputs["additionalPathSelect"] = args ? args.additionalPathSelect : undefined;
            resourceInputs["additionalPathSelect6"] = args ? args.additionalPathSelect6 : undefined;
            resourceInputs["additionalPathSelectVpnv4"] = args ? args.additionalPathSelectVpnv4 : undefined;
            resourceInputs["additionalPathSelectVpnv6"] = args ? args.additionalPathSelectVpnv6 : undefined;
            resourceInputs["additionalPathVpnv4"] = args ? args.additionalPathVpnv4 : undefined;
            resourceInputs["additionalPathVpnv6"] = args ? args.additionalPathVpnv6 : undefined;
            resourceInputs["adminDistances"] = args ? args.adminDistances : undefined;
            resourceInputs["aggregateAddress6s"] = args ? args.aggregateAddress6s : undefined;
            resourceInputs["aggregateAddresses"] = args ? args.aggregateAddresses : undefined;
            resourceInputs["alwaysCompareMed"] = args ? args.alwaysCompareMed : undefined;
            resourceInputs["as"] = args ? args.as : undefined;
            resourceInputs["asString"] = args ? args.asString : undefined;
            resourceInputs["bestpathAsPathIgnore"] = args ? args.bestpathAsPathIgnore : undefined;
            resourceInputs["bestpathCmpConfedAspath"] = args ? args.bestpathCmpConfedAspath : undefined;
            resourceInputs["bestpathCmpRouterid"] = args ? args.bestpathCmpRouterid : undefined;
            resourceInputs["bestpathMedConfed"] = args ? args.bestpathMedConfed : undefined;
            resourceInputs["bestpathMedMissingAsWorst"] = args ? args.bestpathMedMissingAsWorst : undefined;
            resourceInputs["clientToClientReflection"] = args ? args.clientToClientReflection : undefined;
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["confederationIdentifier"] = args ? args.confederationIdentifier : undefined;
            resourceInputs["confederationPeers"] = args ? args.confederationPeers : undefined;
            resourceInputs["crossFamilyConditionalAdv"] = args ? args.crossFamilyConditionalAdv : undefined;
            resourceInputs["dampening"] = args ? args.dampening : undefined;
            resourceInputs["dampeningMaxSuppressTime"] = args ? args.dampeningMaxSuppressTime : undefined;
            resourceInputs["dampeningReachabilityHalfLife"] = args ? args.dampeningReachabilityHalfLife : undefined;
            resourceInputs["dampeningReuse"] = args ? args.dampeningReuse : undefined;
            resourceInputs["dampeningRouteMap"] = args ? args.dampeningRouteMap : undefined;
            resourceInputs["dampeningSuppress"] = args ? args.dampeningSuppress : undefined;
            resourceInputs["dampeningUnreachabilityHalfLife"] = args ? args.dampeningUnreachabilityHalfLife : undefined;
            resourceInputs["defaultLocalPreference"] = args ? args.defaultLocalPreference : undefined;
            resourceInputs["deterministicMed"] = args ? args.deterministicMed : undefined;
            resourceInputs["distanceExternal"] = args ? args.distanceExternal : undefined;
            resourceInputs["distanceInternal"] = args ? args.distanceInternal : undefined;
            resourceInputs["distanceLocal"] = args ? args.distanceLocal : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["ebgpMultipath"] = args ? args.ebgpMultipath : undefined;
            resourceInputs["enforceFirstAs"] = args ? args.enforceFirstAs : undefined;
            resourceInputs["fastExternalFailover"] = args ? args.fastExternalFailover : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["gracefulEndOnTimer"] = args ? args.gracefulEndOnTimer : undefined;
            resourceInputs["gracefulRestart"] = args ? args.gracefulRestart : undefined;
            resourceInputs["gracefulRestartTime"] = args ? args.gracefulRestartTime : undefined;
            resourceInputs["gracefulStalepathTime"] = args ? args.gracefulStalepathTime : undefined;
            resourceInputs["gracefulUpdateDelay"] = args ? args.gracefulUpdateDelay : undefined;
            resourceInputs["holdtimeTimer"] = args ? args.holdtimeTimer : undefined;
            resourceInputs["ibgpMultipath"] = args ? args.ibgpMultipath : undefined;
            resourceInputs["ignoreOptionalCapability"] = args ? args.ignoreOptionalCapability : undefined;
            resourceInputs["keepaliveTimer"] = args ? args.keepaliveTimer : undefined;
            resourceInputs["logNeighbourChanges"] = args ? args.logNeighbourChanges : undefined;
            resourceInputs["multipathRecursiveDistance"] = args ? args.multipathRecursiveDistance : undefined;
            resourceInputs["neighborGroups"] = args ? args.neighborGroups : undefined;
            resourceInputs["neighborRange6s"] = args ? args.neighborRange6s : undefined;
            resourceInputs["neighborRanges"] = args ? args.neighborRanges : undefined;
            resourceInputs["neighbors"] = args ? args.neighbors : undefined;
            resourceInputs["network6s"] = args ? args.network6s : undefined;
            resourceInputs["networkImportCheck"] = args ? args.networkImportCheck : undefined;
            resourceInputs["networks"] = args ? args.networks : undefined;
            resourceInputs["recursiveInheritPriority"] = args ? args.recursiveInheritPriority : undefined;
            resourceInputs["recursiveNextHop"] = args ? args.recursiveNextHop : undefined;
            resourceInputs["redistribute6s"] = args ? args.redistribute6s : undefined;
            resourceInputs["redistributes"] = args ? args.redistributes : undefined;
            resourceInputs["routerId"] = args ? args.routerId : undefined;
            resourceInputs["scanTime"] = args ? args.scanTime : undefined;
            resourceInputs["synchronization"] = args ? args.synchronization : undefined;
            resourceInputs["tagResolveMode"] = args ? args.tagResolveMode : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
            resourceInputs["vrf6s"] = args ? args.vrf6s : undefined;
            resourceInputs["vrfLeak6s"] = args ? args.vrfLeak6s : undefined;
            resourceInputs["vrfLeaks"] = args ? args.vrfLeaks : undefined;
            resourceInputs["vrves"] = args ? args.vrves : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Bgp.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Bgp resources.
 */
export interface BgpState {
    /**
     * Enable/disable selection of BGP IPv4 additional paths. Valid values: `enable`, `disable`.
     */
    additionalPath?: pulumi.Input<string>;
    /**
     * Enable/disable selection of BGP IPv6 additional paths. Valid values: `enable`, `disable`.
     */
    additionalPath6?: pulumi.Input<string>;
    /**
     * Number of additional paths to be selected for each IPv4 NLRI.
     */
    additionalPathSelect?: pulumi.Input<number>;
    /**
     * Number of additional paths to be selected for each IPv6 NLRI.
     */
    additionalPathSelect6?: pulumi.Input<number>;
    /**
     * Number of additional paths to be selected for each VPNv4 NLRI.
     */
    additionalPathSelectVpnv4?: pulumi.Input<number>;
    /**
     * Number of additional paths to be selected for each VPNv6 NLRI.
     */
    additionalPathSelectVpnv6?: pulumi.Input<number>;
    /**
     * Enable/disable selection of BGP VPNv4 additional paths. Valid values: `enable`, `disable`.
     */
    additionalPathVpnv4?: pulumi.Input<string>;
    /**
     * Enable/disable selection of BGP VPNv6 additional paths. Valid values: `enable`, `disable`.
     */
    additionalPathVpnv6?: pulumi.Input<string>;
    /**
     * Administrative distance modifications. The structure of `adminDistance` block is documented below.
     */
    adminDistances?: pulumi.Input<pulumi.Input<inputs.router.BgpAdminDistance>[]>;
    /**
     * BGP IPv6 aggregate address table. The structure of `aggregateAddress6` block is documented below.
     */
    aggregateAddress6s?: pulumi.Input<pulumi.Input<inputs.router.BgpAggregateAddress6>[]>;
    /**
     * BGP aggregate address table. The structure of `aggregateAddress` block is documented below.
     */
    aggregateAddresses?: pulumi.Input<pulumi.Input<inputs.router.BgpAggregateAddress>[]>;
    /**
     * Enable/disable always compare MED. Valid values: `enable`, `disable`.
     */
    alwaysCompareMed?: pulumi.Input<string>;
    /**
     * Router AS number, valid from 1 to 4294967295, 0 to disable BGP.
     */
    as?: pulumi.Input<number>;
    /**
     * Router AS number, asplain/asdot/asdot+ format, 0 to disable BGP.
     */
    asString?: pulumi.Input<string>;
    /**
     * Enable/disable ignore AS path. Valid values: `enable`, `disable`.
     */
    bestpathAsPathIgnore?: pulumi.Input<string>;
    /**
     * Enable/disable compare federation AS path length. Valid values: `enable`, `disable`.
     */
    bestpathCmpConfedAspath?: pulumi.Input<string>;
    /**
     * Enable/disable compare router ID for identical EBGP paths. Valid values: `enable`, `disable`.
     */
    bestpathCmpRouterid?: pulumi.Input<string>;
    /**
     * Enable/disable compare MED among confederation paths. Valid values: `enable`, `disable`.
     */
    bestpathMedConfed?: pulumi.Input<string>;
    /**
     * Enable/disable treat missing MED as least preferred. Valid values: `enable`, `disable`.
     */
    bestpathMedMissingAsWorst?: pulumi.Input<string>;
    /**
     * Enable/disable client-to-client route reflection. Valid values: `enable`, `disable`.
     */
    clientToClientReflection?: pulumi.Input<string>;
    /**
     * Route reflector cluster ID.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Confederation identifier.
     */
    confederationIdentifier?: pulumi.Input<number>;
    /**
     * Confederation peers. The structure of `confederationPeers` block is documented below.
     */
    confederationPeers?: pulumi.Input<pulumi.Input<inputs.router.BgpConfederationPeer>[]>;
    /**
     * Enable/disable cross address family conditional advertisement. Valid values: `enable`, `disable`.
     */
    crossFamilyConditionalAdv?: pulumi.Input<string>;
    /**
     * Enable/disable route-flap dampening. Valid values: `enable`, `disable`.
     */
    dampening?: pulumi.Input<string>;
    /**
     * Maximum minutes a route can be suppressed.
     */
    dampeningMaxSuppressTime?: pulumi.Input<number>;
    /**
     * Reachability half-life time for penalty (min).
     */
    dampeningReachabilityHalfLife?: pulumi.Input<number>;
    /**
     * Threshold to reuse routes.
     */
    dampeningReuse?: pulumi.Input<number>;
    /**
     * Criteria for dampening.
     */
    dampeningRouteMap?: pulumi.Input<string>;
    /**
     * Threshold to suppress routes.
     */
    dampeningSuppress?: pulumi.Input<number>;
    /**
     * Unreachability half-life time for penalty (min).
     */
    dampeningUnreachabilityHalfLife?: pulumi.Input<number>;
    /**
     * Default local preference.
     */
    defaultLocalPreference?: pulumi.Input<number>;
    /**
     * Enable/disable enforce deterministic comparison of MED. Valid values: `enable`, `disable`.
     */
    deterministicMed?: pulumi.Input<string>;
    /**
     * Distance for routes external to the AS.
     */
    distanceExternal?: pulumi.Input<number>;
    /**
     * Distance for routes internal to the AS.
     */
    distanceInternal?: pulumi.Input<number>;
    /**
     * Distance for routes local to the AS.
     */
    distanceLocal?: pulumi.Input<number>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Enable/disable EBGP multi-path. Valid values: `enable`, `disable`.
     */
    ebgpMultipath?: pulumi.Input<string>;
    /**
     * Enable/disable enforce first AS for EBGP routes. Valid values: `enable`, `disable`.
     */
    enforceFirstAs?: pulumi.Input<string>;
    /**
     * Enable/disable reset peer BGP session if link goes down. Valid values: `enable`, `disable`.
     */
    fastExternalFailover?: pulumi.Input<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * Enable/disable to exit graceful restart on timer only. Valid values: `enable`, `disable`.
     */
    gracefulEndOnTimer?: pulumi.Input<string>;
    /**
     * Enable/disable BGP graceful restart capabilities. Valid values: `enable`, `disable`.
     */
    gracefulRestart?: pulumi.Input<string>;
    /**
     * Time needed for neighbors to restart (sec).
     */
    gracefulRestartTime?: pulumi.Input<number>;
    /**
     * Time to hold stale paths of restarting neighbor (sec).
     */
    gracefulStalepathTime?: pulumi.Input<number>;
    /**
     * Route advertisement/selection delay after restart (sec).
     */
    gracefulUpdateDelay?: pulumi.Input<number>;
    /**
     * Number of seconds to mark peer as dead.
     */
    holdtimeTimer?: pulumi.Input<number>;
    /**
     * Enable/disable IBGP multi-path. Valid values: `enable`, `disable`.
     */
    ibgpMultipath?: pulumi.Input<string>;
    /**
     * Don't send unknown optional capability notification message Valid values: `enable`, `disable`.
     */
    ignoreOptionalCapability?: pulumi.Input<string>;
    /**
     * Frequency to send keep alive requests.
     */
    keepaliveTimer?: pulumi.Input<number>;
    /**
     * Enable logging of BGP neighbour's changes Valid values: `enable`, `disable`.
     */
    logNeighbourChanges?: pulumi.Input<string>;
    /**
     * Enable/disable use of recursive distance to select multipath. Valid values: `enable`, `disable`.
     */
    multipathRecursiveDistance?: pulumi.Input<string>;
    /**
     * BGP neighbor group table. The structure of `neighborGroup` block is documented below.
     */
    neighborGroups?: pulumi.Input<pulumi.Input<inputs.router.BgpNeighborGroup>[]>;
    /**
     * BGP IPv6 neighbor range table. The structure of `neighborRange6` block is documented below.
     */
    neighborRange6s?: pulumi.Input<pulumi.Input<inputs.router.BgpNeighborRange6>[]>;
    /**
     * BGP neighbor range table. The structure of `neighborRange` block is documented below.
     */
    neighborRanges?: pulumi.Input<pulumi.Input<inputs.router.BgpNeighborRange>[]>;
    /**
     * BGP neighbor table. The structure of `neighbor` block is documented below.
     */
    neighbors?: pulumi.Input<pulumi.Input<inputs.router.BgpNeighbor>[]>;
    /**
     * BGP IPv6 network table. The structure of `network6` block is documented below.
     */
    network6s?: pulumi.Input<pulumi.Input<inputs.router.BgpNetwork6>[]>;
    /**
     * Enable/disable ensure BGP network route exists in IGP. Valid values: `enable`, `disable`.
     */
    networkImportCheck?: pulumi.Input<string>;
    /**
     * BGP network table. The structure of `network` block is documented below.
     */
    networks?: pulumi.Input<pulumi.Input<inputs.router.BgpNetwork>[]>;
    /**
     * Enable/disable priority inheritance for recursive resolution. Valid values: `enable`, `disable`.
     */
    recursiveInheritPriority?: pulumi.Input<string>;
    /**
     * Enable/disable recursive resolution of next-hop using BGP route. Valid values: `enable`, `disable`.
     */
    recursiveNextHop?: pulumi.Input<string>;
    /**
     * BGP IPv6 redistribute table. The structure of `redistribute6` block is documented below.
     */
    redistribute6s?: pulumi.Input<pulumi.Input<inputs.router.BgpRedistribute6>[]>;
    /**
     * BGP IPv4 redistribute table. The structure of `redistribute` block is documented below.
     */
    redistributes?: pulumi.Input<pulumi.Input<inputs.router.BgpRedistribute>[]>;
    /**
     * Router ID.
     */
    routerId?: pulumi.Input<string>;
    /**
     * Background scanner interval (sec), 0 to disable it.
     */
    scanTime?: pulumi.Input<number>;
    /**
     * Enable/disable only advertise routes from iBGP if routes present in an IGP. Valid values: `enable`, `disable`.
     */
    synchronization?: pulumi.Input<string>;
    /**
     * Configure tag-match mode. Resolves BGP routes with other routes containing the same tag. Valid values: `disable`, `preferred`, `merge`.
     */
    tagResolveMode?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * BGP IPv6 VRF leaking table. The structure of `vrf6` block is documented below.
     */
    vrf6s?: pulumi.Input<pulumi.Input<inputs.router.BgpVrf6>[]>;
    /**
     * BGP IPv6 VRF leaking table. The structure of `vrfLeak6` block is documented below.
     */
    vrfLeak6s?: pulumi.Input<pulumi.Input<inputs.router.BgpVrfLeak6>[]>;
    /**
     * BGP VRF leaking table. The structure of `vrfLeak` block is documented below.
     */
    vrfLeaks?: pulumi.Input<pulumi.Input<inputs.router.BgpVrfLeak>[]>;
    /**
     * BGP VRF leaking table. The structure of `vrf` block is documented below.
     */
    vrves?: pulumi.Input<pulumi.Input<inputs.router.BgpVrf>[]>;
}

/**
 * The set of arguments for constructing a Bgp resource.
 */
export interface BgpArgs {
    /**
     * Enable/disable selection of BGP IPv4 additional paths. Valid values: `enable`, `disable`.
     */
    additionalPath?: pulumi.Input<string>;
    /**
     * Enable/disable selection of BGP IPv6 additional paths. Valid values: `enable`, `disable`.
     */
    additionalPath6?: pulumi.Input<string>;
    /**
     * Number of additional paths to be selected for each IPv4 NLRI.
     */
    additionalPathSelect?: pulumi.Input<number>;
    /**
     * Number of additional paths to be selected for each IPv6 NLRI.
     */
    additionalPathSelect6?: pulumi.Input<number>;
    /**
     * Number of additional paths to be selected for each VPNv4 NLRI.
     */
    additionalPathSelectVpnv4?: pulumi.Input<number>;
    /**
     * Number of additional paths to be selected for each VPNv6 NLRI.
     */
    additionalPathSelectVpnv6?: pulumi.Input<number>;
    /**
     * Enable/disable selection of BGP VPNv4 additional paths. Valid values: `enable`, `disable`.
     */
    additionalPathVpnv4?: pulumi.Input<string>;
    /**
     * Enable/disable selection of BGP VPNv6 additional paths. Valid values: `enable`, `disable`.
     */
    additionalPathVpnv6?: pulumi.Input<string>;
    /**
     * Administrative distance modifications. The structure of `adminDistance` block is documented below.
     */
    adminDistances?: pulumi.Input<pulumi.Input<inputs.router.BgpAdminDistance>[]>;
    /**
     * BGP IPv6 aggregate address table. The structure of `aggregateAddress6` block is documented below.
     */
    aggregateAddress6s?: pulumi.Input<pulumi.Input<inputs.router.BgpAggregateAddress6>[]>;
    /**
     * BGP aggregate address table. The structure of `aggregateAddress` block is documented below.
     */
    aggregateAddresses?: pulumi.Input<pulumi.Input<inputs.router.BgpAggregateAddress>[]>;
    /**
     * Enable/disable always compare MED. Valid values: `enable`, `disable`.
     */
    alwaysCompareMed?: pulumi.Input<string>;
    /**
     * Router AS number, valid from 1 to 4294967295, 0 to disable BGP.
     */
    as: pulumi.Input<number>;
    /**
     * Router AS number, asplain/asdot/asdot+ format, 0 to disable BGP.
     */
    asString?: pulumi.Input<string>;
    /**
     * Enable/disable ignore AS path. Valid values: `enable`, `disable`.
     */
    bestpathAsPathIgnore?: pulumi.Input<string>;
    /**
     * Enable/disable compare federation AS path length. Valid values: `enable`, `disable`.
     */
    bestpathCmpConfedAspath?: pulumi.Input<string>;
    /**
     * Enable/disable compare router ID for identical EBGP paths. Valid values: `enable`, `disable`.
     */
    bestpathCmpRouterid?: pulumi.Input<string>;
    /**
     * Enable/disable compare MED among confederation paths. Valid values: `enable`, `disable`.
     */
    bestpathMedConfed?: pulumi.Input<string>;
    /**
     * Enable/disable treat missing MED as least preferred. Valid values: `enable`, `disable`.
     */
    bestpathMedMissingAsWorst?: pulumi.Input<string>;
    /**
     * Enable/disable client-to-client route reflection. Valid values: `enable`, `disable`.
     */
    clientToClientReflection?: pulumi.Input<string>;
    /**
     * Route reflector cluster ID.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Confederation identifier.
     */
    confederationIdentifier?: pulumi.Input<number>;
    /**
     * Confederation peers. The structure of `confederationPeers` block is documented below.
     */
    confederationPeers?: pulumi.Input<pulumi.Input<inputs.router.BgpConfederationPeer>[]>;
    /**
     * Enable/disable cross address family conditional advertisement. Valid values: `enable`, `disable`.
     */
    crossFamilyConditionalAdv?: pulumi.Input<string>;
    /**
     * Enable/disable route-flap dampening. Valid values: `enable`, `disable`.
     */
    dampening?: pulumi.Input<string>;
    /**
     * Maximum minutes a route can be suppressed.
     */
    dampeningMaxSuppressTime?: pulumi.Input<number>;
    /**
     * Reachability half-life time for penalty (min).
     */
    dampeningReachabilityHalfLife?: pulumi.Input<number>;
    /**
     * Threshold to reuse routes.
     */
    dampeningReuse?: pulumi.Input<number>;
    /**
     * Criteria for dampening.
     */
    dampeningRouteMap?: pulumi.Input<string>;
    /**
     * Threshold to suppress routes.
     */
    dampeningSuppress?: pulumi.Input<number>;
    /**
     * Unreachability half-life time for penalty (min).
     */
    dampeningUnreachabilityHalfLife?: pulumi.Input<number>;
    /**
     * Default local preference.
     */
    defaultLocalPreference?: pulumi.Input<number>;
    /**
     * Enable/disable enforce deterministic comparison of MED. Valid values: `enable`, `disable`.
     */
    deterministicMed?: pulumi.Input<string>;
    /**
     * Distance for routes external to the AS.
     */
    distanceExternal?: pulumi.Input<number>;
    /**
     * Distance for routes internal to the AS.
     */
    distanceInternal?: pulumi.Input<number>;
    /**
     * Distance for routes local to the AS.
     */
    distanceLocal?: pulumi.Input<number>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Enable/disable EBGP multi-path. Valid values: `enable`, `disable`.
     */
    ebgpMultipath?: pulumi.Input<string>;
    /**
     * Enable/disable enforce first AS for EBGP routes. Valid values: `enable`, `disable`.
     */
    enforceFirstAs?: pulumi.Input<string>;
    /**
     * Enable/disable reset peer BGP session if link goes down. Valid values: `enable`, `disable`.
     */
    fastExternalFailover?: pulumi.Input<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * Enable/disable to exit graceful restart on timer only. Valid values: `enable`, `disable`.
     */
    gracefulEndOnTimer?: pulumi.Input<string>;
    /**
     * Enable/disable BGP graceful restart capabilities. Valid values: `enable`, `disable`.
     */
    gracefulRestart?: pulumi.Input<string>;
    /**
     * Time needed for neighbors to restart (sec).
     */
    gracefulRestartTime?: pulumi.Input<number>;
    /**
     * Time to hold stale paths of restarting neighbor (sec).
     */
    gracefulStalepathTime?: pulumi.Input<number>;
    /**
     * Route advertisement/selection delay after restart (sec).
     */
    gracefulUpdateDelay?: pulumi.Input<number>;
    /**
     * Number of seconds to mark peer as dead.
     */
    holdtimeTimer?: pulumi.Input<number>;
    /**
     * Enable/disable IBGP multi-path. Valid values: `enable`, `disable`.
     */
    ibgpMultipath?: pulumi.Input<string>;
    /**
     * Don't send unknown optional capability notification message Valid values: `enable`, `disable`.
     */
    ignoreOptionalCapability?: pulumi.Input<string>;
    /**
     * Frequency to send keep alive requests.
     */
    keepaliveTimer?: pulumi.Input<number>;
    /**
     * Enable logging of BGP neighbour's changes Valid values: `enable`, `disable`.
     */
    logNeighbourChanges?: pulumi.Input<string>;
    /**
     * Enable/disable use of recursive distance to select multipath. Valid values: `enable`, `disable`.
     */
    multipathRecursiveDistance?: pulumi.Input<string>;
    /**
     * BGP neighbor group table. The structure of `neighborGroup` block is documented below.
     */
    neighborGroups?: pulumi.Input<pulumi.Input<inputs.router.BgpNeighborGroup>[]>;
    /**
     * BGP IPv6 neighbor range table. The structure of `neighborRange6` block is documented below.
     */
    neighborRange6s?: pulumi.Input<pulumi.Input<inputs.router.BgpNeighborRange6>[]>;
    /**
     * BGP neighbor range table. The structure of `neighborRange` block is documented below.
     */
    neighborRanges?: pulumi.Input<pulumi.Input<inputs.router.BgpNeighborRange>[]>;
    /**
     * BGP neighbor table. The structure of `neighbor` block is documented below.
     */
    neighbors?: pulumi.Input<pulumi.Input<inputs.router.BgpNeighbor>[]>;
    /**
     * BGP IPv6 network table. The structure of `network6` block is documented below.
     */
    network6s?: pulumi.Input<pulumi.Input<inputs.router.BgpNetwork6>[]>;
    /**
     * Enable/disable ensure BGP network route exists in IGP. Valid values: `enable`, `disable`.
     */
    networkImportCheck?: pulumi.Input<string>;
    /**
     * BGP network table. The structure of `network` block is documented below.
     */
    networks?: pulumi.Input<pulumi.Input<inputs.router.BgpNetwork>[]>;
    /**
     * Enable/disable priority inheritance for recursive resolution. Valid values: `enable`, `disable`.
     */
    recursiveInheritPriority?: pulumi.Input<string>;
    /**
     * Enable/disable recursive resolution of next-hop using BGP route. Valid values: `enable`, `disable`.
     */
    recursiveNextHop?: pulumi.Input<string>;
    /**
     * BGP IPv6 redistribute table. The structure of `redistribute6` block is documented below.
     */
    redistribute6s?: pulumi.Input<pulumi.Input<inputs.router.BgpRedistribute6>[]>;
    /**
     * BGP IPv4 redistribute table. The structure of `redistribute` block is documented below.
     */
    redistributes?: pulumi.Input<pulumi.Input<inputs.router.BgpRedistribute>[]>;
    /**
     * Router ID.
     */
    routerId?: pulumi.Input<string>;
    /**
     * Background scanner interval (sec), 0 to disable it.
     */
    scanTime?: pulumi.Input<number>;
    /**
     * Enable/disable only advertise routes from iBGP if routes present in an IGP. Valid values: `enable`, `disable`.
     */
    synchronization?: pulumi.Input<string>;
    /**
     * Configure tag-match mode. Resolves BGP routes with other routes containing the same tag. Valid values: `disable`, `preferred`, `merge`.
     */
    tagResolveMode?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * BGP IPv6 VRF leaking table. The structure of `vrf6` block is documented below.
     */
    vrf6s?: pulumi.Input<pulumi.Input<inputs.router.BgpVrf6>[]>;
    /**
     * BGP IPv6 VRF leaking table. The structure of `vrfLeak6` block is documented below.
     */
    vrfLeak6s?: pulumi.Input<pulumi.Input<inputs.router.BgpVrfLeak6>[]>;
    /**
     * BGP VRF leaking table. The structure of `vrfLeak` block is documented below.
     */
    vrfLeaks?: pulumi.Input<pulumi.Input<inputs.router.BgpVrfLeak>[]>;
    /**
     * BGP VRF leaking table. The structure of `vrf` block is documented below.
     */
    vrves?: pulumi.Input<pulumi.Input<inputs.router.BgpVrf>[]>;
}
