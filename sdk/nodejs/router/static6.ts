// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Configure IPv6 static routing tables.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumiverse/fortios";
 *
 * const trname = new fortios.router.Static6("trname", {
 *     bfd: "disable",
 *     blackhole: "disable",
 *     device: "port3",
 *     devindex: 5,
 *     distance: 10,
 *     dst: "2001:db8::/32",
 *     gateway: "::",
 *     priority: 32,
 *     seqNum: 1,
 *     status: "enable",
 *     virtualWanLink: "disable",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * Router Static6 can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:router/static6:Static6 labelname {{seq_num}}
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:router/static6:Static6 labelname {{seq_num}}
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Static6 extends pulumi.CustomResource {
    /**
     * Get an existing Static6 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Static6State, opts?: pulumi.CustomResourceOptions): Static6 {
        return new Static6(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:router/static6:Static6';

    /**
     * Returns true if the given object is an instance of Static6.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Static6 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Static6.__pulumiType;
    }

    /**
     * Enable/disable Bidirectional Forwarding Detection (BFD). Valid values: `enable`, `disable`.
     */
    public readonly bfd!: pulumi.Output<string>;
    /**
     * Enable/disable black hole. Valid values: `enable`, `disable`.
     */
    public readonly blackhole!: pulumi.Output<string>;
    /**
     * Optional comments.
     */
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * Gateway out interface or tunnel.
     */
    public readonly device!: pulumi.Output<string>;
    /**
     * Device index (0 - 4294967295).
     */
    public readonly devindex!: pulumi.Output<number>;
    /**
     * Administrative distance (1 - 255).
     */
    public readonly distance!: pulumi.Output<number>;
    /**
     * Destination IPv6 prefix.
     */
    public readonly dst!: pulumi.Output<string>;
    /**
     * Name of firewall address or address group.
     */
    public readonly dstaddr!: pulumi.Output<string>;
    /**
     * Enable use of dynamic gateway retrieved from Router Advertisement (RA). Valid values: `enable`, `disable`.
     */
    public readonly dynamicGateway!: pulumi.Output<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * IPv6 address of the gateway.
     */
    public readonly gateway!: pulumi.Output<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    /**
     * Enable/disable withdrawal of this static route when link monitor or health check is down. Valid values: `enable`, `disable`.
     */
    public readonly linkMonitorExempt!: pulumi.Output<string>;
    /**
     * Administrative priority (0 - 4294967295).
     */
    public readonly priority!: pulumi.Output<number>;
    /**
     * Enable/disable egress through the SD-WAN. Valid values: `enable`, `disable`.
     */
    public readonly sdwan!: pulumi.Output<string>;
    /**
     * Choose SD-WAN Zone. The structure of `sdwanZone` block is documented below.
     */
    public readonly sdwanZones!: pulumi.Output<outputs.router.Static6SdwanZone[] | undefined>;
    /**
     * Sequence number.
     */
    public readonly seqNum!: pulumi.Output<number>;
    /**
     * Enable/disable this static route. Valid values: `enable`, `disable`.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;
    /**
     * Enable/disable egress through the virtual-wan-link. Valid values: `enable`, `disable`.
     */
    public readonly virtualWanLink!: pulumi.Output<string>;
    /**
     * Virtual Routing Forwarding ID.
     */
    public readonly vrf!: pulumi.Output<number>;
    /**
     * Administrative weight (0 - 255).
     */
    public readonly weight!: pulumi.Output<number>;

    /**
     * Create a Static6 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Static6Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Static6Args | Static6State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Static6State | undefined;
            resourceInputs["bfd"] = state ? state.bfd : undefined;
            resourceInputs["blackhole"] = state ? state.blackhole : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["devindex"] = state ? state.devindex : undefined;
            resourceInputs["distance"] = state ? state.distance : undefined;
            resourceInputs["dst"] = state ? state.dst : undefined;
            resourceInputs["dstaddr"] = state ? state.dstaddr : undefined;
            resourceInputs["dynamicGateway"] = state ? state.dynamicGateway : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["gateway"] = state ? state.gateway : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["linkMonitorExempt"] = state ? state.linkMonitorExempt : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["sdwan"] = state ? state.sdwan : undefined;
            resourceInputs["sdwanZones"] = state ? state.sdwanZones : undefined;
            resourceInputs["seqNum"] = state ? state.seqNum : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
            resourceInputs["virtualWanLink"] = state ? state.virtualWanLink : undefined;
            resourceInputs["vrf"] = state ? state.vrf : undefined;
            resourceInputs["weight"] = state ? state.weight : undefined;
        } else {
            const args = argsOrState as Static6Args | undefined;
            if ((!args || args.device === undefined) && !opts.urn) {
                throw new Error("Missing required property 'device'");
            }
            resourceInputs["bfd"] = args ? args.bfd : undefined;
            resourceInputs["blackhole"] = args ? args.blackhole : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["devindex"] = args ? args.devindex : undefined;
            resourceInputs["distance"] = args ? args.distance : undefined;
            resourceInputs["dst"] = args ? args.dst : undefined;
            resourceInputs["dstaddr"] = args ? args.dstaddr : undefined;
            resourceInputs["dynamicGateway"] = args ? args.dynamicGateway : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["gateway"] = args ? args.gateway : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["linkMonitorExempt"] = args ? args.linkMonitorExempt : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["sdwan"] = args ? args.sdwan : undefined;
            resourceInputs["sdwanZones"] = args ? args.sdwanZones : undefined;
            resourceInputs["seqNum"] = args ? args.seqNum : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
            resourceInputs["virtualWanLink"] = args ? args.virtualWanLink : undefined;
            resourceInputs["vrf"] = args ? args.vrf : undefined;
            resourceInputs["weight"] = args ? args.weight : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Static6.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Static6 resources.
 */
export interface Static6State {
    /**
     * Enable/disable Bidirectional Forwarding Detection (BFD). Valid values: `enable`, `disable`.
     */
    bfd?: pulumi.Input<string>;
    /**
     * Enable/disable black hole. Valid values: `enable`, `disable`.
     */
    blackhole?: pulumi.Input<string>;
    /**
     * Optional comments.
     */
    comment?: pulumi.Input<string>;
    /**
     * Gateway out interface or tunnel.
     */
    device?: pulumi.Input<string>;
    /**
     * Device index (0 - 4294967295).
     */
    devindex?: pulumi.Input<number>;
    /**
     * Administrative distance (1 - 255).
     */
    distance?: pulumi.Input<number>;
    /**
     * Destination IPv6 prefix.
     */
    dst?: pulumi.Input<string>;
    /**
     * Name of firewall address or address group.
     */
    dstaddr?: pulumi.Input<string>;
    /**
     * Enable use of dynamic gateway retrieved from Router Advertisement (RA). Valid values: `enable`, `disable`.
     */
    dynamicGateway?: pulumi.Input<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * IPv6 address of the gateway.
     */
    gateway?: pulumi.Input<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * Enable/disable withdrawal of this static route when link monitor or health check is down. Valid values: `enable`, `disable`.
     */
    linkMonitorExempt?: pulumi.Input<string>;
    /**
     * Administrative priority (0 - 4294967295).
     */
    priority?: pulumi.Input<number>;
    /**
     * Enable/disable egress through the SD-WAN. Valid values: `enable`, `disable`.
     */
    sdwan?: pulumi.Input<string>;
    /**
     * Choose SD-WAN Zone. The structure of `sdwanZone` block is documented below.
     */
    sdwanZones?: pulumi.Input<pulumi.Input<inputs.router.Static6SdwanZone>[]>;
    /**
     * Sequence number.
     */
    seqNum?: pulumi.Input<number>;
    /**
     * Enable/disable this static route. Valid values: `enable`, `disable`.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Enable/disable egress through the virtual-wan-link. Valid values: `enable`, `disable`.
     */
    virtualWanLink?: pulumi.Input<string>;
    /**
     * Virtual Routing Forwarding ID.
     */
    vrf?: pulumi.Input<number>;
    /**
     * Administrative weight (0 - 255).
     */
    weight?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Static6 resource.
 */
export interface Static6Args {
    /**
     * Enable/disable Bidirectional Forwarding Detection (BFD). Valid values: `enable`, `disable`.
     */
    bfd?: pulumi.Input<string>;
    /**
     * Enable/disable black hole. Valid values: `enable`, `disable`.
     */
    blackhole?: pulumi.Input<string>;
    /**
     * Optional comments.
     */
    comment?: pulumi.Input<string>;
    /**
     * Gateway out interface or tunnel.
     */
    device: pulumi.Input<string>;
    /**
     * Device index (0 - 4294967295).
     */
    devindex?: pulumi.Input<number>;
    /**
     * Administrative distance (1 - 255).
     */
    distance?: pulumi.Input<number>;
    /**
     * Destination IPv6 prefix.
     */
    dst?: pulumi.Input<string>;
    /**
     * Name of firewall address or address group.
     */
    dstaddr?: pulumi.Input<string>;
    /**
     * Enable use of dynamic gateway retrieved from Router Advertisement (RA). Valid values: `enable`, `disable`.
     */
    dynamicGateway?: pulumi.Input<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * IPv6 address of the gateway.
     */
    gateway?: pulumi.Input<string>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * Enable/disable withdrawal of this static route when link monitor or health check is down. Valid values: `enable`, `disable`.
     */
    linkMonitorExempt?: pulumi.Input<string>;
    /**
     * Administrative priority (0 - 4294967295).
     */
    priority?: pulumi.Input<number>;
    /**
     * Enable/disable egress through the SD-WAN. Valid values: `enable`, `disable`.
     */
    sdwan?: pulumi.Input<string>;
    /**
     * Choose SD-WAN Zone. The structure of `sdwanZone` block is documented below.
     */
    sdwanZones?: pulumi.Input<pulumi.Input<inputs.router.Static6SdwanZone>[]>;
    /**
     * Sequence number.
     */
    seqNum?: pulumi.Input<number>;
    /**
     * Enable/disable this static route. Valid values: `enable`, `disable`.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Enable/disable egress through the virtual-wan-link. Valid values: `enable`, `disable`.
     */
    virtualWanLink?: pulumi.Input<string>;
    /**
     * Virtual Routing Forwarding ID.
     */
    vrf?: pulumi.Input<number>;
    /**
     * Administrative weight (0 - 255).
     */
    weight?: pulumi.Input<number>;
}
