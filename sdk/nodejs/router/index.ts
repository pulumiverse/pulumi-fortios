// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AccesslistArgs, AccesslistState } from "./accesslist";
export type Accesslist = import("./accesslist").Accesslist;
export const Accesslist: typeof import("./accesslist").Accesslist = null as any;
utilities.lazyLoad(exports, ["Accesslist"], () => require("./accesslist"));

export { Accesslist6Args, Accesslist6State } from "./accesslist6";
export type Accesslist6 = import("./accesslist6").Accesslist6;
export const Accesslist6: typeof import("./accesslist6").Accesslist6 = null as any;
utilities.lazyLoad(exports, ["Accesslist6"], () => require("./accesslist6"));

export { AspathlistArgs, AspathlistState } from "./aspathlist";
export type Aspathlist = import("./aspathlist").Aspathlist;
export const Aspathlist: typeof import("./aspathlist").Aspathlist = null as any;
utilities.lazyLoad(exports, ["Aspathlist"], () => require("./aspathlist"));

export { AuthpathArgs, AuthpathState } from "./authpath";
export type Authpath = import("./authpath").Authpath;
export const Authpath: typeof import("./authpath").Authpath = null as any;
utilities.lazyLoad(exports, ["Authpath"], () => require("./authpath"));

export { BfdArgs, BfdState } from "./bfd";
export type Bfd = import("./bfd").Bfd;
export const Bfd: typeof import("./bfd").Bfd = null as any;
utilities.lazyLoad(exports, ["Bfd"], () => require("./bfd"));

export { Bfd6Args, Bfd6State } from "./bfd6";
export type Bfd6 = import("./bfd6").Bfd6;
export const Bfd6: typeof import("./bfd6").Bfd6 = null as any;
utilities.lazyLoad(exports, ["Bfd6"], () => require("./bfd6"));

export { BgpArgs, BgpState } from "./bgp";
export type Bgp = import("./bgp").Bgp;
export const Bgp: typeof import("./bgp").Bgp = null as any;
utilities.lazyLoad(exports, ["Bgp"], () => require("./bgp"));

export { CommunitylistArgs, CommunitylistState } from "./communitylist";
export type Communitylist = import("./communitylist").Communitylist;
export const Communitylist: typeof import("./communitylist").Communitylist = null as any;
utilities.lazyLoad(exports, ["Communitylist"], () => require("./communitylist"));

export { ExtcommunitylistArgs, ExtcommunitylistState } from "./extcommunitylist";
export type Extcommunitylist = import("./extcommunitylist").Extcommunitylist;
export const Extcommunitylist: typeof import("./extcommunitylist").Extcommunitylist = null as any;
utilities.lazyLoad(exports, ["Extcommunitylist"], () => require("./extcommunitylist"));

export { GetAccesslistArgs, GetAccesslistResult, GetAccesslistOutputArgs } from "./getAccesslist";
export const getAccesslist: typeof import("./getAccesslist").getAccesslist = null as any;
export const getAccesslistOutput: typeof import("./getAccesslist").getAccesslistOutput = null as any;
utilities.lazyLoad(exports, ["getAccesslist","getAccesslistOutput"], () => require("./getAccesslist"));

export { GetAccesslist6Args, GetAccesslist6Result, GetAccesslist6OutputArgs } from "./getAccesslist6";
export const getAccesslist6: typeof import("./getAccesslist6").getAccesslist6 = null as any;
export const getAccesslist6Output: typeof import("./getAccesslist6").getAccesslist6Output = null as any;
utilities.lazyLoad(exports, ["getAccesslist6","getAccesslist6Output"], () => require("./getAccesslist6"));

export { GetAccesslist6listArgs, GetAccesslist6listResult, GetAccesslist6listOutputArgs } from "./getAccesslist6list";
export const getAccesslist6list: typeof import("./getAccesslist6list").getAccesslist6list = null as any;
export const getAccesslist6listOutput: typeof import("./getAccesslist6list").getAccesslist6listOutput = null as any;
utilities.lazyLoad(exports, ["getAccesslist6list","getAccesslist6listOutput"], () => require("./getAccesslist6list"));

export { GetAccesslistlistArgs, GetAccesslistlistResult, GetAccesslistlistOutputArgs } from "./getAccesslistlist";
export const getAccesslistlist: typeof import("./getAccesslistlist").getAccesslistlist = null as any;
export const getAccesslistlistOutput: typeof import("./getAccesslistlist").getAccesslistlistOutput = null as any;
utilities.lazyLoad(exports, ["getAccesslistlist","getAccesslistlistOutput"], () => require("./getAccesslistlist"));

export { GetAspathlistArgs, GetAspathlistResult, GetAspathlistOutputArgs } from "./getAspathlist";
export const getAspathlist: typeof import("./getAspathlist").getAspathlist = null as any;
export const getAspathlistOutput: typeof import("./getAspathlist").getAspathlistOutput = null as any;
utilities.lazyLoad(exports, ["getAspathlist","getAspathlistOutput"], () => require("./getAspathlist"));

export { GetAspathlistlistArgs, GetAspathlistlistResult, GetAspathlistlistOutputArgs } from "./getAspathlistlist";
export const getAspathlistlist: typeof import("./getAspathlistlist").getAspathlistlist = null as any;
export const getAspathlistlistOutput: typeof import("./getAspathlistlist").getAspathlistlistOutput = null as any;
utilities.lazyLoad(exports, ["getAspathlistlist","getAspathlistlistOutput"], () => require("./getAspathlistlist"));

export { GetAuthpathArgs, GetAuthpathResult, GetAuthpathOutputArgs } from "./getAuthpath";
export const getAuthpath: typeof import("./getAuthpath").getAuthpath = null as any;
export const getAuthpathOutput: typeof import("./getAuthpath").getAuthpathOutput = null as any;
utilities.lazyLoad(exports, ["getAuthpath","getAuthpathOutput"], () => require("./getAuthpath"));

export { GetAuthpathlistArgs, GetAuthpathlistResult, GetAuthpathlistOutputArgs } from "./getAuthpathlist";
export const getAuthpathlist: typeof import("./getAuthpathlist").getAuthpathlist = null as any;
export const getAuthpathlistOutput: typeof import("./getAuthpathlist").getAuthpathlistOutput = null as any;
utilities.lazyLoad(exports, ["getAuthpathlist","getAuthpathlistOutput"], () => require("./getAuthpathlist"));

export { GetBfdArgs, GetBfdResult, GetBfdOutputArgs } from "./getBfd";
export const getBfd: typeof import("./getBfd").getBfd = null as any;
export const getBfdOutput: typeof import("./getBfd").getBfdOutput = null as any;
utilities.lazyLoad(exports, ["getBfd","getBfdOutput"], () => require("./getBfd"));

export { GetBfd6Args, GetBfd6Result, GetBfd6OutputArgs } from "./getBfd6";
export const getBfd6: typeof import("./getBfd6").getBfd6 = null as any;
export const getBfd6Output: typeof import("./getBfd6").getBfd6Output = null as any;
utilities.lazyLoad(exports, ["getBfd6","getBfd6Output"], () => require("./getBfd6"));

export { GetBgpArgs, GetBgpResult, GetBgpOutputArgs } from "./getBgp";
export const getBgp: typeof import("./getBgp").getBgp = null as any;
export const getBgpOutput: typeof import("./getBgp").getBgpOutput = null as any;
utilities.lazyLoad(exports, ["getBgp","getBgpOutput"], () => require("./getBgp"));

export { GetCommunitylistArgs, GetCommunitylistResult, GetCommunitylistOutputArgs } from "./getCommunitylist";
export const getCommunitylist: typeof import("./getCommunitylist").getCommunitylist = null as any;
export const getCommunitylistOutput: typeof import("./getCommunitylist").getCommunitylistOutput = null as any;
utilities.lazyLoad(exports, ["getCommunitylist","getCommunitylistOutput"], () => require("./getCommunitylist"));

export { GetCommunitylistlistArgs, GetCommunitylistlistResult, GetCommunitylistlistOutputArgs } from "./getCommunitylistlist";
export const getCommunitylistlist: typeof import("./getCommunitylistlist").getCommunitylistlist = null as any;
export const getCommunitylistlistOutput: typeof import("./getCommunitylistlist").getCommunitylistlistOutput = null as any;
utilities.lazyLoad(exports, ["getCommunitylistlist","getCommunitylistlistOutput"], () => require("./getCommunitylistlist"));

export { GetIsisArgs, GetIsisResult, GetIsisOutputArgs } from "./getIsis";
export const getIsis: typeof import("./getIsis").getIsis = null as any;
export const getIsisOutput: typeof import("./getIsis").getIsisOutput = null as any;
utilities.lazyLoad(exports, ["getIsis","getIsisOutput"], () => require("./getIsis"));

export { GetKeychainArgs, GetKeychainResult, GetKeychainOutputArgs } from "./getKeychain";
export const getKeychain: typeof import("./getKeychain").getKeychain = null as any;
export const getKeychainOutput: typeof import("./getKeychain").getKeychainOutput = null as any;
utilities.lazyLoad(exports, ["getKeychain","getKeychainOutput"], () => require("./getKeychain"));

export { GetKeychainlistArgs, GetKeychainlistResult, GetKeychainlistOutputArgs } from "./getKeychainlist";
export const getKeychainlist: typeof import("./getKeychainlist").getKeychainlist = null as any;
export const getKeychainlistOutput: typeof import("./getKeychainlist").getKeychainlistOutput = null as any;
utilities.lazyLoad(exports, ["getKeychainlist","getKeychainlistOutput"], () => require("./getKeychainlist"));

export { GetMulticastArgs, GetMulticastResult, GetMulticastOutputArgs } from "./getMulticast";
export const getMulticast: typeof import("./getMulticast").getMulticast = null as any;
export const getMulticastOutput: typeof import("./getMulticast").getMulticastOutput = null as any;
utilities.lazyLoad(exports, ["getMulticast","getMulticastOutput"], () => require("./getMulticast"));

export { GetMulticast6Args, GetMulticast6Result, GetMulticast6OutputArgs } from "./getMulticast6";
export const getMulticast6: typeof import("./getMulticast6").getMulticast6 = null as any;
export const getMulticast6Output: typeof import("./getMulticast6").getMulticast6Output = null as any;
utilities.lazyLoad(exports, ["getMulticast6","getMulticast6Output"], () => require("./getMulticast6"));

export { GetMulticastflowArgs, GetMulticastflowResult, GetMulticastflowOutputArgs } from "./getMulticastflow";
export const getMulticastflow: typeof import("./getMulticastflow").getMulticastflow = null as any;
export const getMulticastflowOutput: typeof import("./getMulticastflow").getMulticastflowOutput = null as any;
utilities.lazyLoad(exports, ["getMulticastflow","getMulticastflowOutput"], () => require("./getMulticastflow"));

export { GetMulticastflowlistArgs, GetMulticastflowlistResult, GetMulticastflowlistOutputArgs } from "./getMulticastflowlist";
export const getMulticastflowlist: typeof import("./getMulticastflowlist").getMulticastflowlist = null as any;
export const getMulticastflowlistOutput: typeof import("./getMulticastflowlist").getMulticastflowlistOutput = null as any;
utilities.lazyLoad(exports, ["getMulticastflowlist","getMulticastflowlistOutput"], () => require("./getMulticastflowlist"));

export { GetOspfArgs, GetOspfResult, GetOspfOutputArgs } from "./getOspf";
export const getOspf: typeof import("./getOspf").getOspf = null as any;
export const getOspfOutput: typeof import("./getOspf").getOspfOutput = null as any;
utilities.lazyLoad(exports, ["getOspf","getOspfOutput"], () => require("./getOspf"));

export { GetOspf6Args, GetOspf6Result, GetOspf6OutputArgs } from "./getOspf6";
export const getOspf6: typeof import("./getOspf6").getOspf6 = null as any;
export const getOspf6Output: typeof import("./getOspf6").getOspf6Output = null as any;
utilities.lazyLoad(exports, ["getOspf6","getOspf6Output"], () => require("./getOspf6"));

export { GetPolicyArgs, GetPolicyResult, GetPolicyOutputArgs } from "./getPolicy";
export const getPolicy: typeof import("./getPolicy").getPolicy = null as any;
export const getPolicyOutput: typeof import("./getPolicy").getPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getPolicy","getPolicyOutput"], () => require("./getPolicy"));

export { GetPolicy6Args, GetPolicy6Result, GetPolicy6OutputArgs } from "./getPolicy6";
export const getPolicy6: typeof import("./getPolicy6").getPolicy6 = null as any;
export const getPolicy6Output: typeof import("./getPolicy6").getPolicy6Output = null as any;
utilities.lazyLoad(exports, ["getPolicy6","getPolicy6Output"], () => require("./getPolicy6"));

export { GetPolicy6listArgs, GetPolicy6listResult, GetPolicy6listOutputArgs } from "./getPolicy6list";
export const getPolicy6list: typeof import("./getPolicy6list").getPolicy6list = null as any;
export const getPolicy6listOutput: typeof import("./getPolicy6list").getPolicy6listOutput = null as any;
utilities.lazyLoad(exports, ["getPolicy6list","getPolicy6listOutput"], () => require("./getPolicy6list"));

export { GetPolicylistArgs, GetPolicylistResult, GetPolicylistOutputArgs } from "./getPolicylist";
export const getPolicylist: typeof import("./getPolicylist").getPolicylist = null as any;
export const getPolicylistOutput: typeof import("./getPolicylist").getPolicylistOutput = null as any;
utilities.lazyLoad(exports, ["getPolicylist","getPolicylistOutput"], () => require("./getPolicylist"));

export { GetPrefixlistArgs, GetPrefixlistResult, GetPrefixlistOutputArgs } from "./getPrefixlist";
export const getPrefixlist: typeof import("./getPrefixlist").getPrefixlist = null as any;
export const getPrefixlistOutput: typeof import("./getPrefixlist").getPrefixlistOutput = null as any;
utilities.lazyLoad(exports, ["getPrefixlist","getPrefixlistOutput"], () => require("./getPrefixlist"));

export { GetPrefixlist6Args, GetPrefixlist6Result, GetPrefixlist6OutputArgs } from "./getPrefixlist6";
export const getPrefixlist6: typeof import("./getPrefixlist6").getPrefixlist6 = null as any;
export const getPrefixlist6Output: typeof import("./getPrefixlist6").getPrefixlist6Output = null as any;
utilities.lazyLoad(exports, ["getPrefixlist6","getPrefixlist6Output"], () => require("./getPrefixlist6"));

export { GetPrefixlist6listArgs, GetPrefixlist6listResult, GetPrefixlist6listOutputArgs } from "./getPrefixlist6list";
export const getPrefixlist6list: typeof import("./getPrefixlist6list").getPrefixlist6list = null as any;
export const getPrefixlist6listOutput: typeof import("./getPrefixlist6list").getPrefixlist6listOutput = null as any;
utilities.lazyLoad(exports, ["getPrefixlist6list","getPrefixlist6listOutput"], () => require("./getPrefixlist6list"));

export { GetPrefixlistlistArgs, GetPrefixlistlistResult, GetPrefixlistlistOutputArgs } from "./getPrefixlistlist";
export const getPrefixlistlist: typeof import("./getPrefixlistlist").getPrefixlistlist = null as any;
export const getPrefixlistlistOutput: typeof import("./getPrefixlistlist").getPrefixlistlistOutput = null as any;
utilities.lazyLoad(exports, ["getPrefixlistlist","getPrefixlistlistOutput"], () => require("./getPrefixlistlist"));

export { GetRipArgs, GetRipResult, GetRipOutputArgs } from "./getRip";
export const getRip: typeof import("./getRip").getRip = null as any;
export const getRipOutput: typeof import("./getRip").getRipOutput = null as any;
utilities.lazyLoad(exports, ["getRip","getRipOutput"], () => require("./getRip"));

export { GetRipngArgs, GetRipngResult, GetRipngOutputArgs } from "./getRipng";
export const getRipng: typeof import("./getRipng").getRipng = null as any;
export const getRipngOutput: typeof import("./getRipng").getRipngOutput = null as any;
utilities.lazyLoad(exports, ["getRipng","getRipngOutput"], () => require("./getRipng"));

export { GetRoutemapArgs, GetRoutemapResult, GetRoutemapOutputArgs } from "./getRoutemap";
export const getRoutemap: typeof import("./getRoutemap").getRoutemap = null as any;
export const getRoutemapOutput: typeof import("./getRoutemap").getRoutemapOutput = null as any;
utilities.lazyLoad(exports, ["getRoutemap","getRoutemapOutput"], () => require("./getRoutemap"));

export { GetRoutemaplistArgs, GetRoutemaplistResult, GetRoutemaplistOutputArgs } from "./getRoutemaplist";
export const getRoutemaplist: typeof import("./getRoutemaplist").getRoutemaplist = null as any;
export const getRoutemaplistOutput: typeof import("./getRoutemaplist").getRoutemaplistOutput = null as any;
utilities.lazyLoad(exports, ["getRoutemaplist","getRoutemaplistOutput"], () => require("./getRoutemaplist"));

export { GetSettingArgs, GetSettingResult, GetSettingOutputArgs } from "./getSetting";
export const getSetting: typeof import("./getSetting").getSetting = null as any;
export const getSettingOutput: typeof import("./getSetting").getSettingOutput = null as any;
utilities.lazyLoad(exports, ["getSetting","getSettingOutput"], () => require("./getSetting"));

export { GetStaticArgs, GetStaticResult, GetStaticOutputArgs } from "./getStatic";
export const getStatic: typeof import("./getStatic").getStatic = null as any;
export const getStaticOutput: typeof import("./getStatic").getStaticOutput = null as any;
utilities.lazyLoad(exports, ["getStatic","getStaticOutput"], () => require("./getStatic"));

export { GetStatic6Args, GetStatic6Result, GetStatic6OutputArgs } from "./getStatic6";
export const getStatic6: typeof import("./getStatic6").getStatic6 = null as any;
export const getStatic6Output: typeof import("./getStatic6").getStatic6Output = null as any;
utilities.lazyLoad(exports, ["getStatic6","getStatic6Output"], () => require("./getStatic6"));

export { GetStatic6listArgs, GetStatic6listResult, GetStatic6listOutputArgs } from "./getStatic6list";
export const getStatic6list: typeof import("./getStatic6list").getStatic6list = null as any;
export const getStatic6listOutput: typeof import("./getStatic6list").getStatic6listOutput = null as any;
utilities.lazyLoad(exports, ["getStatic6list","getStatic6listOutput"], () => require("./getStatic6list"));

export { GetStaticlistArgs, GetStaticlistResult, GetStaticlistOutputArgs } from "./getStaticlist";
export const getStaticlist: typeof import("./getStaticlist").getStaticlist = null as any;
export const getStaticlistOutput: typeof import("./getStaticlist").getStaticlistOutput = null as any;
utilities.lazyLoad(exports, ["getStaticlist","getStaticlistOutput"], () => require("./getStaticlist"));

export { IsisArgs, IsisState } from "./isis";
export type Isis = import("./isis").Isis;
export const Isis: typeof import("./isis").Isis = null as any;
utilities.lazyLoad(exports, ["Isis"], () => require("./isis"));

export { KeychainArgs, KeychainState } from "./keychain";
export type Keychain = import("./keychain").Keychain;
export const Keychain: typeof import("./keychain").Keychain = null as any;
utilities.lazyLoad(exports, ["Keychain"], () => require("./keychain"));

export { MulticastArgs, MulticastState } from "./multicast";
export type Multicast = import("./multicast").Multicast;
export const Multicast: typeof import("./multicast").Multicast = null as any;
utilities.lazyLoad(exports, ["Multicast"], () => require("./multicast"));

export { Multicast6Args, Multicast6State } from "./multicast6";
export type Multicast6 = import("./multicast6").Multicast6;
export const Multicast6: typeof import("./multicast6").Multicast6 = null as any;
utilities.lazyLoad(exports, ["Multicast6"], () => require("./multicast6"));

export { MulticastflowArgs, MulticastflowState } from "./multicastflow";
export type Multicastflow = import("./multicastflow").Multicastflow;
export const Multicastflow: typeof import("./multicastflow").Multicastflow = null as any;
utilities.lazyLoad(exports, ["Multicastflow"], () => require("./multicastflow"));

export { OspfArgs, OspfState } from "./ospf";
export type Ospf = import("./ospf").Ospf;
export const Ospf: typeof import("./ospf").Ospf = null as any;
utilities.lazyLoad(exports, ["Ospf"], () => require("./ospf"));

export { Ospf6Args, Ospf6State } from "./ospf6";
export type Ospf6 = import("./ospf6").Ospf6;
export const Ospf6: typeof import("./ospf6").Ospf6 = null as any;
utilities.lazyLoad(exports, ["Ospf6"], () => require("./ospf6"));

export { PolicyArgs, PolicyState } from "./policy";
export type Policy = import("./policy").Policy;
export const Policy: typeof import("./policy").Policy = null as any;
utilities.lazyLoad(exports, ["Policy"], () => require("./policy"));

export { Policy6Args, Policy6State } from "./policy6";
export type Policy6 = import("./policy6").Policy6;
export const Policy6: typeof import("./policy6").Policy6 = null as any;
utilities.lazyLoad(exports, ["Policy6"], () => require("./policy6"));

export { PrefixlistArgs, PrefixlistState } from "./prefixlist";
export type Prefixlist = import("./prefixlist").Prefixlist;
export const Prefixlist: typeof import("./prefixlist").Prefixlist = null as any;
utilities.lazyLoad(exports, ["Prefixlist"], () => require("./prefixlist"));

export { Prefixlist6Args, Prefixlist6State } from "./prefixlist6";
export type Prefixlist6 = import("./prefixlist6").Prefixlist6;
export const Prefixlist6: typeof import("./prefixlist6").Prefixlist6 = null as any;
utilities.lazyLoad(exports, ["Prefixlist6"], () => require("./prefixlist6"));

export { RipArgs, RipState } from "./rip";
export type Rip = import("./rip").Rip;
export const Rip: typeof import("./rip").Rip = null as any;
utilities.lazyLoad(exports, ["Rip"], () => require("./rip"));

export { RipngArgs, RipngState } from "./ripng";
export type Ripng = import("./ripng").Ripng;
export const Ripng: typeof import("./ripng").Ripng = null as any;
utilities.lazyLoad(exports, ["Ripng"], () => require("./ripng"));

export { RoutemapArgs, RoutemapState } from "./routemap";
export type Routemap = import("./routemap").Routemap;
export const Routemap: typeof import("./routemap").Routemap = null as any;
utilities.lazyLoad(exports, ["Routemap"], () => require("./routemap"));

export { SettingArgs, SettingState } from "./setting";
export type Setting = import("./setting").Setting;
export const Setting: typeof import("./setting").Setting = null as any;
utilities.lazyLoad(exports, ["Setting"], () => require("./setting"));

export { StaticArgs, StaticState } from "./static";
export type Static = import("./static").Static;
export const Static: typeof import("./static").Static = null as any;
utilities.lazyLoad(exports, ["Static"], () => require("./static"));

export { Static6Args, Static6State } from "./static6";
export type Static6 = import("./static6").Static6;
export const Static6: typeof import("./static6").Static6 = null as any;
utilities.lazyLoad(exports, ["Static6"], () => require("./static6"));


// Export sub-modules:
import * as bgp from "./bgp";
import * as ospf from "./ospf";
import * as ospf6 from "./ospf6";

export {
    bgp,
    ospf,
    ospf6,
};

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "fortios:router/accesslist6:Accesslist6":
                return new Accesslist6(name, <any>undefined, { urn })
            case "fortios:router/accesslist:Accesslist":
                return new Accesslist(name, <any>undefined, { urn })
            case "fortios:router/aspathlist:Aspathlist":
                return new Aspathlist(name, <any>undefined, { urn })
            case "fortios:router/authpath:Authpath":
                return new Authpath(name, <any>undefined, { urn })
            case "fortios:router/bfd6:Bfd6":
                return new Bfd6(name, <any>undefined, { urn })
            case "fortios:router/bfd:Bfd":
                return new Bfd(name, <any>undefined, { urn })
            case "fortios:router/bgp:Bgp":
                return new Bgp(name, <any>undefined, { urn })
            case "fortios:router/communitylist:Communitylist":
                return new Communitylist(name, <any>undefined, { urn })
            case "fortios:router/extcommunitylist:Extcommunitylist":
                return new Extcommunitylist(name, <any>undefined, { urn })
            case "fortios:router/isis:Isis":
                return new Isis(name, <any>undefined, { urn })
            case "fortios:router/keychain:Keychain":
                return new Keychain(name, <any>undefined, { urn })
            case "fortios:router/multicast6:Multicast6":
                return new Multicast6(name, <any>undefined, { urn })
            case "fortios:router/multicast:Multicast":
                return new Multicast(name, <any>undefined, { urn })
            case "fortios:router/multicastflow:Multicastflow":
                return new Multicastflow(name, <any>undefined, { urn })
            case "fortios:router/ospf6:Ospf6":
                return new Ospf6(name, <any>undefined, { urn })
            case "fortios:router/ospf:Ospf":
                return new Ospf(name, <any>undefined, { urn })
            case "fortios:router/policy6:Policy6":
                return new Policy6(name, <any>undefined, { urn })
            case "fortios:router/policy:Policy":
                return new Policy(name, <any>undefined, { urn })
            case "fortios:router/prefixlist6:Prefixlist6":
                return new Prefixlist6(name, <any>undefined, { urn })
            case "fortios:router/prefixlist:Prefixlist":
                return new Prefixlist(name, <any>undefined, { urn })
            case "fortios:router/rip:Rip":
                return new Rip(name, <any>undefined, { urn })
            case "fortios:router/ripng:Ripng":
                return new Ripng(name, <any>undefined, { urn })
            case "fortios:router/routemap:Routemap":
                return new Routemap(name, <any>undefined, { urn })
            case "fortios:router/setting:Setting":
                return new Setting(name, <any>undefined, { urn })
            case "fortios:router/static6:Static6":
                return new Static6(name, <any>undefined, { urn })
            case "fortios:router/static:Static":
                return new Static(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("fortios", "router/accesslist", _module)
pulumi.runtime.registerResourceModule("fortios", "router/accesslist6", _module)
pulumi.runtime.registerResourceModule("fortios", "router/aspathlist", _module)
pulumi.runtime.registerResourceModule("fortios", "router/authpath", _module)
pulumi.runtime.registerResourceModule("fortios", "router/bfd", _module)
pulumi.runtime.registerResourceModule("fortios", "router/bfd6", _module)
pulumi.runtime.registerResourceModule("fortios", "router/bgp", _module)
pulumi.runtime.registerResourceModule("fortios", "router/communitylist", _module)
pulumi.runtime.registerResourceModule("fortios", "router/extcommunitylist", _module)
pulumi.runtime.registerResourceModule("fortios", "router/isis", _module)
pulumi.runtime.registerResourceModule("fortios", "router/keychain", _module)
pulumi.runtime.registerResourceModule("fortios", "router/multicast", _module)
pulumi.runtime.registerResourceModule("fortios", "router/multicast6", _module)
pulumi.runtime.registerResourceModule("fortios", "router/multicastflow", _module)
pulumi.runtime.registerResourceModule("fortios", "router/ospf", _module)
pulumi.runtime.registerResourceModule("fortios", "router/ospf6", _module)
pulumi.runtime.registerResourceModule("fortios", "router/policy", _module)
pulumi.runtime.registerResourceModule("fortios", "router/policy6", _module)
pulumi.runtime.registerResourceModule("fortios", "router/prefixlist", _module)
pulumi.runtime.registerResourceModule("fortios", "router/prefixlist6", _module)
pulumi.runtime.registerResourceModule("fortios", "router/rip", _module)
pulumi.runtime.registerResourceModule("fortios", "router/ripng", _module)
pulumi.runtime.registerResourceModule("fortios", "router/routemap", _module)
pulumi.runtime.registerResourceModule("fortios", "router/setting", _module)
pulumi.runtime.registerResourceModule("fortios", "router/static", _module)
pulumi.runtime.registerResourceModule("fortios", "router/static6", _module)
