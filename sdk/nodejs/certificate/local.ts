// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Local keys and certificates.
 *
 * By design considerations, the feature is using the fortios.json.GenericApi resource as documented below.
 *
 * ## Example
 *
 * ### Delete Certificate:
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumiverse/fortios";
 *
 * const trname1 = new fortios.system.Autoscript("trname1", {
 *     interval: 1,
 *     outputSize: 10,
 *     repeat: 1,
 *     script: `config vpn certificate local
 * delete testcer
 * end
 *
 * `,
 *     start: "auto",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export class Local extends pulumi.CustomResource {
    /**
     * Get an existing Local resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LocalState, opts?: pulumi.CustomResourceOptions): Local {
        return new Local(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:certificate/local:Local';

    /**
     * Returns true if the given object is an instance of Local.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Local {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Local.__pulumiType;
    }

    public readonly acmeCaUrl!: pulumi.Output<string>;
    public readonly acmeDomain!: pulumi.Output<string>;
    public readonly acmeEmail!: pulumi.Output<string>;
    public readonly acmeRenewWindow!: pulumi.Output<number>;
    public readonly acmeRsaKeySize!: pulumi.Output<number>;
    public readonly autoRegenerateDays!: pulumi.Output<number>;
    public readonly autoRegenerateDaysWarning!: pulumi.Output<number>;
    public readonly caIdentifier!: pulumi.Output<string>;
    public readonly certificate!: pulumi.Output<string>;
    public readonly cmpPath!: pulumi.Output<string>;
    public readonly cmpRegenerationMethod!: pulumi.Output<string>;
    public readonly cmpServer!: pulumi.Output<string>;
    public readonly cmpServerCert!: pulumi.Output<string>;
    public readonly comments!: pulumi.Output<string>;
    public readonly csr!: pulumi.Output<string>;
    public readonly enrollProtocol!: pulumi.Output<string>;
    public readonly estCaId!: pulumi.Output<string>;
    public readonly estClientCert!: pulumi.Output<string>;
    public readonly estHttpPassword!: pulumi.Output<string>;
    public readonly estHttpUsername!: pulumi.Output<string>;
    public readonly estServer!: pulumi.Output<string>;
    public readonly estServerCert!: pulumi.Output<string>;
    public readonly estSrpPassword!: pulumi.Output<string>;
    public readonly estSrpUsername!: pulumi.Output<string>;
    public readonly ikeLocalid!: pulumi.Output<string>;
    public readonly ikeLocalidType!: pulumi.Output<string>;
    public readonly lastUpdated!: pulumi.Output<number>;
    public readonly name!: pulumi.Output<string>;
    public readonly nameEncoding!: pulumi.Output<string>;
    public readonly password!: pulumi.Output<string | undefined>;
    public readonly privateKey!: pulumi.Output<string>;
    public readonly privateKeyRetain!: pulumi.Output<string>;
    public readonly range!: pulumi.Output<string>;
    public readonly scepPassword!: pulumi.Output<string | undefined>;
    public readonly scepUrl!: pulumi.Output<string>;
    public readonly source!: pulumi.Output<string>;
    public readonly sourceIp!: pulumi.Output<string>;
    public readonly state!: pulumi.Output<string>;
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a Local resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LocalArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LocalArgs | LocalState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LocalState | undefined;
            resourceInputs["acmeCaUrl"] = state ? state.acmeCaUrl : undefined;
            resourceInputs["acmeDomain"] = state ? state.acmeDomain : undefined;
            resourceInputs["acmeEmail"] = state ? state.acmeEmail : undefined;
            resourceInputs["acmeRenewWindow"] = state ? state.acmeRenewWindow : undefined;
            resourceInputs["acmeRsaKeySize"] = state ? state.acmeRsaKeySize : undefined;
            resourceInputs["autoRegenerateDays"] = state ? state.autoRegenerateDays : undefined;
            resourceInputs["autoRegenerateDaysWarning"] = state ? state.autoRegenerateDaysWarning : undefined;
            resourceInputs["caIdentifier"] = state ? state.caIdentifier : undefined;
            resourceInputs["certificate"] = state ? state.certificate : undefined;
            resourceInputs["cmpPath"] = state ? state.cmpPath : undefined;
            resourceInputs["cmpRegenerationMethod"] = state ? state.cmpRegenerationMethod : undefined;
            resourceInputs["cmpServer"] = state ? state.cmpServer : undefined;
            resourceInputs["cmpServerCert"] = state ? state.cmpServerCert : undefined;
            resourceInputs["comments"] = state ? state.comments : undefined;
            resourceInputs["csr"] = state ? state.csr : undefined;
            resourceInputs["enrollProtocol"] = state ? state.enrollProtocol : undefined;
            resourceInputs["estCaId"] = state ? state.estCaId : undefined;
            resourceInputs["estClientCert"] = state ? state.estClientCert : undefined;
            resourceInputs["estHttpPassword"] = state ? state.estHttpPassword : undefined;
            resourceInputs["estHttpUsername"] = state ? state.estHttpUsername : undefined;
            resourceInputs["estServer"] = state ? state.estServer : undefined;
            resourceInputs["estServerCert"] = state ? state.estServerCert : undefined;
            resourceInputs["estSrpPassword"] = state ? state.estSrpPassword : undefined;
            resourceInputs["estSrpUsername"] = state ? state.estSrpUsername : undefined;
            resourceInputs["ikeLocalid"] = state ? state.ikeLocalid : undefined;
            resourceInputs["ikeLocalidType"] = state ? state.ikeLocalidType : undefined;
            resourceInputs["lastUpdated"] = state ? state.lastUpdated : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nameEncoding"] = state ? state.nameEncoding : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["privateKey"] = state ? state.privateKey : undefined;
            resourceInputs["privateKeyRetain"] = state ? state.privateKeyRetain : undefined;
            resourceInputs["range"] = state ? state.range : undefined;
            resourceInputs["scepPassword"] = state ? state.scepPassword : undefined;
            resourceInputs["scepUrl"] = state ? state.scepUrl : undefined;
            resourceInputs["source"] = state ? state.source : undefined;
            resourceInputs["sourceIp"] = state ? state.sourceIp : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as LocalArgs | undefined;
            if ((!args || args.privateKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'privateKey'");
            }
            resourceInputs["acmeCaUrl"] = args ? args.acmeCaUrl : undefined;
            resourceInputs["acmeDomain"] = args ? args.acmeDomain : undefined;
            resourceInputs["acmeEmail"] = args ? args.acmeEmail : undefined;
            resourceInputs["acmeRenewWindow"] = args ? args.acmeRenewWindow : undefined;
            resourceInputs["acmeRsaKeySize"] = args ? args.acmeRsaKeySize : undefined;
            resourceInputs["autoRegenerateDays"] = args ? args.autoRegenerateDays : undefined;
            resourceInputs["autoRegenerateDaysWarning"] = args ? args.autoRegenerateDaysWarning : undefined;
            resourceInputs["caIdentifier"] = args ? args.caIdentifier : undefined;
            resourceInputs["certificate"] = args ? args.certificate : undefined;
            resourceInputs["cmpPath"] = args ? args.cmpPath : undefined;
            resourceInputs["cmpRegenerationMethod"] = args ? args.cmpRegenerationMethod : undefined;
            resourceInputs["cmpServer"] = args ? args.cmpServer : undefined;
            resourceInputs["cmpServerCert"] = args ? args.cmpServerCert : undefined;
            resourceInputs["comments"] = args ? args.comments : undefined;
            resourceInputs["csr"] = args ? args.csr : undefined;
            resourceInputs["enrollProtocol"] = args ? args.enrollProtocol : undefined;
            resourceInputs["estCaId"] = args ? args.estCaId : undefined;
            resourceInputs["estClientCert"] = args ? args.estClientCert : undefined;
            resourceInputs["estHttpPassword"] = args ? args.estHttpPassword : undefined;
            resourceInputs["estHttpUsername"] = args ? args.estHttpUsername : undefined;
            resourceInputs["estServer"] = args ? args.estServer : undefined;
            resourceInputs["estServerCert"] = args ? args.estServerCert : undefined;
            resourceInputs["estSrpPassword"] = args ? args.estSrpPassword : undefined;
            resourceInputs["estSrpUsername"] = args ? args.estSrpUsername : undefined;
            resourceInputs["ikeLocalid"] = args ? args.ikeLocalid : undefined;
            resourceInputs["ikeLocalidType"] = args ? args.ikeLocalidType : undefined;
            resourceInputs["lastUpdated"] = args ? args.lastUpdated : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nameEncoding"] = args ? args.nameEncoding : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["privateKey"] = args?.privateKey ? pulumi.secret(args.privateKey) : undefined;
            resourceInputs["privateKeyRetain"] = args ? args.privateKeyRetain : undefined;
            resourceInputs["range"] = args ? args.range : undefined;
            resourceInputs["scepPassword"] = args?.scepPassword ? pulumi.secret(args.scepPassword) : undefined;
            resourceInputs["scepUrl"] = args ? args.scepUrl : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
            resourceInputs["sourceIp"] = args ? args.sourceIp : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password", "privateKey", "scepPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Local.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Local resources.
 */
export interface LocalState {
    acmeCaUrl?: pulumi.Input<string>;
    acmeDomain?: pulumi.Input<string>;
    acmeEmail?: pulumi.Input<string>;
    acmeRenewWindow?: pulumi.Input<number>;
    acmeRsaKeySize?: pulumi.Input<number>;
    autoRegenerateDays?: pulumi.Input<number>;
    autoRegenerateDaysWarning?: pulumi.Input<number>;
    caIdentifier?: pulumi.Input<string>;
    certificate?: pulumi.Input<string>;
    cmpPath?: pulumi.Input<string>;
    cmpRegenerationMethod?: pulumi.Input<string>;
    cmpServer?: pulumi.Input<string>;
    cmpServerCert?: pulumi.Input<string>;
    comments?: pulumi.Input<string>;
    csr?: pulumi.Input<string>;
    enrollProtocol?: pulumi.Input<string>;
    estCaId?: pulumi.Input<string>;
    estClientCert?: pulumi.Input<string>;
    estHttpPassword?: pulumi.Input<string>;
    estHttpUsername?: pulumi.Input<string>;
    estServer?: pulumi.Input<string>;
    estServerCert?: pulumi.Input<string>;
    estSrpPassword?: pulumi.Input<string>;
    estSrpUsername?: pulumi.Input<string>;
    ikeLocalid?: pulumi.Input<string>;
    ikeLocalidType?: pulumi.Input<string>;
    lastUpdated?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    nameEncoding?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    privateKey?: pulumi.Input<string>;
    privateKeyRetain?: pulumi.Input<string>;
    range?: pulumi.Input<string>;
    scepPassword?: pulumi.Input<string>;
    scepUrl?: pulumi.Input<string>;
    source?: pulumi.Input<string>;
    sourceIp?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Local resource.
 */
export interface LocalArgs {
    acmeCaUrl?: pulumi.Input<string>;
    acmeDomain?: pulumi.Input<string>;
    acmeEmail?: pulumi.Input<string>;
    acmeRenewWindow?: pulumi.Input<number>;
    acmeRsaKeySize?: pulumi.Input<number>;
    autoRegenerateDays?: pulumi.Input<number>;
    autoRegenerateDaysWarning?: pulumi.Input<number>;
    caIdentifier?: pulumi.Input<string>;
    certificate?: pulumi.Input<string>;
    cmpPath?: pulumi.Input<string>;
    cmpRegenerationMethod?: pulumi.Input<string>;
    cmpServer?: pulumi.Input<string>;
    cmpServerCert?: pulumi.Input<string>;
    comments?: pulumi.Input<string>;
    csr?: pulumi.Input<string>;
    enrollProtocol?: pulumi.Input<string>;
    estCaId?: pulumi.Input<string>;
    estClientCert?: pulumi.Input<string>;
    estHttpPassword?: pulumi.Input<string>;
    estHttpUsername?: pulumi.Input<string>;
    estServer?: pulumi.Input<string>;
    estServerCert?: pulumi.Input<string>;
    estSrpPassword?: pulumi.Input<string>;
    estSrpUsername?: pulumi.Input<string>;
    ikeLocalid?: pulumi.Input<string>;
    ikeLocalidType?: pulumi.Input<string>;
    lastUpdated?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    nameEncoding?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    privateKey: pulumi.Input<string>;
    privateKeyRetain?: pulumi.Input<string>;
    range?: pulumi.Input<string>;
    scepPassword?: pulumi.Input<string>;
    scepUrl?: pulumi.Input<string>;
    source?: pulumi.Input<string>;
    sourceIp?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}
