// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * FortiGate controller configuration. Applies to FortiOS Version `>= 7.2.1`.
 *
 * ## Import
 *
 * ExtensionController Fortigate can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:extensioncontroller/fortigate:Fortigate labelname {{name}}
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:extensioncontroller/fortigate:Fortigate labelname {{name}}
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Fortigate extends pulumi.CustomResource {
    /**
     * Get an existing Fortigate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FortigateState, opts?: pulumi.CustomResourceOptions): Fortigate {
        return new Fortigate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:extensioncontroller/fortigate:Fortigate';

    /**
     * Returns true if the given object is an instance of Fortigate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Fortigate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Fortigate.__pulumiType;
    }

    /**
     * Enable/disable FortiGate administration.
     */
    public readonly authorized!: pulumi.Output<string>;
    /**
     * Description.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * device-id
     */
    public readonly deviceId!: pulumi.Output<number>;
    /**
     * FortiGate serial number.
     */
    public readonly fosid!: pulumi.Output<string>;
    /**
     * FortiGate hostname.
     */
    public readonly hostname!: pulumi.Output<string>;
    /**
     * FortiGate entry name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * FortiGate profile configuration.
     */
    public readonly profile!: pulumi.Output<string>;
    /**
     * VDOM.
     */
    public readonly vdom!: pulumi.Output<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a Fortigate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FortigateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FortigateArgs | FortigateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FortigateState | undefined;
            resourceInputs["authorized"] = state ? state.authorized : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["deviceId"] = state ? state.deviceId : undefined;
            resourceInputs["fosid"] = state ? state.fosid : undefined;
            resourceInputs["hostname"] = state ? state.hostname : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["profile"] = state ? state.profile : undefined;
            resourceInputs["vdom"] = state ? state.vdom : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as FortigateArgs | undefined;
            resourceInputs["authorized"] = args ? args.authorized : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["deviceId"] = args ? args.deviceId : undefined;
            resourceInputs["fosid"] = args ? args.fosid : undefined;
            resourceInputs["hostname"] = args ? args.hostname : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["profile"] = args ? args.profile : undefined;
            resourceInputs["vdom"] = args ? args.vdom : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Fortigate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Fortigate resources.
 */
export interface FortigateState {
    /**
     * Enable/disable FortiGate administration.
     */
    authorized?: pulumi.Input<string>;
    /**
     * Description.
     */
    description?: pulumi.Input<string>;
    /**
     * device-id
     */
    deviceId?: pulumi.Input<number>;
    /**
     * FortiGate serial number.
     */
    fosid?: pulumi.Input<string>;
    /**
     * FortiGate hostname.
     */
    hostname?: pulumi.Input<string>;
    /**
     * FortiGate entry name.
     */
    name?: pulumi.Input<string>;
    /**
     * FortiGate profile configuration.
     */
    profile?: pulumi.Input<string>;
    /**
     * VDOM.
     */
    vdom?: pulumi.Input<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Fortigate resource.
 */
export interface FortigateArgs {
    /**
     * Enable/disable FortiGate administration.
     */
    authorized?: pulumi.Input<string>;
    /**
     * Description.
     */
    description?: pulumi.Input<string>;
    /**
     * device-id
     */
    deviceId?: pulumi.Input<number>;
    /**
     * FortiGate serial number.
     */
    fosid?: pulumi.Input<string>;
    /**
     * FortiGate hostname.
     */
    hostname?: pulumi.Input<string>;
    /**
     * FortiGate entry name.
     */
    name?: pulumi.Input<string>;
    /**
     * FortiGate profile configuration.
     */
    profile?: pulumi.Input<string>;
    /**
     * VDOM.
     */
    vdom?: pulumi.Input<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
