// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Configure inter wireless controller operation.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumiverse/fortios";
 *
 * const trname = new fortios.wirelesscontroller.Intercontroller("trname", {
 *     fastFailoverMax: 10,
 *     fastFailoverWait: 10,
 *     interControllerKey: "ENC XXXX",
 *     interControllerMode: "disable",
 *     interControllerPri: "primary",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * WirelessController InterController can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:wirelesscontroller/intercontroller:Intercontroller labelname WirelessControllerInterController
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:wirelesscontroller/intercontroller:Intercontroller labelname WirelessControllerInterController
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Intercontroller extends pulumi.CustomResource {
    /**
     * Get an existing Intercontroller resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IntercontrollerState, opts?: pulumi.CustomResourceOptions): Intercontroller {
        return new Intercontroller(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:wirelesscontroller/intercontroller:Intercontroller';

    /**
     * Returns true if the given object is an instance of Intercontroller.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Intercontroller {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Intercontroller.__pulumiType;
    }

    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * Maximum number of retransmissions for fast failover HA messages between peer wireless controllers (3 - 64, default = 10).
     */
    public readonly fastFailoverMax!: pulumi.Output<number>;
    /**
     * Minimum wait time before an AP transitions from secondary controller to primary controller (10 - 86400 sec, default = 10).
     */
    public readonly fastFailoverWait!: pulumi.Output<number>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    /**
     * Secret key for inter-controller communications.
     */
    public readonly interControllerKey!: pulumi.Output<string | undefined>;
    /**
     * Configure inter-controller mode (disable, l2-roaming, 1+1, default = disable). Valid values: `disable`, `l2-roaming`, `1+1`.
     */
    public readonly interControllerMode!: pulumi.Output<string>;
    /**
     * Fast failover peer wireless controller list. The structure of `interControllerPeer` block is documented below.
     */
    public readonly interControllerPeers!: pulumi.Output<outputs.wirelesscontroller.IntercontrollerInterControllerPeer[] | undefined>;
    /**
     * Configure inter-controller's priority (primary or secondary, default = primary). Valid values: `primary`, `secondary`.
     */
    public readonly interControllerPri!: pulumi.Output<string>;
    /**
     * Enable/disable layer 3 roaming (default = disable). Valid values: `enable`, `disable`.
     */
    public readonly l3Roaming!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a Intercontroller resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: IntercontrollerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IntercontrollerArgs | IntercontrollerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IntercontrollerState | undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["fastFailoverMax"] = state ? state.fastFailoverMax : undefined;
            resourceInputs["fastFailoverWait"] = state ? state.fastFailoverWait : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["interControllerKey"] = state ? state.interControllerKey : undefined;
            resourceInputs["interControllerMode"] = state ? state.interControllerMode : undefined;
            resourceInputs["interControllerPeers"] = state ? state.interControllerPeers : undefined;
            resourceInputs["interControllerPri"] = state ? state.interControllerPri : undefined;
            resourceInputs["l3Roaming"] = state ? state.l3Roaming : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as IntercontrollerArgs | undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["fastFailoverMax"] = args ? args.fastFailoverMax : undefined;
            resourceInputs["fastFailoverWait"] = args ? args.fastFailoverWait : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["interControllerKey"] = args?.interControllerKey ? pulumi.secret(args.interControllerKey) : undefined;
            resourceInputs["interControllerMode"] = args ? args.interControllerMode : undefined;
            resourceInputs["interControllerPeers"] = args ? args.interControllerPeers : undefined;
            resourceInputs["interControllerPri"] = args ? args.interControllerPri : undefined;
            resourceInputs["l3Roaming"] = args ? args.l3Roaming : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["interControllerKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Intercontroller.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Intercontroller resources.
 */
export interface IntercontrollerState {
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Maximum number of retransmissions for fast failover HA messages between peer wireless controllers (3 - 64, default = 10).
     */
    fastFailoverMax?: pulumi.Input<number>;
    /**
     * Minimum wait time before an AP transitions from secondary controller to primary controller (10 - 86400 sec, default = 10).
     */
    fastFailoverWait?: pulumi.Input<number>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * Secret key for inter-controller communications.
     */
    interControllerKey?: pulumi.Input<string>;
    /**
     * Configure inter-controller mode (disable, l2-roaming, 1+1, default = disable). Valid values: `disable`, `l2-roaming`, `1+1`.
     */
    interControllerMode?: pulumi.Input<string>;
    /**
     * Fast failover peer wireless controller list. The structure of `interControllerPeer` block is documented below.
     */
    interControllerPeers?: pulumi.Input<pulumi.Input<inputs.wirelesscontroller.IntercontrollerInterControllerPeer>[]>;
    /**
     * Configure inter-controller's priority (primary or secondary, default = primary). Valid values: `primary`, `secondary`.
     */
    interControllerPri?: pulumi.Input<string>;
    /**
     * Enable/disable layer 3 roaming (default = disable). Valid values: `enable`, `disable`.
     */
    l3Roaming?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Intercontroller resource.
 */
export interface IntercontrollerArgs {
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Maximum number of retransmissions for fast failover HA messages between peer wireless controllers (3 - 64, default = 10).
     */
    fastFailoverMax?: pulumi.Input<number>;
    /**
     * Minimum wait time before an AP transitions from secondary controller to primary controller (10 - 86400 sec, default = 10).
     */
    fastFailoverWait?: pulumi.Input<number>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * Secret key for inter-controller communications.
     */
    interControllerKey?: pulumi.Input<string>;
    /**
     * Configure inter-controller mode (disable, l2-roaming, 1+1, default = disable). Valid values: `disable`, `l2-roaming`, `1+1`.
     */
    interControllerMode?: pulumi.Input<string>;
    /**
     * Fast failover peer wireless controller list. The structure of `interControllerPeer` block is documented below.
     */
    interControllerPeers?: pulumi.Input<pulumi.Input<inputs.wirelesscontroller.IntercontrollerInterControllerPeer>[]>;
    /**
     * Configure inter-controller's priority (primary or secondary, default = primary). Valid values: `primary`, `secondary`.
     */
    interControllerPri?: pulumi.Input<string>;
    /**
     * Enable/disable layer 3 roaming (default = disable). Valid values: `enable`, `disable`.
     */
    l3Roaming?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
