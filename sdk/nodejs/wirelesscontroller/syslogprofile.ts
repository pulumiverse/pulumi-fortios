// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Configure Wireless Termination Points (WTP) system log server profile. Applies to FortiOS Version `>= 7.0.2`.
 *
 * ## Import
 *
 * WirelessController SyslogProfile can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:wirelesscontroller/syslogprofile:Syslogprofile labelname {{name}}
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:wirelesscontroller/syslogprofile:Syslogprofile labelname {{name}}
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Syslogprofile extends pulumi.CustomResource {
    /**
     * Get an existing Syslogprofile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SyslogprofileState, opts?: pulumi.CustomResourceOptions): Syslogprofile {
        return new Syslogprofile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:wirelesscontroller/syslogprofile:Syslogprofile';

    /**
     * Returns true if the given object is an instance of Syslogprofile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Syslogprofile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Syslogprofile.__pulumiType;
    }

    /**
     * Comment.
     */
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * Lowest level of log messages that FortiAP units send to this server (default = information) Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debugging`.
     */
    public readonly logLevel!: pulumi.Output<string>;
    /**
     * WTP system log server profile name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Syslog server address type (default = IP) Valid values: `fqdn`, `ip`.
     */
    public readonly serverAddrType!: pulumi.Output<string>;
    /**
     * FQDN of syslog server that FortiAP units send log messages to.
     */
    public readonly serverFqdn!: pulumi.Output<string>;
    /**
     * IP address of syslog server that FortiAP units send log messages to.
     */
    public readonly serverIp!: pulumi.Output<string>;
    /**
     * Port number of syslog server that FortiAP units send log messages to (default = 514).
     */
    public readonly serverPort!: pulumi.Output<number>;
    /**
     * Enable/disable FortiAP units to send log messages to a syslog server (default = enable). Valid values: `enable`, `disable`.
     */
    public readonly serverStatus!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string>;

    /**
     * Create a Syslogprofile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SyslogprofileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SyslogprofileArgs | SyslogprofileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SyslogprofileState | undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["logLevel"] = state ? state.logLevel : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["serverAddrType"] = state ? state.serverAddrType : undefined;
            resourceInputs["serverFqdn"] = state ? state.serverFqdn : undefined;
            resourceInputs["serverIp"] = state ? state.serverIp : undefined;
            resourceInputs["serverPort"] = state ? state.serverPort : undefined;
            resourceInputs["serverStatus"] = state ? state.serverStatus : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as SyslogprofileArgs | undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["logLevel"] = args ? args.logLevel : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["serverAddrType"] = args ? args.serverAddrType : undefined;
            resourceInputs["serverFqdn"] = args ? args.serverFqdn : undefined;
            resourceInputs["serverIp"] = args ? args.serverIp : undefined;
            resourceInputs["serverPort"] = args ? args.serverPort : undefined;
            resourceInputs["serverStatus"] = args ? args.serverStatus : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Syslogprofile.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Syslogprofile resources.
 */
export interface SyslogprofileState {
    /**
     * Comment.
     */
    comment?: pulumi.Input<string>;
    /**
     * Lowest level of log messages that FortiAP units send to this server (default = information) Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debugging`.
     */
    logLevel?: pulumi.Input<string>;
    /**
     * WTP system log server profile name.
     */
    name?: pulumi.Input<string>;
    /**
     * Syslog server address type (default = IP) Valid values: `fqdn`, `ip`.
     */
    serverAddrType?: pulumi.Input<string>;
    /**
     * FQDN of syslog server that FortiAP units send log messages to.
     */
    serverFqdn?: pulumi.Input<string>;
    /**
     * IP address of syslog server that FortiAP units send log messages to.
     */
    serverIp?: pulumi.Input<string>;
    /**
     * Port number of syslog server that FortiAP units send log messages to (default = 514).
     */
    serverPort?: pulumi.Input<number>;
    /**
     * Enable/disable FortiAP units to send log messages to a syslog server (default = enable). Valid values: `enable`, `disable`.
     */
    serverStatus?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Syslogprofile resource.
 */
export interface SyslogprofileArgs {
    /**
     * Comment.
     */
    comment?: pulumi.Input<string>;
    /**
     * Lowest level of log messages that FortiAP units send to this server (default = information) Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debugging`.
     */
    logLevel?: pulumi.Input<string>;
    /**
     * WTP system log server profile name.
     */
    name?: pulumi.Input<string>;
    /**
     * Syslog server address type (default = IP) Valid values: `fqdn`, `ip`.
     */
    serverAddrType?: pulumi.Input<string>;
    /**
     * FQDN of syslog server that FortiAP units send log messages to.
     */
    serverFqdn?: pulumi.Input<string>;
    /**
     * IP address of syslog server that FortiAP units send log messages to.
     */
    serverIp?: pulumi.Input<string>;
    /**
     * Port number of syslog server that FortiAP units send log messages to (default = 514).
     */
    serverPort?: pulumi.Input<number>;
    /**
     * Enable/disable FortiAP units to send log messages to a syslog server (default = enable). Valid values: `enable`, `disable`.
     */
    serverStatus?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
