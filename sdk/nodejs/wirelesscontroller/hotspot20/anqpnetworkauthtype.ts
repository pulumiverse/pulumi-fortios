// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Configure network authentication type.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumiverse/fortios";
 *
 * const trname = new fortios.wirelesscontroller.hotspot20.Anqpnetworkauthtype("trname", {
 *     authType: "acceptance-of-terms",
 *     url: "www.example.com",
 * });
 * ```
 *
 * ## Import
 *
 * WirelessControllerHotspot20 AnqpNetworkAuthType can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:wirelesscontroller/hotspot20/anqpnetworkauthtype:Anqpnetworkauthtype labelname {{name}}
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:wirelesscontroller/hotspot20/anqpnetworkauthtype:Anqpnetworkauthtype labelname {{name}}
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Anqpnetworkauthtype extends pulumi.CustomResource {
    /**
     * Get an existing Anqpnetworkauthtype resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AnqpnetworkauthtypeState, opts?: pulumi.CustomResourceOptions): Anqpnetworkauthtype {
        return new Anqpnetworkauthtype(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:wirelesscontroller/hotspot20/anqpnetworkauthtype:Anqpnetworkauthtype';

    /**
     * Returns true if the given object is an instance of Anqpnetworkauthtype.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Anqpnetworkauthtype {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Anqpnetworkauthtype.__pulumiType;
    }

    /**
     * Network authentication type. Valid values: `acceptance-of-terms`, `online-enrollment`, `http-redirection`, `dns-redirection`.
     */
    public readonly authType!: pulumi.Output<string>;
    /**
     * Authentication type name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Redirect URL.
     */
    public readonly url!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a Anqpnetworkauthtype resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AnqpnetworkauthtypeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AnqpnetworkauthtypeArgs | AnqpnetworkauthtypeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AnqpnetworkauthtypeState | undefined;
            resourceInputs["authType"] = state ? state.authType : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["url"] = state ? state.url : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as AnqpnetworkauthtypeArgs | undefined;
            resourceInputs["authType"] = args ? args.authType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["url"] = args ? args.url : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Anqpnetworkauthtype.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Anqpnetworkauthtype resources.
 */
export interface AnqpnetworkauthtypeState {
    /**
     * Network authentication type. Valid values: `acceptance-of-terms`, `online-enrollment`, `http-redirection`, `dns-redirection`.
     */
    authType?: pulumi.Input<string>;
    /**
     * Authentication type name.
     */
    name?: pulumi.Input<string>;
    /**
     * Redirect URL.
     */
    url?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Anqpnetworkauthtype resource.
 */
export interface AnqpnetworkauthtypeArgs {
    /**
     * Network authentication type. Valid values: `acceptance-of-terms`, `online-enrollment`, `http-redirection`, `dns-redirection`.
     */
    authType?: pulumi.Input<string>;
    /**
     * Authentication type name.
     */
    name?: pulumi.Input<string>;
    /**
     * Redirect URL.
     */
    url?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
