// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as utilities from "../../utilities";

/**
 * Configure hotspot profile.
 *
 * ## Import
 *
 * WirelessControllerHotspot20 HsProfile can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:wirelesscontroller/hotspot20/hsprofile:Hsprofile labelname {{name}}
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:wirelesscontroller/hotspot20/hsprofile:Hsprofile labelname {{name}}
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Hsprofile extends pulumi.CustomResource {
    /**
     * Get an existing Hsprofile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HsprofileState, opts?: pulumi.CustomResourceOptions): Hsprofile {
        return new Hsprofile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:wirelesscontroller/hotspot20/hsprofile:Hsprofile';

    /**
     * Returns true if the given object is an instance of Hsprofile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Hsprofile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Hsprofile.__pulumiType;
    }

    /**
     * Enable/disable additional step required for access (ASRA). Valid values: `enable`, `disable`.
     */
    public readonly accessNetworkAsra!: pulumi.Output<string>;
    /**
     * Enable/disable emergency services reachable (ESR). Valid values: `enable`, `disable`.
     */
    public readonly accessNetworkEsr!: pulumi.Output<string>;
    /**
     * Enable/disable connectivity to the Internet. Valid values: `enable`, `disable`.
     */
    public readonly accessNetworkInternet!: pulumi.Output<string>;
    /**
     * Access network type. Valid values: `private-network`, `private-network-with-guest-access`, `chargeable-public-network`, `free-public-network`, `personal-device-network`, `emergency-services-only-network`, `test-or-experimental`, `wildcard`.
     */
    public readonly accessNetworkType!: pulumi.Output<string>;
    /**
     * Enable/disable unauthenticated emergency service accessible (UESA). Valid values: `enable`, `disable`.
     */
    public readonly accessNetworkUesa!: pulumi.Output<string>;
    /**
     * Advice of charge.
     */
    public readonly adviceOfCharge!: pulumi.Output<string>;
    /**
     * ANQP Domain ID (0-65535).
     */
    public readonly anqpDomainId!: pulumi.Output<number>;
    /**
     * Enable/disable basic service set (BSS) transition Support. Valid values: `enable`, `disable`.
     */
    public readonly bssTransition!: pulumi.Output<string>;
    /**
     * Connection capability name.
     */
    public readonly connCap!: pulumi.Output<string>;
    /**
     * Deauthentication request timeout (in seconds).
     */
    public readonly deauthRequestTimeout!: pulumi.Output<number>;
    /**
     * Enable/disable downstream group-addressed forwarding (DGAF). Valid values: `enable`, `disable`.
     */
    public readonly dgaf!: pulumi.Output<string>;
    /**
     * Domain name.
     */
    public readonly domainName!: pulumi.Output<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * GAS comeback delay (0 or 100 - 4000 milliseconds, default = 500).
     */
    public readonly gasComebackDelay!: pulumi.Output<number>;
    /**
     * GAS fragmentation limit (512 - 4096, default = 1024).
     */
    public readonly gasFragmentationLimit!: pulumi.Output<number>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    /**
     * Homogeneous extended service set identifier (HESSID).
     */
    public readonly hessid!: pulumi.Output<string>;
    /**
     * IP address type name.
     */
    public readonly ipAddrType!: pulumi.Output<string>;
    /**
     * Enable/disable Layer 2 traffic inspection and filtering. Valid values: `enable`, `disable`.
     */
    public readonly l2tif!: pulumi.Output<string>;
    /**
     * 3GPP PLMN name.
     */
    public readonly n3gppPlmn!: pulumi.Output<string>;
    /**
     * NAI realm list name.
     */
    public readonly naiRealm!: pulumi.Output<string>;
    /**
     * Hotspot profile name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Network authentication name.
     */
    public readonly networkAuth!: pulumi.Output<string>;
    /**
     * Operator friendly name.
     */
    public readonly operFriendlyName!: pulumi.Output<string>;
    /**
     * Operator icon.
     */
    public readonly operIcon!: pulumi.Output<string>;
    /**
     * OSU Provider NAI.
     */
    public readonly osuProviderNai!: pulumi.Output<string>;
    /**
     * Manually selected list of OSU provider(s). The structure of `osuProvider` block is documented below.
     */
    public readonly osuProviders!: pulumi.Output<outputs.wirelesscontroller.hotspot20.HsprofileOsuProvider[] | undefined>;
    /**
     * Online sign up (OSU) SSID.
     */
    public readonly osuSsid!: pulumi.Output<string>;
    /**
     * Enable/disable Pre-Association Message Exchange BSSID Independent (PAME-BI). Valid values: `disable`, `enable`.
     */
    public readonly pameBi!: pulumi.Output<string>;
    /**
     * Enable/disable Proxy ARP. Valid values: `enable`, `disable`.
     */
    public readonly proxyArp!: pulumi.Output<string>;
    /**
     * QoS MAP set ID.
     */
    public readonly qosMap!: pulumi.Output<string>;
    /**
     * Hotspot 2.0 Release number (1, 2, 3, default = 2).
     */
    public readonly release!: pulumi.Output<number>;
    /**
     * Roaming consortium list name.
     */
    public readonly roamingConsortium!: pulumi.Output<string>;
    /**
     * Terms and conditions.
     */
    public readonly termsAndConditions!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;
    /**
     * Venue group. Valid values: `unspecified`, `assembly`, `business`, `educational`, `factory`, `institutional`, `mercantile`, `residential`, `storage`, `utility`, `vehicular`, `outdoor`.
     */
    public readonly venueGroup!: pulumi.Output<string>;
    /**
     * Venue name.
     */
    public readonly venueName!: pulumi.Output<string>;
    /**
     * Venue type. Valid values: `unspecified`, `arena`, `stadium`, `passenger-terminal`, `amphitheater`, `amusement-park`, `place-of-worship`, `convention-center`, `library`, `museum`, `restaurant`, `theater`, `bar`, `coffee-shop`, `zoo-or-aquarium`, `emergency-center`, `doctor-office`, `bank`, `fire-station`, `police-station`, `post-office`, `professional-office`, `research-facility`, `attorney-office`, `primary-school`, `secondary-school`, `university-or-college`, `factory`, `hospital`, `long-term-care-facility`, `rehab-center`, `group-home`, `prison-or-jail`, `retail-store`, `grocery-market`, `auto-service-station`, `shopping-mall`, `gas-station`, `private`, `hotel-or-motel`, `dormitory`, `boarding-house`, `automobile`, `airplane`, `bus`, `ferry`, `ship-or-boat`, `train`, `motor-bike`, `muni-mesh-network`, `city-park`, `rest-area`, `traffic-control`, `bus-stop`, `kiosk`.
     */
    public readonly venueType!: pulumi.Output<string>;
    /**
     * Venue name.
     */
    public readonly venueUrl!: pulumi.Output<string>;
    /**
     * WAN metric name.
     */
    public readonly wanMetrics!: pulumi.Output<string>;
    /**
     * Enable/disable wireless network management (WNM) sleep mode. Valid values: `enable`, `disable`.
     */
    public readonly wnmSleepMode!: pulumi.Output<string>;

    /**
     * Create a Hsprofile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: HsprofileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HsprofileArgs | HsprofileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HsprofileState | undefined;
            resourceInputs["accessNetworkAsra"] = state ? state.accessNetworkAsra : undefined;
            resourceInputs["accessNetworkEsr"] = state ? state.accessNetworkEsr : undefined;
            resourceInputs["accessNetworkInternet"] = state ? state.accessNetworkInternet : undefined;
            resourceInputs["accessNetworkType"] = state ? state.accessNetworkType : undefined;
            resourceInputs["accessNetworkUesa"] = state ? state.accessNetworkUesa : undefined;
            resourceInputs["adviceOfCharge"] = state ? state.adviceOfCharge : undefined;
            resourceInputs["anqpDomainId"] = state ? state.anqpDomainId : undefined;
            resourceInputs["bssTransition"] = state ? state.bssTransition : undefined;
            resourceInputs["connCap"] = state ? state.connCap : undefined;
            resourceInputs["deauthRequestTimeout"] = state ? state.deauthRequestTimeout : undefined;
            resourceInputs["dgaf"] = state ? state.dgaf : undefined;
            resourceInputs["domainName"] = state ? state.domainName : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["gasComebackDelay"] = state ? state.gasComebackDelay : undefined;
            resourceInputs["gasFragmentationLimit"] = state ? state.gasFragmentationLimit : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["hessid"] = state ? state.hessid : undefined;
            resourceInputs["ipAddrType"] = state ? state.ipAddrType : undefined;
            resourceInputs["l2tif"] = state ? state.l2tif : undefined;
            resourceInputs["n3gppPlmn"] = state ? state.n3gppPlmn : undefined;
            resourceInputs["naiRealm"] = state ? state.naiRealm : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkAuth"] = state ? state.networkAuth : undefined;
            resourceInputs["operFriendlyName"] = state ? state.operFriendlyName : undefined;
            resourceInputs["operIcon"] = state ? state.operIcon : undefined;
            resourceInputs["osuProviderNai"] = state ? state.osuProviderNai : undefined;
            resourceInputs["osuProviders"] = state ? state.osuProviders : undefined;
            resourceInputs["osuSsid"] = state ? state.osuSsid : undefined;
            resourceInputs["pameBi"] = state ? state.pameBi : undefined;
            resourceInputs["proxyArp"] = state ? state.proxyArp : undefined;
            resourceInputs["qosMap"] = state ? state.qosMap : undefined;
            resourceInputs["release"] = state ? state.release : undefined;
            resourceInputs["roamingConsortium"] = state ? state.roamingConsortium : undefined;
            resourceInputs["termsAndConditions"] = state ? state.termsAndConditions : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
            resourceInputs["venueGroup"] = state ? state.venueGroup : undefined;
            resourceInputs["venueName"] = state ? state.venueName : undefined;
            resourceInputs["venueType"] = state ? state.venueType : undefined;
            resourceInputs["venueUrl"] = state ? state.venueUrl : undefined;
            resourceInputs["wanMetrics"] = state ? state.wanMetrics : undefined;
            resourceInputs["wnmSleepMode"] = state ? state.wnmSleepMode : undefined;
        } else {
            const args = argsOrState as HsprofileArgs | undefined;
            resourceInputs["accessNetworkAsra"] = args ? args.accessNetworkAsra : undefined;
            resourceInputs["accessNetworkEsr"] = args ? args.accessNetworkEsr : undefined;
            resourceInputs["accessNetworkInternet"] = args ? args.accessNetworkInternet : undefined;
            resourceInputs["accessNetworkType"] = args ? args.accessNetworkType : undefined;
            resourceInputs["accessNetworkUesa"] = args ? args.accessNetworkUesa : undefined;
            resourceInputs["adviceOfCharge"] = args ? args.adviceOfCharge : undefined;
            resourceInputs["anqpDomainId"] = args ? args.anqpDomainId : undefined;
            resourceInputs["bssTransition"] = args ? args.bssTransition : undefined;
            resourceInputs["connCap"] = args ? args.connCap : undefined;
            resourceInputs["deauthRequestTimeout"] = args ? args.deauthRequestTimeout : undefined;
            resourceInputs["dgaf"] = args ? args.dgaf : undefined;
            resourceInputs["domainName"] = args ? args.domainName : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["gasComebackDelay"] = args ? args.gasComebackDelay : undefined;
            resourceInputs["gasFragmentationLimit"] = args ? args.gasFragmentationLimit : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["hessid"] = args ? args.hessid : undefined;
            resourceInputs["ipAddrType"] = args ? args.ipAddrType : undefined;
            resourceInputs["l2tif"] = args ? args.l2tif : undefined;
            resourceInputs["n3gppPlmn"] = args ? args.n3gppPlmn : undefined;
            resourceInputs["naiRealm"] = args ? args.naiRealm : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkAuth"] = args ? args.networkAuth : undefined;
            resourceInputs["operFriendlyName"] = args ? args.operFriendlyName : undefined;
            resourceInputs["operIcon"] = args ? args.operIcon : undefined;
            resourceInputs["osuProviderNai"] = args ? args.osuProviderNai : undefined;
            resourceInputs["osuProviders"] = args ? args.osuProviders : undefined;
            resourceInputs["osuSsid"] = args ? args.osuSsid : undefined;
            resourceInputs["pameBi"] = args ? args.pameBi : undefined;
            resourceInputs["proxyArp"] = args ? args.proxyArp : undefined;
            resourceInputs["qosMap"] = args ? args.qosMap : undefined;
            resourceInputs["release"] = args ? args.release : undefined;
            resourceInputs["roamingConsortium"] = args ? args.roamingConsortium : undefined;
            resourceInputs["termsAndConditions"] = args ? args.termsAndConditions : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
            resourceInputs["venueGroup"] = args ? args.venueGroup : undefined;
            resourceInputs["venueName"] = args ? args.venueName : undefined;
            resourceInputs["venueType"] = args ? args.venueType : undefined;
            resourceInputs["venueUrl"] = args ? args.venueUrl : undefined;
            resourceInputs["wanMetrics"] = args ? args.wanMetrics : undefined;
            resourceInputs["wnmSleepMode"] = args ? args.wnmSleepMode : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Hsprofile.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Hsprofile resources.
 */
export interface HsprofileState {
    /**
     * Enable/disable additional step required for access (ASRA). Valid values: `enable`, `disable`.
     */
    accessNetworkAsra?: pulumi.Input<string>;
    /**
     * Enable/disable emergency services reachable (ESR). Valid values: `enable`, `disable`.
     */
    accessNetworkEsr?: pulumi.Input<string>;
    /**
     * Enable/disable connectivity to the Internet. Valid values: `enable`, `disable`.
     */
    accessNetworkInternet?: pulumi.Input<string>;
    /**
     * Access network type. Valid values: `private-network`, `private-network-with-guest-access`, `chargeable-public-network`, `free-public-network`, `personal-device-network`, `emergency-services-only-network`, `test-or-experimental`, `wildcard`.
     */
    accessNetworkType?: pulumi.Input<string>;
    /**
     * Enable/disable unauthenticated emergency service accessible (UESA). Valid values: `enable`, `disable`.
     */
    accessNetworkUesa?: pulumi.Input<string>;
    /**
     * Advice of charge.
     */
    adviceOfCharge?: pulumi.Input<string>;
    /**
     * ANQP Domain ID (0-65535).
     */
    anqpDomainId?: pulumi.Input<number>;
    /**
     * Enable/disable basic service set (BSS) transition Support. Valid values: `enable`, `disable`.
     */
    bssTransition?: pulumi.Input<string>;
    /**
     * Connection capability name.
     */
    connCap?: pulumi.Input<string>;
    /**
     * Deauthentication request timeout (in seconds).
     */
    deauthRequestTimeout?: pulumi.Input<number>;
    /**
     * Enable/disable downstream group-addressed forwarding (DGAF). Valid values: `enable`, `disable`.
     */
    dgaf?: pulumi.Input<string>;
    /**
     * Domain name.
     */
    domainName?: pulumi.Input<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * GAS comeback delay (0 or 100 - 4000 milliseconds, default = 500).
     */
    gasComebackDelay?: pulumi.Input<number>;
    /**
     * GAS fragmentation limit (512 - 4096, default = 1024).
     */
    gasFragmentationLimit?: pulumi.Input<number>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * Homogeneous extended service set identifier (HESSID).
     */
    hessid?: pulumi.Input<string>;
    /**
     * IP address type name.
     */
    ipAddrType?: pulumi.Input<string>;
    /**
     * Enable/disable Layer 2 traffic inspection and filtering. Valid values: `enable`, `disable`.
     */
    l2tif?: pulumi.Input<string>;
    /**
     * 3GPP PLMN name.
     */
    n3gppPlmn?: pulumi.Input<string>;
    /**
     * NAI realm list name.
     */
    naiRealm?: pulumi.Input<string>;
    /**
     * Hotspot profile name.
     */
    name?: pulumi.Input<string>;
    /**
     * Network authentication name.
     */
    networkAuth?: pulumi.Input<string>;
    /**
     * Operator friendly name.
     */
    operFriendlyName?: pulumi.Input<string>;
    /**
     * Operator icon.
     */
    operIcon?: pulumi.Input<string>;
    /**
     * OSU Provider NAI.
     */
    osuProviderNai?: pulumi.Input<string>;
    /**
     * Manually selected list of OSU provider(s). The structure of `osuProvider` block is documented below.
     */
    osuProviders?: pulumi.Input<pulumi.Input<inputs.wirelesscontroller.hotspot20.HsprofileOsuProvider>[]>;
    /**
     * Online sign up (OSU) SSID.
     */
    osuSsid?: pulumi.Input<string>;
    /**
     * Enable/disable Pre-Association Message Exchange BSSID Independent (PAME-BI). Valid values: `disable`, `enable`.
     */
    pameBi?: pulumi.Input<string>;
    /**
     * Enable/disable Proxy ARP. Valid values: `enable`, `disable`.
     */
    proxyArp?: pulumi.Input<string>;
    /**
     * QoS MAP set ID.
     */
    qosMap?: pulumi.Input<string>;
    /**
     * Hotspot 2.0 Release number (1, 2, 3, default = 2).
     */
    release?: pulumi.Input<number>;
    /**
     * Roaming consortium list name.
     */
    roamingConsortium?: pulumi.Input<string>;
    /**
     * Terms and conditions.
     */
    termsAndConditions?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Venue group. Valid values: `unspecified`, `assembly`, `business`, `educational`, `factory`, `institutional`, `mercantile`, `residential`, `storage`, `utility`, `vehicular`, `outdoor`.
     */
    venueGroup?: pulumi.Input<string>;
    /**
     * Venue name.
     */
    venueName?: pulumi.Input<string>;
    /**
     * Venue type. Valid values: `unspecified`, `arena`, `stadium`, `passenger-terminal`, `amphitheater`, `amusement-park`, `place-of-worship`, `convention-center`, `library`, `museum`, `restaurant`, `theater`, `bar`, `coffee-shop`, `zoo-or-aquarium`, `emergency-center`, `doctor-office`, `bank`, `fire-station`, `police-station`, `post-office`, `professional-office`, `research-facility`, `attorney-office`, `primary-school`, `secondary-school`, `university-or-college`, `factory`, `hospital`, `long-term-care-facility`, `rehab-center`, `group-home`, `prison-or-jail`, `retail-store`, `grocery-market`, `auto-service-station`, `shopping-mall`, `gas-station`, `private`, `hotel-or-motel`, `dormitory`, `boarding-house`, `automobile`, `airplane`, `bus`, `ferry`, `ship-or-boat`, `train`, `motor-bike`, `muni-mesh-network`, `city-park`, `rest-area`, `traffic-control`, `bus-stop`, `kiosk`.
     */
    venueType?: pulumi.Input<string>;
    /**
     * Venue name.
     */
    venueUrl?: pulumi.Input<string>;
    /**
     * WAN metric name.
     */
    wanMetrics?: pulumi.Input<string>;
    /**
     * Enable/disable wireless network management (WNM) sleep mode. Valid values: `enable`, `disable`.
     */
    wnmSleepMode?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Hsprofile resource.
 */
export interface HsprofileArgs {
    /**
     * Enable/disable additional step required for access (ASRA). Valid values: `enable`, `disable`.
     */
    accessNetworkAsra?: pulumi.Input<string>;
    /**
     * Enable/disable emergency services reachable (ESR). Valid values: `enable`, `disable`.
     */
    accessNetworkEsr?: pulumi.Input<string>;
    /**
     * Enable/disable connectivity to the Internet. Valid values: `enable`, `disable`.
     */
    accessNetworkInternet?: pulumi.Input<string>;
    /**
     * Access network type. Valid values: `private-network`, `private-network-with-guest-access`, `chargeable-public-network`, `free-public-network`, `personal-device-network`, `emergency-services-only-network`, `test-or-experimental`, `wildcard`.
     */
    accessNetworkType?: pulumi.Input<string>;
    /**
     * Enable/disable unauthenticated emergency service accessible (UESA). Valid values: `enable`, `disable`.
     */
    accessNetworkUesa?: pulumi.Input<string>;
    /**
     * Advice of charge.
     */
    adviceOfCharge?: pulumi.Input<string>;
    /**
     * ANQP Domain ID (0-65535).
     */
    anqpDomainId?: pulumi.Input<number>;
    /**
     * Enable/disable basic service set (BSS) transition Support. Valid values: `enable`, `disable`.
     */
    bssTransition?: pulumi.Input<string>;
    /**
     * Connection capability name.
     */
    connCap?: pulumi.Input<string>;
    /**
     * Deauthentication request timeout (in seconds).
     */
    deauthRequestTimeout?: pulumi.Input<number>;
    /**
     * Enable/disable downstream group-addressed forwarding (DGAF). Valid values: `enable`, `disable`.
     */
    dgaf?: pulumi.Input<string>;
    /**
     * Domain name.
     */
    domainName?: pulumi.Input<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * GAS comeback delay (0 or 100 - 4000 milliseconds, default = 500).
     */
    gasComebackDelay?: pulumi.Input<number>;
    /**
     * GAS fragmentation limit (512 - 4096, default = 1024).
     */
    gasFragmentationLimit?: pulumi.Input<number>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * Homogeneous extended service set identifier (HESSID).
     */
    hessid?: pulumi.Input<string>;
    /**
     * IP address type name.
     */
    ipAddrType?: pulumi.Input<string>;
    /**
     * Enable/disable Layer 2 traffic inspection and filtering. Valid values: `enable`, `disable`.
     */
    l2tif?: pulumi.Input<string>;
    /**
     * 3GPP PLMN name.
     */
    n3gppPlmn?: pulumi.Input<string>;
    /**
     * NAI realm list name.
     */
    naiRealm?: pulumi.Input<string>;
    /**
     * Hotspot profile name.
     */
    name?: pulumi.Input<string>;
    /**
     * Network authentication name.
     */
    networkAuth?: pulumi.Input<string>;
    /**
     * Operator friendly name.
     */
    operFriendlyName?: pulumi.Input<string>;
    /**
     * Operator icon.
     */
    operIcon?: pulumi.Input<string>;
    /**
     * OSU Provider NAI.
     */
    osuProviderNai?: pulumi.Input<string>;
    /**
     * Manually selected list of OSU provider(s). The structure of `osuProvider` block is documented below.
     */
    osuProviders?: pulumi.Input<pulumi.Input<inputs.wirelesscontroller.hotspot20.HsprofileOsuProvider>[]>;
    /**
     * Online sign up (OSU) SSID.
     */
    osuSsid?: pulumi.Input<string>;
    /**
     * Enable/disable Pre-Association Message Exchange BSSID Independent (PAME-BI). Valid values: `disable`, `enable`.
     */
    pameBi?: pulumi.Input<string>;
    /**
     * Enable/disable Proxy ARP. Valid values: `enable`, `disable`.
     */
    proxyArp?: pulumi.Input<string>;
    /**
     * QoS MAP set ID.
     */
    qosMap?: pulumi.Input<string>;
    /**
     * Hotspot 2.0 Release number (1, 2, 3, default = 2).
     */
    release?: pulumi.Input<number>;
    /**
     * Roaming consortium list name.
     */
    roamingConsortium?: pulumi.Input<string>;
    /**
     * Terms and conditions.
     */
    termsAndConditions?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Venue group. Valid values: `unspecified`, `assembly`, `business`, `educational`, `factory`, `institutional`, `mercantile`, `residential`, `storage`, `utility`, `vehicular`, `outdoor`.
     */
    venueGroup?: pulumi.Input<string>;
    /**
     * Venue name.
     */
    venueName?: pulumi.Input<string>;
    /**
     * Venue type. Valid values: `unspecified`, `arena`, `stadium`, `passenger-terminal`, `amphitheater`, `amusement-park`, `place-of-worship`, `convention-center`, `library`, `museum`, `restaurant`, `theater`, `bar`, `coffee-shop`, `zoo-or-aquarium`, `emergency-center`, `doctor-office`, `bank`, `fire-station`, `police-station`, `post-office`, `professional-office`, `research-facility`, `attorney-office`, `primary-school`, `secondary-school`, `university-or-college`, `factory`, `hospital`, `long-term-care-facility`, `rehab-center`, `group-home`, `prison-or-jail`, `retail-store`, `grocery-market`, `auto-service-station`, `shopping-mall`, `gas-station`, `private`, `hotel-or-motel`, `dormitory`, `boarding-house`, `automobile`, `airplane`, `bus`, `ferry`, `ship-or-boat`, `train`, `motor-bike`, `muni-mesh-network`, `city-park`, `rest-area`, `traffic-control`, `bus-stop`, `kiosk`.
     */
    venueType?: pulumi.Input<string>;
    /**
     * Venue name.
     */
    venueUrl?: pulumi.Input<string>;
    /**
     * WAN metric name.
     */
    wanMetrics?: pulumi.Input<string>;
    /**
     * Enable/disable wireless network management (WNM) sleep mode. Valid values: `enable`, `disable`.
     */
    wnmSleepMode?: pulumi.Input<string>;
}
