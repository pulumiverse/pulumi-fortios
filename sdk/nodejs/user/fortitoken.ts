// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Configure FortiToken.
 *
 * ## Import
 *
 * User Fortitoken can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:user/fortitoken:Fortitoken labelname {{serial_number}}
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:user/fortitoken:Fortitoken labelname {{serial_number}}
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Fortitoken extends pulumi.CustomResource {
    /**
     * Get an existing Fortitoken resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FortitokenState, opts?: pulumi.CustomResourceOptions): Fortitoken {
        return new Fortitoken(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:user/fortitoken:Fortitoken';

    /**
     * Returns true if the given object is an instance of Fortitoken.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Fortitoken {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Fortitoken.__pulumiType;
    }

    /**
     * Mobile token user activation-code.
     */
    public readonly activationCode!: pulumi.Output<string>;
    /**
     * Mobile token user activation-code expire time.
     */
    public readonly activationExpire!: pulumi.Output<number>;
    /**
     * Comment.
     */
    public readonly comments!: pulumi.Output<string | undefined>;
    /**
     * Mobile token license.
     */
    public readonly license!: pulumi.Output<string>;
    /**
     * Device Mobile Version.
     */
    public readonly osVer!: pulumi.Output<string>;
    /**
     * Device Reg ID.
     */
    public readonly regId!: pulumi.Output<string>;
    /**
     * Token seed.
     */
    public readonly seed!: pulumi.Output<string>;
    /**
     * Serial number.
     */
    public readonly serialNumber!: pulumi.Output<string>;
    /**
     * Status Valid values: `active`, `lock`.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string>;

    /**
     * Create a Fortitoken resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FortitokenArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FortitokenArgs | FortitokenState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FortitokenState | undefined;
            resourceInputs["activationCode"] = state ? state.activationCode : undefined;
            resourceInputs["activationExpire"] = state ? state.activationExpire : undefined;
            resourceInputs["comments"] = state ? state.comments : undefined;
            resourceInputs["license"] = state ? state.license : undefined;
            resourceInputs["osVer"] = state ? state.osVer : undefined;
            resourceInputs["regId"] = state ? state.regId : undefined;
            resourceInputs["seed"] = state ? state.seed : undefined;
            resourceInputs["serialNumber"] = state ? state.serialNumber : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as FortitokenArgs | undefined;
            resourceInputs["activationCode"] = args ? args.activationCode : undefined;
            resourceInputs["activationExpire"] = args ? args.activationExpire : undefined;
            resourceInputs["comments"] = args ? args.comments : undefined;
            resourceInputs["license"] = args ? args.license : undefined;
            resourceInputs["osVer"] = args ? args.osVer : undefined;
            resourceInputs["regId"] = args ? args.regId : undefined;
            resourceInputs["seed"] = args ? args.seed : undefined;
            resourceInputs["serialNumber"] = args ? args.serialNumber : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Fortitoken.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Fortitoken resources.
 */
export interface FortitokenState {
    /**
     * Mobile token user activation-code.
     */
    activationCode?: pulumi.Input<string>;
    /**
     * Mobile token user activation-code expire time.
     */
    activationExpire?: pulumi.Input<number>;
    /**
     * Comment.
     */
    comments?: pulumi.Input<string>;
    /**
     * Mobile token license.
     */
    license?: pulumi.Input<string>;
    /**
     * Device Mobile Version.
     */
    osVer?: pulumi.Input<string>;
    /**
     * Device Reg ID.
     */
    regId?: pulumi.Input<string>;
    /**
     * Token seed.
     */
    seed?: pulumi.Input<string>;
    /**
     * Serial number.
     */
    serialNumber?: pulumi.Input<string>;
    /**
     * Status Valid values: `active`, `lock`.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Fortitoken resource.
 */
export interface FortitokenArgs {
    /**
     * Mobile token user activation-code.
     */
    activationCode?: pulumi.Input<string>;
    /**
     * Mobile token user activation-code expire time.
     */
    activationExpire?: pulumi.Input<number>;
    /**
     * Comment.
     */
    comments?: pulumi.Input<string>;
    /**
     * Mobile token license.
     */
    license?: pulumi.Input<string>;
    /**
     * Device Mobile Version.
     */
    osVer?: pulumi.Input<string>;
    /**
     * Device Reg ID.
     */
    regId?: pulumi.Input<string>;
    /**
     * Token seed.
     */
    seed?: pulumi.Input<string>;
    /**
     * Serial number.
     */
    serialNumber?: pulumi.Input<string>;
    /**
     * Status Valid values: `active`, `lock`.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
