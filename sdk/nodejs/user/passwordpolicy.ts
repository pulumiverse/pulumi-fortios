// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Configure user password policy.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumiverse/fortios";
 *
 * const trname = new fortios.user.Passwordpolicy("trname", {
 *     expireDays: 22,
 *     warnDays: 13,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * User PasswordPolicy can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:user/passwordpolicy:Passwordpolicy labelname {{name}}
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:user/passwordpolicy:Passwordpolicy labelname {{name}}
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Passwordpolicy extends pulumi.CustomResource {
    /**
     * Get an existing Passwordpolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PasswordpolicyState, opts?: pulumi.CustomResourceOptions): Passwordpolicy {
        return new Passwordpolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:user/passwordpolicy:Passwordpolicy';

    /**
     * Returns true if the given object is an instance of Passwordpolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Passwordpolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Passwordpolicy.__pulumiType;
    }

    /**
     * Time in days before the user's password expires.
     */
    public readonly expireDays!: pulumi.Output<number>;
    /**
     * Enable/disable password expiration. Valid values: `enable`, `disable`.
     */
    public readonly expireStatus!: pulumi.Output<string>;
    /**
     * Enable/disable renewal of a password that already is expired. Valid values: `enable`, `disable`.
     */
    public readonly expiredPasswordRenewal!: pulumi.Output<string>;
    /**
     * Minimum number of unique characters in new password which do not exist in old password (0 - 128, default = 0. This attribute overrides reuse-password if both are enabled).
     */
    public readonly minChangeCharacters!: pulumi.Output<number>;
    /**
     * Minimum number of lowercase characters in password (0 - 128, default = 0).
     */
    public readonly minLowerCaseLetter!: pulumi.Output<number>;
    /**
     * Minimum number of non-alphanumeric characters in password (0 - 128, default = 0).
     */
    public readonly minNonAlphanumeric!: pulumi.Output<number>;
    /**
     * Minimum number of numeric characters in password (0 - 128, default = 0).
     */
    public readonly minNumber!: pulumi.Output<number>;
    /**
     * Minimum number of uppercase characters in password (0 - 128, default = 0).
     */
    public readonly minUpperCaseLetter!: pulumi.Output<number>;
    /**
     * Minimum password length (8 - 128, default = 8).
     */
    public readonly minimumLength!: pulumi.Output<number>;
    /**
     * Password policy name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Enable/disable reuse of password. If both reuse-password and min-change-characters are enabled, min-change-characters overrides. Valid values: `enable`, `disable`.
     */
    public readonly reusePassword!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;
    /**
     * Time in days before a password expiration warning message is displayed to the user upon login.
     */
    public readonly warnDays!: pulumi.Output<number>;

    /**
     * Create a Passwordpolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: PasswordpolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PasswordpolicyArgs | PasswordpolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PasswordpolicyState | undefined;
            resourceInputs["expireDays"] = state ? state.expireDays : undefined;
            resourceInputs["expireStatus"] = state ? state.expireStatus : undefined;
            resourceInputs["expiredPasswordRenewal"] = state ? state.expiredPasswordRenewal : undefined;
            resourceInputs["minChangeCharacters"] = state ? state.minChangeCharacters : undefined;
            resourceInputs["minLowerCaseLetter"] = state ? state.minLowerCaseLetter : undefined;
            resourceInputs["minNonAlphanumeric"] = state ? state.minNonAlphanumeric : undefined;
            resourceInputs["minNumber"] = state ? state.minNumber : undefined;
            resourceInputs["minUpperCaseLetter"] = state ? state.minUpperCaseLetter : undefined;
            resourceInputs["minimumLength"] = state ? state.minimumLength : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["reusePassword"] = state ? state.reusePassword : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
            resourceInputs["warnDays"] = state ? state.warnDays : undefined;
        } else {
            const args = argsOrState as PasswordpolicyArgs | undefined;
            resourceInputs["expireDays"] = args ? args.expireDays : undefined;
            resourceInputs["expireStatus"] = args ? args.expireStatus : undefined;
            resourceInputs["expiredPasswordRenewal"] = args ? args.expiredPasswordRenewal : undefined;
            resourceInputs["minChangeCharacters"] = args ? args.minChangeCharacters : undefined;
            resourceInputs["minLowerCaseLetter"] = args ? args.minLowerCaseLetter : undefined;
            resourceInputs["minNonAlphanumeric"] = args ? args.minNonAlphanumeric : undefined;
            resourceInputs["minNumber"] = args ? args.minNumber : undefined;
            resourceInputs["minUpperCaseLetter"] = args ? args.minUpperCaseLetter : undefined;
            resourceInputs["minimumLength"] = args ? args.minimumLength : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["reusePassword"] = args ? args.reusePassword : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
            resourceInputs["warnDays"] = args ? args.warnDays : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Passwordpolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Passwordpolicy resources.
 */
export interface PasswordpolicyState {
    /**
     * Time in days before the user's password expires.
     */
    expireDays?: pulumi.Input<number>;
    /**
     * Enable/disable password expiration. Valid values: `enable`, `disable`.
     */
    expireStatus?: pulumi.Input<string>;
    /**
     * Enable/disable renewal of a password that already is expired. Valid values: `enable`, `disable`.
     */
    expiredPasswordRenewal?: pulumi.Input<string>;
    /**
     * Minimum number of unique characters in new password which do not exist in old password (0 - 128, default = 0. This attribute overrides reuse-password if both are enabled).
     */
    minChangeCharacters?: pulumi.Input<number>;
    /**
     * Minimum number of lowercase characters in password (0 - 128, default = 0).
     */
    minLowerCaseLetter?: pulumi.Input<number>;
    /**
     * Minimum number of non-alphanumeric characters in password (0 - 128, default = 0).
     */
    minNonAlphanumeric?: pulumi.Input<number>;
    /**
     * Minimum number of numeric characters in password (0 - 128, default = 0).
     */
    minNumber?: pulumi.Input<number>;
    /**
     * Minimum number of uppercase characters in password (0 - 128, default = 0).
     */
    minUpperCaseLetter?: pulumi.Input<number>;
    /**
     * Minimum password length (8 - 128, default = 8).
     */
    minimumLength?: pulumi.Input<number>;
    /**
     * Password policy name.
     */
    name?: pulumi.Input<string>;
    /**
     * Enable/disable reuse of password. If both reuse-password and min-change-characters are enabled, min-change-characters overrides. Valid values: `enable`, `disable`.
     */
    reusePassword?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Time in days before a password expiration warning message is displayed to the user upon login.
     */
    warnDays?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Passwordpolicy resource.
 */
export interface PasswordpolicyArgs {
    /**
     * Time in days before the user's password expires.
     */
    expireDays?: pulumi.Input<number>;
    /**
     * Enable/disable password expiration. Valid values: `enable`, `disable`.
     */
    expireStatus?: pulumi.Input<string>;
    /**
     * Enable/disable renewal of a password that already is expired. Valid values: `enable`, `disable`.
     */
    expiredPasswordRenewal?: pulumi.Input<string>;
    /**
     * Minimum number of unique characters in new password which do not exist in old password (0 - 128, default = 0. This attribute overrides reuse-password if both are enabled).
     */
    minChangeCharacters?: pulumi.Input<number>;
    /**
     * Minimum number of lowercase characters in password (0 - 128, default = 0).
     */
    minLowerCaseLetter?: pulumi.Input<number>;
    /**
     * Minimum number of non-alphanumeric characters in password (0 - 128, default = 0).
     */
    minNonAlphanumeric?: pulumi.Input<number>;
    /**
     * Minimum number of numeric characters in password (0 - 128, default = 0).
     */
    minNumber?: pulumi.Input<number>;
    /**
     * Minimum number of uppercase characters in password (0 - 128, default = 0).
     */
    minUpperCaseLetter?: pulumi.Input<number>;
    /**
     * Minimum password length (8 - 128, default = 8).
     */
    minimumLength?: pulumi.Input<number>;
    /**
     * Password policy name.
     */
    name?: pulumi.Input<string>;
    /**
     * Enable/disable reuse of password. If both reuse-password and min-change-characters are enabled, min-change-characters overrides. Valid values: `enable`, `disable`.
     */
    reusePassword?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Time in days before a password expiration warning message is displayed to the user upon login.
     */
    warnDays?: pulumi.Input<number>;
}
