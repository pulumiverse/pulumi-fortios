// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Configure FSSO active directory servers for polling mode.
 *
 * ## Import
 *
 * User FssoPolling can be imported using any of these accepted formats:
 *
 * ```sh
 * $ pulumi import fortios:user/fssopolling:Fssopolling labelname {{fosid}}
 * ```
 *
 * If you do not want to import arguments of block:
 *
 * $ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 * $ pulumi import fortios:user/fssopolling:Fssopolling labelname {{fosid}}
 * ```
 *
 * $ unset "FORTIOS_IMPORT_TABLE"
 */
export class Fssopolling extends pulumi.CustomResource {
    /**
     * Get an existing Fssopolling resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FssopollingState, opts?: pulumi.CustomResourceOptions): Fssopolling {
        return new Fssopolling(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:user/fssopolling:Fssopolling';

    /**
     * Returns true if the given object is an instance of Fssopolling.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Fssopolling {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Fssopolling.__pulumiType;
    }

    /**
     * LDAP Group Info. The structure of `adgrp` block is documented below.
     */
    public readonly adgrps!: pulumi.Output<outputs.user.FssopollingAdgrp[] | undefined>;
    /**
     * Default domain managed by this Active Directory server.
     */
    public readonly defaultDomain!: pulumi.Output<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * Active Directory server ID.
     */
    public readonly fosid!: pulumi.Output<number>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    /**
     * LDAP server name used in LDAP connection strings.
     */
    public readonly ldapServer!: pulumi.Output<string>;
    /**
     * Number of hours of logon history to keep, 0 means keep all history.
     */
    public readonly logonHistory!: pulumi.Output<number>;
    /**
     * Password required to log into this Active Directory server
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * Polling frequency (every 1 to 30 seconds).
     */
    public readonly pollingFrequency!: pulumi.Output<number>;
    /**
     * Port to communicate with this Active Directory server.
     */
    public readonly port!: pulumi.Output<number>;
    /**
     * Host name or IP address of the Active Directory server.
     */
    public readonly server!: pulumi.Output<string>;
    /**
     * Enable/disable support of NTLMv1 for Samba authentication. Valid values: `enable`, `disable`.
     */
    public readonly smbNtlmv1Auth!: pulumi.Output<string>;
    /**
     * Enable/disable support of SMBv1 for Samba. Valid values: `enable`, `disable`.
     */
    public readonly smbv1!: pulumi.Output<string>;
    /**
     * Enable/disable polling for the status of this Active Directory server. Valid values: `enable`, `disable`.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * User name required to log into this Active Directory server.
     */
    public readonly user!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a Fssopolling resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FssopollingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FssopollingArgs | FssopollingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FssopollingState | undefined;
            resourceInputs["adgrps"] = state ? state.adgrps : undefined;
            resourceInputs["defaultDomain"] = state ? state.defaultDomain : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["fosid"] = state ? state.fosid : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["ldapServer"] = state ? state.ldapServer : undefined;
            resourceInputs["logonHistory"] = state ? state.logonHistory : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["pollingFrequency"] = state ? state.pollingFrequency : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["server"] = state ? state.server : undefined;
            resourceInputs["smbNtlmv1Auth"] = state ? state.smbNtlmv1Auth : undefined;
            resourceInputs["smbv1"] = state ? state.smbv1 : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["user"] = state ? state.user : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as FssopollingArgs | undefined;
            if ((!args || args.ldapServer === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ldapServer'");
            }
            if ((!args || args.server === undefined) && !opts.urn) {
                throw new Error("Missing required property 'server'");
            }
            if ((!args || args.user === undefined) && !opts.urn) {
                throw new Error("Missing required property 'user'");
            }
            resourceInputs["adgrps"] = args ? args.adgrps : undefined;
            resourceInputs["defaultDomain"] = args ? args.defaultDomain : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["fosid"] = args ? args.fosid : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["ldapServer"] = args ? args.ldapServer : undefined;
            resourceInputs["logonHistory"] = args ? args.logonHistory : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["pollingFrequency"] = args ? args.pollingFrequency : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["server"] = args ? args.server : undefined;
            resourceInputs["smbNtlmv1Auth"] = args ? args.smbNtlmv1Auth : undefined;
            resourceInputs["smbv1"] = args ? args.smbv1 : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["user"] = args ? args.user : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Fssopolling.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Fssopolling resources.
 */
export interface FssopollingState {
    /**
     * LDAP Group Info. The structure of `adgrp` block is documented below.
     */
    adgrps?: pulumi.Input<pulumi.Input<inputs.user.FssopollingAdgrp>[]>;
    /**
     * Default domain managed by this Active Directory server.
     */
    defaultDomain?: pulumi.Input<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Active Directory server ID.
     */
    fosid?: pulumi.Input<number>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * LDAP server name used in LDAP connection strings.
     */
    ldapServer?: pulumi.Input<string>;
    /**
     * Number of hours of logon history to keep, 0 means keep all history.
     */
    logonHistory?: pulumi.Input<number>;
    /**
     * Password required to log into this Active Directory server
     */
    password?: pulumi.Input<string>;
    /**
     * Polling frequency (every 1 to 30 seconds).
     */
    pollingFrequency?: pulumi.Input<number>;
    /**
     * Port to communicate with this Active Directory server.
     */
    port?: pulumi.Input<number>;
    /**
     * Host name or IP address of the Active Directory server.
     */
    server?: pulumi.Input<string>;
    /**
     * Enable/disable support of NTLMv1 for Samba authentication. Valid values: `enable`, `disable`.
     */
    smbNtlmv1Auth?: pulumi.Input<string>;
    /**
     * Enable/disable support of SMBv1 for Samba. Valid values: `enable`, `disable`.
     */
    smbv1?: pulumi.Input<string>;
    /**
     * Enable/disable polling for the status of this Active Directory server. Valid values: `enable`, `disable`.
     */
    status?: pulumi.Input<string>;
    /**
     * User name required to log into this Active Directory server.
     */
    user?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Fssopolling resource.
 */
export interface FssopollingArgs {
    /**
     * LDAP Group Info. The structure of `adgrp` block is documented below.
     */
    adgrps?: pulumi.Input<pulumi.Input<inputs.user.FssopollingAdgrp>[]>;
    /**
     * Default domain managed by this Active Directory server.
     */
    defaultDomain?: pulumi.Input<string>;
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Active Directory server ID.
     */
    fosid?: pulumi.Input<number>;
    /**
     * Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
     */
    getAllTables?: pulumi.Input<string>;
    /**
     * LDAP server name used in LDAP connection strings.
     */
    ldapServer: pulumi.Input<string>;
    /**
     * Number of hours of logon history to keep, 0 means keep all history.
     */
    logonHistory?: pulumi.Input<number>;
    /**
     * Password required to log into this Active Directory server
     */
    password?: pulumi.Input<string>;
    /**
     * Polling frequency (every 1 to 30 seconds).
     */
    pollingFrequency?: pulumi.Input<number>;
    /**
     * Port to communicate with this Active Directory server.
     */
    port?: pulumi.Input<number>;
    /**
     * Host name or IP address of the Active Directory server.
     */
    server: pulumi.Input<string>;
    /**
     * Enable/disable support of NTLMv1 for Samba authentication. Valid values: `enable`, `disable`.
     */
    smbNtlmv1Auth?: pulumi.Input<string>;
    /**
     * Enable/disable support of SMBv1 for Samba. Valid values: `enable`, `disable`.
     */
    smbv1?: pulumi.Input<string>;
    /**
     * Enable/disable polling for the status of this Active Directory server. Valid values: `enable`, `disable`.
     */
    status?: pulumi.Input<string>;
    /**
     * User name required to log into this Active Directory server.
     */
    user: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
